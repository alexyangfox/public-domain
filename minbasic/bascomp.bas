  100  REM *** MINBASIC TO UGLY C COMPILER
  110  REM *** USAGE: BASCOMP IN-FILE OUT-FILE LIB-FILE
  120  REM
  130  REM *** GLOBALS ***
  140  LET Z = 0 : REM STACK POINTER
  150  LET Z1 = 100 : REM FN VAR OFFSET
  160  LET Z2 = 126 : REM NUMLABS OFFSET
  170  DIM Z9(100) : REM STACK (0..99)
  180  DIM Z9(1000) : REM NUMLABS (100..999)
  190  LET N1 = 0 : REM # NUMLABS
  200  LET S1 = 0 : REM # SYMLABS
  210  LET D = 260 : REM DATA SIZE
  220  LET B$ = '' : REM INPUT BUFFER
  230  LET P = 0 : REM INPUT POINTER
  240  LET V = 0 : REM EXPRESSION VALUE
  250  LET K = 0 : REM CONSTANT FLAG
  260  LET C = 0 : REM TOKEN ID
  270  LET L = 1, L1 = 0 : REM LINE NO
  280  LET T$ = '' : REM TOKEN TEXT
  290  LET E = 0 : REM ERROR FLAG
  300  LET Z$(0) = '' : REM SYMLABS [Z$(0)..Z$(99)]
  310  LET Y1 = 0 : REM SYMLAB POINTER
  320  LET A = 0 : REM OBJECT ADDRESS
  330  LET T1 = 0 : REM TMP LABELS
  340  LET M1 = 0 : REM # LOCAL OBJECTS
  350  LET D9 = 0 : REM DATA COUNTER
  360  LET D$ = '', E$ = '' : REM DATA LABEL

  370  REM CHAR CLASSES
  380  DEF D%(C) = ASC('0') <= C AND C <= ASC('9')
  390  DEF L%(C) = ASC('A') <= C AND C <= ASC('Z')
  400  DEF S%(C) = L%(C) OR C = ASC('$')

  410  REM CHAR ACCESS
  420  DEF B%(X) = ASC(MID$(B$, X, 1))
  430  DEF E%(X) = P > LEN(B$) AND T$ = ''

  440  REM TMP LABELS
  450  DEF T%(X) = CALL(470)
  460  GOTO 490
  470  LET T1 = T1 + 1
  480  RETURN T1

  490  REM *** MAIN ***
  500  FOR I = 0 TO 999
  510    LET Z9(I) = 0
  520  NEXT
  530  IOCTL #4, 'TRUNCATE'
  540  GOSUB &HEADER
  550  GOSUB &COMP.FILE WITH S = 1
  560  GOSUB &PRELUDE
  570  GOSUB &EMITLAB WITH X = 0, S = 2
  580  GOSUB &COMP.FILE WITH S = 2
  590  GOSUB &EMIT.L WITH A$ = 'DEFAULT: ERROR("\E\X\T"); BREAK;', S = 2
  600  GOSUB &EMIT WITH A$ = '}}}', S = 2
  610  PRINT N1; ' NUMLABS, '; S1; ' SYMLABS, '; D; ' VARS, ';
  620  PRINT D9; ' DATA, '; FRE(0); ' FREE'
  630  END

  640  LABEL &PRELUDE
  650  DATA '\N\U\L\L };'
  660  DATA 'WORD \V[%1];'
  670  DATA 'INT MAIN(INT ARGC, CHAR **ARGV) {'
  680  DATA 'INIT(ARGC, ARGV);'
  690  DATA 'FOR (;;) {'
  700  DATA 'IF (\P < 0) ERROR("\D\B\G");'
  710  DATA 'SWITCH (\K) {'
  720  DATA ''
  730  READ A$
  740  WHILE A$ <> ''
  750    GOSUB &EMIT.L WITH A1 = D, S = 2
  760    READ A$
  770  WEND
  780  RETURN

  790  LABEL &HEADER
  800  INPUT #5
  810  INPUT A$
  820  WHILE NOT EOF(0)
  830    GOSUB &LOWCASE
  840    PRINT #4 O$
  850    INPUT A$
  860  WEND
  870  INPUT #0
  880  RETURN

  890  LABEL &COMP.FILE : REM S = STAGE
  900  INPUT #3 : IOCTL #3, 'REW'
  910  INPUT B$
  920  LET L1 = 0, T1 = 0, D9 = 0, D$ = ''
  930  WHILE NOT EOF(0)
  940    GOSUB &COMPILE
  950    INPUT B$
  960  WEND
  970  INPUT #0
  980  RETURN

  990  LABEL &COMPILE
 1000  LET P = 1, E = 0
 1010  LET E$ = D$, D$ = ''
 1020  GOSUB &NEXT
 1030  IF T$ = '' RETURN
 1040  LET L = V
 1050  IF L <= L1 GOSUB &ERROR WITH A$ = 'SEQ'
 1060  LET L1 = L
 1070  GOSUB &EMIT WITH A$ = '/' + '* ' + B$ + ' *' + '/'
 1080  IF CALL(&FIND.NUMLAB WITH X = L) GOSUB &EMITLAB WITH X = L
 1090  GOSUB &EMIT WITH A$ = 'L = ' + STR$(L) + ';'
 1100  GOSUB &X.NUM
 1110  GOSUB &COMMAND
 1120  RETURN

 1130  LABEL &COMMAND
 1140  GOSUB &EMIT.L WITH A$ = '\PP = 0;'
 1150  GOSUB &DISPATCH
 1160  IF C = ASC(':') GOSUB &NEXT : GOTO 1150
 1170  IF NOT E%(0) GOSUB &SYN.ERR
 1180  RETURN

 1190  LABEL &DISPATCH
 1200  IF T$ = 'CLEAR' GOTO &C.CLEAR
 1210  IF T$ = 'CLOSE' GOTO &C.CLOSE
 1220  IF T$ = 'DATA' GOTO &C.DATA
 1230  IF T$ = 'DEF' GOTO &C.DEF
 1240  IF T$ = 'DIM' GOTO &C.DIM
 1250  IF T$ = 'ELSE' GOTO &C.ELSE
 1260  IF T$ = 'END' GOTO &C.END
 1270  IF T$ = 'ENDIF' GOTO &C.ENDIF
 1280  IF T$ = 'ENDLOC' GOTO &C.ENDLOC
 1290  IF T$ = 'ERASE' GOTO &C.ERASE
 1300  IF T$ = 'EXIT' GOTO &C.EXIT
 1310  IF T$ = 'FOR' GOTO &C.FOR
 1320  IF T$ = 'GOSUB' GOTO &C.GOSUB
 1330  IF T$ = 'GOTO' GOTO &C.GOTO
 1340  IF T$ = 'IF' GOTO &C.IF
 1350  IF T$ = 'INPUT' GOTO &C.INPUT
 1360  IF T$ = 'IOCTL' GOTO &C.IOCTL
 1370  IF T$ = 'LABEL' GOTO &C.LABEL
 1380  IF T$ = 'LET' GOTO &C.LET
 1390  IF T$ = 'LOCAL' GOTO &C.LOCAL
 1400  IF T$ = 'NEXT' GOTO &C.NEXT
 1410  IF T$ = 'ON' GOTO &C.ON
 1420  IF T$ = 'OPEN' GOTO &C.OPEN
 1430  IF T$ = 'PRINT' GOTO &C.PRINT
 1440  IF T$ = 'READ' GOTO &C.READ
 1450  IF T$ = 'REM' GOTO &C.REM
 1460  IF T$ = 'REPEAT' GOTO &C.REPEAT
 1470  IF T$ = 'RESTORE' GOTO &C.RESTORE
 1480  IF T$ = 'RETURN' GOTO &C.RETURN
 1490  IF T$ = 'STOP' GOTO &C.STOP
 1500  IF T$ = 'UNTIL' GOTO &C.UNTIL
 1510  IF T$ = 'WEND' GOTO &C.WEND
 1520  IF T$ = 'WHILE' GOTO &C.WHILE
 1530  GOSUB &SYN.ERR : RETURN

 1540  LABEL &C.CLEAR : REM NULL OPERATION
 1550  GOSUB &NEXT
 1560  RETURN

 1570  LABEL &C.CLOSE
 1580  GOSUB &NEXT
 1590  GOSUB &EXPECT WITH A$ = '#'
 1600  GOSUB &X.NUM
 1610  GOSUB &E.IMMED WITH A1 = V
 1620  GOSUB &EMIT.L WITH A$ = 'IO_CLOSE(\S[\P-1]); \P--;'
 1630  RETURN

 1640  LABEL &C.DATA
 1650  IF E$ <> '' GOSUB &ADD.SYMLAB WITH T$ = '^^' + E$, L = D9
 1660  GOSUB &ADD.SYMLAB WITH T$ = '^^' + STR$(L), L = D9
 1670  GOSUB &NEXT
 1680  LOCAL S9, A$
 1690    WHILE C = ASC('''') OR D%(C) OR T$ = '-'
 1700      IF C = ASC('''') THEN
 1710        GOSUB &ESCAPE WITH A$ = T$
 1720        LET A$ = CHR$(9) + '"$' + X$ + '",'
 1730        IF S = 1 GOSUB &EMIT WITH S = 2
 1740        GOSUB &NEXT
 1750      ELSE
 1760        LET S9 = 1
 1770        IF T$ = '-' GOSUB &NEXT : LET S9 = -1
 1780        LET A$ = CHR$(9) + '"#' + STR$(V * S9) + '",'
 1790        IF S = 1 GOSUB &EMIT WITH S = 2
 1800        GOSUB &NEXT
 1810      ENDIF
 1820      LET D9 = D9 + 1
 1830      IF T$ = ',' GOSUB &NEXT
 1840    WEND
 1850  RETURN

 1860  LABEL &C.DEF
 1870  LOCAL F, D = T%(0), F1 = T%(0)
 1880    GOSUB &JUMP WITH D = -D
 1890    GOSUB &NEXT
 1900    GOSUB &TMPLAB WITH X = F1
 1910    IF MID$(T$, 2) <> '%' GOSUB &SYN.ERR
 1920    LET F = C - ASC('A') + 1
 1930    GOSUB &ADD.SYMLAB WITH T$ = '&' + T$, L = -F1
 1940    GOSUB &NEXT
 1950    GOSUB &X.LPAREN
 1960    GOSUB &VARIABLE WITH S = 0
 1970    LET Z9(Z1 + F) = A
 1980    GOSUB &X.RPAREN
 1990    GOSUB &X.EQU
 2000    GOSUB &ADD.NUMLAB
 2010    GOSUB &EXPR
 2020    GOSUB &EMIT.L WITH A$ = '\K = \S[\P-2];'
 2030    GOSUB &EMIT WITH A$ = 'S[P-2] = S[P-1]; P--;'
 2040    GOSUB &EMIT.L WITH A$ = 'BREAK;'
 2050    GOSUB &TMPLAB WITH X = D
 2060  RETURN

 2070  LABEL &C.DIM
 2080  GOSUB &NEXT
 2090  LET V1 = CALL(&VAR.SLOT)
 2100  GOSUB &X.VAR
 2110  GOSUB &X.LPAREN
 2120  GOSUB &CEXPR
 2130  IF V + V1 > D LET D = V + V1
 2140  GOSUB &X.RPAREN
 2150  RETURN

 2160  LABEL &C.ELSE
 2170  GOSUB &NEXT
 2180  LOCAL T = T%(0), D = CALL(&POP WITH T = ASC('I'))
 2190    GOSUB &JUMP WITH D = -T
 2200    GOSUB &TMPLAB WITH X = D
 2210    GOSUB &PUSH WITH V = T, T = ASC('I')
 2220  RETURN

 2230  LABEL &C.END
 2240  GOSUB &NEXT
 2250  GOSUB &EMIT.L WITH A$ = 'EXIT(0);'
 2260  RETURN

 2270  LABEL &C.ENDIF
 2280  GOSUB &NEXT
 2290  LOCAL X = CALL(&POP WITH T = ASC('I'))
 2300    GOSUB &TMPLAB
 2310  RETURN

 2320  LABEL &C.ENDLOC
 2330  GOSUB &NEXT
 2340  GOSUB &ENDLOCS WITH M = M1
 2350  GOSUB &POP WITH T = ASC('L')
 2360  LET Z = Z - M1, M1 = 0
 2370  RETURN

 2380  LABEL &C.ERASE
 2390  GOSUB &NEXT
 2400  GOSUB &STR.EXPR
 2410  GOSUB &EMIT.L WITH A$ = 'IO_ERASE((\B*)\S[\P-1]); \P--;'
 2420  RETURN

 2430  LABEL &C.EXIT
 2440  GOSUB &NEXT
 2450  IF NOT Z GOSUB &ERROR WITH A$ = 'STK' : RETURN
 2460  LOCAL I = Z, Y = Z9(I - 1)
 2470    WHILE I >= 2 AND Z9(I - 1) = ASC('I')
 2480      LET I = I - 2
 2490      LET Y = Z9(I - 1)
 2500    WEND
 2510    IF Y <> ASC('F') AND Y <> ASC('R') AND Y <> ASC('W') THEN
 2520      GOSUB &ERROR WITH A$ = 'NST'
 2530    ENDIF
 2540    GOSUB &JUMP WITH D = -Z9(I - 2)
 2550  RETURN

 2560  LABEL &C.FOR
 2570  GOSUB &NEXT
 2580  GOSUB &VARIABLE
 2590  GOSUB &EMIT WITH A$ = 'S[P] = S[P-1]; P++;'
 2600  GOSUB &X.EQU
 2610  GOSUB &EXPR
 2620  GOSUB &E.STORE
 2630  GOSUB &EXPECT WITH A$ = 'TO'
 2640  GOSUB &EXPR
 2650  IF T$ = 'STEP' THEN
 2660    GOSUB &NEXT
 2670    GOSUB &EXPR
 2680  ELSE
 2690    GOSUB &E.IMMED WITH A1 = 1
 2700  ENDIF
 2710  GOSUB &TMPLAB WITH X = T%(0)
 2720  GOSUB &PUSH WITH T = ASC('F'), V = T%(0)
 2730  RETURN

 2740  LABEL &C.GOSUB
 2750  GOSUB &NEXT
 2760  GOSUB &DEST
 2770  LOCAL G = A, M = -1, T = T%(0)
 2780    GOSUB &PUSH WITH T = ASC('G')
 2790    IF T$ = 'WITH' LET M = CALL(&LOCALS)
 2800    GOSUB &EMIT WITH A$ = 'S[P++] = ' + STR$(-T) + ';'
 2810    GOSUB 2900 WITH A = G
 2820    GOSUB &TMPLAB WITH X = T
 2830    IF M <> -1 GOSUB &ENDLOCS
 2840    IF M <> -1 LET Z = Z - M - 2
 2850    GOSUB &POP WITH T = ASC('G')
 2860  RETURN

 2870  LABEL &C.GOTO
 2880  GOSUB &NEXT
 2890  GOSUB &DEST
 2900  GOSUB &JUMP WITH D = A
 2910  RETURN

 2920  LABEL &C.IF
 2930  LOCAL T = T%(0)
 2940    GOSUB &NEXT
 2950    GOSUB &EXPR
 2960    GOSUB &CJUMP WITH D = -T
 2970    IF T$ = 'THEN' THEN
 2980      GOSUB &NEXT
 2990      GOSUB &PUSH WITH V = T, T = ASC('I')
 3000    ELSE
 3010      GOSUB &PUSH WITH V = 0, T = ASC('I')
 3020      GOSUB &COMMAND
 3030      GOSUB &POP WITH T = ASC('I')
 3040      GOSUB &TMPLAB WITH X = T
 3050    ENDIF
 3060  RETURN

 3070  LABEL &C.INPUT
 3080  LOCAL S8 = 0, S9 = 0
 3090    GOSUB &NEXT
 3100    IF T$ = '#' THEN
 3110      GOSUB &NEXT
 3120      GOSUB &E.IMMED WITH A1 = V
 3130      GOSUB &EMIT.L WITH A$ = 'IO_INDEV(\S[\P-1]); \P--;'
 3140      GOSUB &X.NUM
 3150      LET S9 = 1
 3160    ENDIF
 3170    WHILE CALL(&IS.VAR) OR CALL(&IS.SVAR)
 3180      LET S8 = 1
 3190      IF CALL(&IS.SVAR) THEN
 3200        GOSUB &STRVAR
 3210        GOSUB &EMIT.L WITH A$ = '\S[\P++] = \W IO_INPUTS();'
 3220        GOSUB &E.STO.STR
 3230      ELSE
 3240        GOSUB &VARIABLE
 3250        GOSUB &EMIT.L WITH A$ = '\S[\P++] = IO_INPUTN();'
 3260        GOSUB &E.STORE
 3270      ENDIF
 3280      IF T$ = ',' THEN
 3290        GOSUB &NEXT
 3300      ELSE
 3310        EXIT
 3320      ENDIF
 3330    WEND
 3340    IF S8 AND S9 GOSUB &EMIT.L WITH A$ = 'IO_INDEV(-1);'
 3350  RETURN

 3360  LABEL &C.IOCTL
 3370  GOSUB &NEXT
 3380  GOSUB &EXPECT WITH A$ = '#'
 3390  GOSUB &X.NUM
 3400  GOSUB &E.IMMED WITH A1 = V
 3410  GOSUB &X.COMMA
 3420  IF C <> ASC('''') GOSUB &SYN.ERR
 3430  GOSUB &STR.EXPR
 3440  GOSUB &EMIT.L WITH A$ = 'IO_IOCTL(\S[\P-2], (\B*)\S[\P-1]); \P -= 2;'
 3450  RETURN

 3460  LABEL &C.LABEL
 3470  GOSUB &NEXT
 3480  IF C <> ASC('&') GOSUB &SYN.ERR
 3490  GOSUB &ADD.SYMLAB
 3500  GOSUB &ADD.NUMLAB
 3510  LET D$ = MID$(T$, 2)
 3520  GOSUB &NEXT
 3530  RETURN

 3540  LABEL &C.LET
 3550  LOCAL N$
 3560    REPEAT
 3570      GOSUB &NEXT
 3580      IF CALL(&IS.SVAR) THEN
 3590        GOSUB &STRVAR
 3600        GOSUB &X.EQU
 3610        GOSUB &STR.EXPR
 3620        GOSUB &E.STO.STR
 3630      ELSE
 3640        LET N$ = '@@' + T$
 3650        GOSUB &VARIABLE
 3660        LET K = 1
 3670        GOSUB &X.EQU
 3680        GOSUB &EXPR
 3690        GOSUB &E.STORE
 3700        IF K GOSUB &ADD.SYMLAB WITH T$ = N$, L = V
 3710      ENDIF
 3720    UNTIL T$ <> ','
 3730  RETURN

 3740  LABEL &C.LOCAL
 3750  LET M1 = M1 + CALL(&LOCALS)
 3760  RETURN

 3770  LABEL &C.NEXT
 3780  GOSUB &NEXT
 3790  LOCAL T2 = CALL(&POP WITH T = ASC('F'))
 3800    GOSUB &EMIT WITH A$ = 'V[S[P-3]] += S[P-1];'
 3810    LET A$ = 'IF (\S[\P-1] >= 0 && \V[\S[\P-3]] <= \S[\P-2]) JUMP('
 3820    LET A$ = A$ + STR$(-(T2 - 1)) + ');'
 3830    GOSUB &EMIT.L
 3840    LET A$ = 'IF (\S[\P-1] <= 0 && \V[\S[\P-3]] >= \S[\P-2]) JUMP('
 3850    LET A$ = A$ + STR$(-(T2 - 1)) + ');'
 3860    GOSUB &EMIT.L
 3870    GOSUB &TMPLAB WITH X = T2
 3880    GOSUB &EMIT WITH A$ = 'P -= 3;'
 3890  RETURN

 3900  LABEL &C.ON
 3910  LOCAL I = 1, D = T%(0)
 3920    GOSUB &NEXT
 3930    GOSUB &EXPR
 3940    IF T$ <> 'GOTO' GOSUB &SYN.ERR : RETURN
 3950    GOSUB &EMIT.L WITH A$ = 'SWITCH (\S[--\P]) {'
 3960    REPEAT
 3970      GOSUB &NEXT
 3980      GOSUB &EMIT.L WITH A$ = 'CASE %1:', A1 = I
 3990      LET I = I + 1
 4000      GOSUB &DEST
 4010      GOSUB &JUMP WITH D = A
 4020    UNTIL T$ <> ','
 4030    GOSUB &EMIT.L WITH A$ = 'DEFAULT: JUMP(' + STR$(-D) + ');'
 4040    GOSUB &EMIT.L WITH A$ = '} BREAK;'
 4050    GOSUB &TMPLAB WITH X = D
 4060  RETURN

 4070  LABEL &C.OPEN
 4080  GOSUB &NEXT
 4090  GOSUB &EXPECT WITH A$ = '#'
 4100  GOSUB &X.NUM
 4110  GOSUB &E.IMMED WITH A1 = V
 4120  GOSUB &X.COMMA
 4130  GOSUB &STR.EXPR
 4140  GOSUB &EMIT.L WITH A$ = 'IO_OPEN(\S[\P-2], (\B*)\S[\P-1]); \P -= 2;'
 4150  RETURN

 4160  LABEL &C.PRINT
 4170  GOSUB &NEXT
 4180  LOCAL S7 = 1, S8 = 0, S9 = 0
 4190    IF T$ = '#' THEN
 4200      GOSUB &NEXT
 4210      GOSUB &E.IMMED WITH A1 = V
 4220      GOSUB &EMIT.L WITH A$ = 'IO_OUTDEV(\S[\P-1]); \P--;'
 4230      GOSUB &X.NUM
 4240      LET S9 = 1
 4250    ENDIF
 4260    WHILE T$ <> ':' AND NOT E%(0)
 4270      LET S7 = 1, S8 = 1
 4280      IF CALL(&ISSTR) THEN
 4290        GOSUB &STR.EXPR
 4300        GOSUB &EMIT.L WITH A$ = 'PRINTS((\B*) \S[\P-1]); \P--;'
 4310      ELSE
 4320        GOSUB &EXPR
 4330        GOSUB &EMIT.L WITH A$ = 'PRINTN(\S[\P-1]); \P--;'
 4340      ENDIF
 4350      IF T$ = ',' OR T$ = ';' THEN
 4360        IF T$ = ',' GOSUB &EMIT.L WITH A$ = 'PRINTC(''\\T'');'
 4370        GOSUB &NEXT
 4380        LET S7 = 0
 4390      ELSE
 4400        EXIT
 4410      ENDIF
 4420    WEND
 4430    IF S7 AND (S8 OR NOT S9) GOSUB &EMIT.L WITH A$ = 'PRINTC(''\\N'');'
 4440    IF S8 AND S9 GOSUB &EMIT.L WITH A$ = 'IO_OUTDEV(-1);'
 4450  RETURN

 4460  LABEL &C.READ
 4470  REPEAT
 4480    GOSUB &NEXT
 4490    IF CALL(&IS.SVAR) THEN
 4500      GOSUB &STRVAR
 4510      GOSUB &EMIT.L WITH A$ = '\S[\P++] = \W NEXTS();'
 4520      GOSUB &E.STO.STR
 4530    ELSE
 4540      GOSUB &VARIABLE
 4550      GOSUB &EMIT.L WITH A$ = '\S[\P++] = NEXTN();'
 4560      GOSUB &E.STORE
 4570    ENDIF
 4580  UNTIL T$ <> ','
 4590  RETURN

 4600  LABEL &C.REM
 4610  LET P = LEN(B$) + 1
 4620  LET T$ = ''
 4630  RETURN

 4640  LABEL &C.REPEAT
 4650  GOSUB &NEXT
 4660  GOSUB &PUSH WITH V = T%(0), T = 0
 4670  GOSUB &PUSH WITH V = T%(0), T = ASC('R')
 4680  GOSUB &TMPLAB WITH X = T1 - 1
 4690  RETURN

 4700  LABEL &C.RESTORE
 4710  GOSUB &NEXT
 4720  LOCAL D
 4730    IF D%(ASC(T$)) THEN
 4740      LET D = CALL(&FIND.SYMLAB WITH A$ = '^' + STR$(V))
 4750      GOSUB &EMIT WITH A$ = 'DP = ' + STR$(D) + ';'
 4760      GOSUB &NEXT
 4770      RETURN
 4780    ENDIF
 4790    IF C = ASC('&') THEN
 4800      LET D = CALL(&FIND.SYMLAB WITH A$ = '^' + MID$(T$, 2))
 4810      GOSUB &EMIT WITH A$ = 'DP = ' + STR$(D) + ';'
 4820      GOSUB &NEXT
 4830      RETURN
 4840    ENDIF
 4850    IF NOT E%(0) AND T$ <> ':' GOSUB &SYN.ERR
 4860    GOSUB &EMIT WITH A$ = 'DP = 0;'
 4870  RETURN

 4880  LABEL &C.RETURN
 4890  GOSUB &NEXT
 4900  IF T$ <> ':' AND NOT E%(0) THEN
 4910    GOSUB &EXPR
 4920    GOSUB &EMIT WITH A$ = 'R = S[--P];'
 4930  ELSE
 4940    GOSUB &EMIT WITH A$ = 'R = 0;'
 4950  ENDIF
 4960  GOSUB &ENDLOCS WITH M = M1
 4970  IF M1 AND Z = M1 + 2 THEN
 4980    GOSUB &POP WITH T = ASC('L')
 4990    LET Z = Z - M1, M1 = 0
 5000  ENDIF
 5010  GOSUB &EMIT.L WITH A$ = '\K = \S[--\P]; BREAK;'
 5020  RETURN

 5030  LABEL &C.STOP
 5040  GOSUB &NEXT
 5050  GOSUB &EMIT.L WITH A$ = 'ERROR("\S\T\O");'
 5060  RETURN

 5070  LABEL &C.SYSTEM
 5080  GOTO &C.END

 5090  LABEL &C.UNTIL
 5100  GOSUB &NEXT
 5110  GOSUB &EXPR
 5120  LOCAL D = CALL(&POP WITH T = ASC('R'))
 5130    LET Z = Z - 2
 5140    GOSUB &CJUMP WITH D = -Z9(Z)
 5150    GOSUB &TMPLAB WITH X = D
 5160  RETURN

 5170  LABEL &C.WEND
 5180  GOSUB &NEXT
 5190  LOCAL D = CALL(&POP WITH T = ASC('W'))
 5200    GOSUB &JUMP WITH D = -(D - 1)
 5210    GOSUB &TMPLAB WITH X = D
 5220  RETURN

 5230  LABEL &C.WHILE
 5240  GOSUB &TMPLAB WITH X = T%(0)
 5250  LOCAL T = T%(0)
 5260    GOSUB &NEXT
 5270    GOSUB &EXPR
 5280    GOSUB &CJUMP WITH D = -T
 5290    GOSUB &PUSH WITH V = T, T = ASC('W')
 5300  RETURN

 5310  LABEL &DEST
 5320  IF D%(C) THEN
 5330    GOSUB &ADD.NUMLAB WITH L = V
 5340    LET A = V
 5350    GOSUB &NEXT
 5360    RETURN
 5370  ENDIF
 5380  IF C = ASC('&') THEN
 5390    LET A = CALL(&FIND.SYMLAB WITH A$ = MID$(T$, 2))
 5400    GOSUB &NEXT
 5410    RETURN
 5420  ENDIF
 5430  GOSUB &SYN.ERR : RETURN

 5440  LABEL &CEXPR
 5450  LOCAL S = 0
 5460    LET K = 1
 5470    GOSUB &EXPR
 5480    IF NOT K GOSUB &ERROR WITH A$ = 'VAL'
 5490  RETURN V

 5500  LABEL &EXPR
 5510  GOSUB &LOGAND
 5520  WHILE T$ = 'OR'
 5530    LET K = 0
 5540    GOSUB &NEXT
 5550    GOSUB &LOGAND
 5560    GOSUB &E.LOGOP WITH I$ = '|'
 5570  WEND
 5580  RETURN

 5590  LABEL &LOGAND
 5600  GOSUB &NEGATION
 5610  WHILE T$ = 'AND'
 5620    LET K = 0
 5630    GOSUB &NEXT
 5640    GOSUB &NEGATION
 5650    GOSUB &E.LOGOP WITH I$ = '&'
 5660  WEND
 5670  RETURN

 5680  LABEL &NEGATION
 5690  IF T$ = 'NOT' THEN
 5700    LET K = 0
 5710    GOSUB &NEXT
 5720    GOSUB &RELOP
 5730    GOSUB &E.UNARY WITH I$ = '!'
 5740  ELSE
 5750    GOSUB &RELOP
 5760  ENDIF
 5770  RETURN

 5780  LABEL &RELOP
 5790  IF CALL(&ISSTR) GOTO &STR.RELOP
 5800  GOSUB &SUM
 5810  IF CALL(&ISRELOP) THEN
 5820    LET K = 0
 5830    LOCAL O$ = T$
 5840      GOSUB &NEXT
 5850      GOSUB &SUM
 5860      IF O$ = '=' GOSUB &E.BINARY WITH I$ = '=='
 5870      IF O$ = '<>' GOSUB &E.BINARY WITH I$ = '!='
 5880      IF O$ = '<' GOSUB &E.BINARY WITH I$ = '<'
 5890      IF O$ = '>' GOSUB &E.BINARY WITH I$ = '>'
 5900      IF O$ = '<=' GOSUB &E.BINARY WITH I$ = '<='
 5910      IF O$ = '>=' GOSUB &E.BINARY WITH I$ = '>='
 5920    ENDLOC
 5930  ENDIF
 5940  RETURN

 5950  LABEL &STR.RELOP
 5960  LET K = 0
 5970  GOSUB &STR.EXPR
 5980  IF CALL(&ISRELOP) THEN
 5990    LOCAL O$ = T$
 6000      GOSUB &NEXT
 6010      GOSUB &STR.EXPR
 6020      IF O$ = '=' GOSUB &STR.COMP WITH I$ = '=='
 6030      IF O$ = '<>' GOSUB &STR.COMP WITH I$ = '!='
 6040      IF O$ = '<' GOSUB &STR.COMP WITH I$ = '<'
 6050      IF O$ = '>' GOSUB &STR.COMP WITH I$ = '>'
 6060      IF O$ = '<=' GOSUB &STR.COMP WITH I$ = '<='
 6070      IF O$ = '>=' GOSUB &STR.COMP WITH I$ = '>='
 6080    ENDLOC
 6090  ENDIF
 6100  RETURN

 6110  LABEL &STR.COMP
 6120  LOCAL A$ = '\S[\P-2] = STR_COMP((\B*)\S[\P-2], (\B*)\S[\P-1]) '
 6130    LET A$ = A$ + I$ + ' 0; \P--;'
 6140    GOSUB &EMIT.L
 6150  RETURN

 6160  LABEL &ISRELOP
 6170  IF T$ = '=' OR T$ = '<>' OR T$ = '<' RETURN 1
 6180  RETURN T$ = '>' OR T$ = '<=' OR T$ = '>='

 6190  LABEL &SUM
 6200  GOSUB &TERM
 6210  LOCAL V1, R = V, O
 6220    WHILE T$ = '+' OR T$ = '-'
 6230      LET V1 = R, O = C
 6240      GOSUB &NEXT
 6250      GOSUB &TERM
 6260      IF O = ASC('+') THEN
 6270        GOSUB &E.BINARY WITH I$ = '+'
 6280        IF K LET R = V1 + V
 6290      ENDIF
 6300      IF O = ASC('-') THEN
 6310        GOSUB &E.BINARY WITH I$ = '-'
 6320        IF K LET R = V1 - V
 6330      ENDIF
 6340    WEND
 6350    LET V = R
 6360  RETURN

 6370  LABEL &TERM
 6380  GOSUB &FACTOR
 6390  LOCAL V1, R = V, O
 6400    WHILE T$ = '*' OR T$ = '/'
 6410      LET V1 = R, O = C
 6420      GOSUB &NEXT
 6430      GOSUB &FACTOR
 6440      IF O = ASC('*') THEN
 6450        GOSUB &E.BINARY WITH I$ = '*'
 6460        IF K LET R = V1 * V
 6470      ENDIF
 6480      IF O = ASC('/') THEN
 6490        GOSUB &E.BINARY WITH I$ = '/'
 6500        IF K LET R = V1 / V
 6510      ENDIF
 6520    WEND
 6530    LET V = R
 6540  RETURN

 6550  LABEL &FACTOR
 6560  IF D%(C) THEN
 6570    GOSUB &E.IMMED WITH A1 = V
 6580    GOSUB &NEXT : RETURN
 6590  ENDIF
 6600  IF L%(C) THEN
 6610    GOSUB &VAR.OR.FUN : RETURN
 6620  ENDIF
 6630  IF T$ = '-' THEN
 6640    GOSUB &NEXT
 6650    GOSUB &FACTOR
 6660    GOSUB &E.UNARY WITH I$ = '-'
 6670    IF K LET V = -V
 6680    RETURN
 6690  ENDIF
 6700  IF T$ = '(' THEN
 6710    GOSUB &NEXT
 6720    GOSUB &EXPR
 6730    GOSUB &X.RPAREN : RETURN
 6740  ENDIF
 6750  GOSUB &SYN.ERR : RETURN

 6760  LABEL &VAR.OR.FUN
 6770  IF MID$(T$, 2) = '%' THEN
 6780    LET K = 0
 6790    LOCAL N$ = T$
 6800      GOSUB &NEXT
 6810      GOSUB &X.LPAREN
 6820      GOSUB &EXPR
 6830      GOSUB &X.RPAREN
 6840      GOSUB &USRAPP
 6850    ENDLOC
 6860    RETURN
 6870  ENDIF
 6880  IF MID$(T$, LEN(T$)) = '(' THEN
 6890    LET K = 0
 6900    GOSUB &FUNAPP
 6910    GOSUB &X.RPAREN
 6920    RETURN
 6930  ENDIF
 6940  GOSUB &VARIABLE
 6950  GOSUB &E.LOAD WITH A1 = A
 6960  RETURN

 6970  LABEL &USRAPP
 6980  LOCAL D, T, F = ASC(MID$(N$, 1)) - ASC('A') + 1
 6990    LET T = T%(0)
 7000    LET D = CALL(&FIND.SYMLAB WITH A$ = N$)
 7010    IF S = 2 AND NOT Z9(Z1 + F) GOSUB &ERROR WITH A$ = 'FUN', S = 1
 7020    GOSUB &EMIT WITH A$ = 'A = S[P-1];'
 7030    GOSUB &EMIT WITH A$ = 'S[P-1] = V[%1];', A1 = Z9(Z1 + F)
 7040    GOSUB &EMIT WITH A$ = 'V[%1] = A;', A1 = Z9(Z1 + F)
 7050    GOSUB &EMIT WITH A$ = 'S[P++] = ' + STR$(-T) + ';'
 7060    GOSUB &JUMP
 7070    GOSUB &TMPLAB WITH X = T
 7080    GOSUB &EMIT WITH A$ = 'V[%1] = S[P-2];', A1 = Z9(Z1 + F)
 7090    GOSUB &EMIT WITH A$ = 'S[P-2] = S[P-1]; P--;'
 7100  RETURN

 7110  LABEL &VARIABLE
 7120  IF S = 2 THEN
 7130    LET K = 0
 7140  ELSE
 7150    LET V = CALL(&FIND.SYMLAB WITH A$ = '@' + T$)
 7160    LET K = V <> 0
 7170  ENDIF
 7180  LET X = CALL(&VAR.SLOT)
 7190  GOSUB &EMIT WITH A$ = 'S[P++] = %1;', A1 = X
 7200  GOSUB &X.VAR
 7210  IF T$ = '(' THEN
 7220    LET K = 0
 7230    GOSUB &NEXT
 7240    GOSUB &EXPR
 7250    GOSUB &E.BINARY WITH I$ = '+'
 7260    GOSUB &X.RPAREN
 7270  ENDIF
 7280  LET A = X
 7290  RETURN

 7300  LABEL &VAR.SLOT
 7310  LOCAL X = (ASC(T$) - ASC('A')) * 10
 7320    IF LEN(T$) > 1 LET X = X + ASC(MID$(T$, 2)) - ASC('0')
 7330  RETURN X

 7340  LABEL &FUNAPP
 7350  IF T$ = 'ABS(' GOTO &F.ABS
 7360  IF T$ = 'ASC(' GOTO &F.ASC
 7370  IF T$ = 'CALL(' GOTO &F.CALL
 7380  IF T$ = 'EOF(' GOTO &F.EOF
 7390  IF T$ = 'FRE(' GOTO &F.FRE
 7400  IF T$ = 'LEN(' GOTO &F.LEN
 7410  IF T$ = 'POS(' GOTO &F.POS
 7420  IF T$ = 'RND(' GOTO &F.RND
 7430  IF T$ = 'VAL(' GOTO &F.VAL
 7440  GOSUB &SYN.ERR : RETURN

 7450  LABEL &F.ABS
 7460  GOSUB &NEXT
 7470  GOSUB &EXPR
 7480  GOSUB &EMIT.L WITH A$ = '\S[\P-1] = ABS(\S[\P-1]);'
 7490  RETURN

 7500  LABEL &F.ASC
 7510  GOSUB &NEXT
 7520  IF C = ASC('''') THEN
 7530    GOSUB &E.IMMED WITH A1 = ASC(MID$(T$, 2))
 7540    GOSUB &NEXT
 7550  ELSE
 7560    GOSUB &STR.EXPR
 7570    GOSUB &EMIT WITH A$ = 'S[P-1] = *(B*)S[P-1];'
 7580  ENDIF
 7590  RETURN

 7600  LABEL &F.CALL
 7610  GOSUB &C.GOSUB
 7620  GOSUB &EMIT WITH A$ = 'S[P++] = R;'
 7630  RETURN

 7640  LABEL &F.EOF
 7650  GOSUB &NEXT
 7660  GOSUB &EXPR WITH S = 0
 7670  GOSUB &EMIT.L WITH A$ = '\S[\P++] = IO_EOF();'
 7680  RETURN

 7690  LABEL &F.FRE
 7700  GOSUB &NEXT
 7710  GOSUB &CEXPR
 7720  GOSUB &EMIT.L WITH A$ = '\S[\P++] = \LM - \PP;'
 7730  RETURN

 7740  LABEL &F.LEN
 7750  GOSUB &NEXT
 7760  GOSUB &STR.EXPR
 7770  GOSUB &EMIT.L WITH A$ = '\S[\P-1] = STRLEN((CHAR*) \S[\P-1]);'
 7780  RETURN

 7790  LABEL &F.POS
 7800  GOSUB &NEXT
 7810  GOSUB &STR.EXPR
 7820  GOSUB &X.COMMA
 7830  GOSUB &STR.EXPR
 7840  LOCAL A$ = '\S[\P-2] = STR_POS((\B*)\S\[\P-2], (\B*)\S[\P-1]); \P--;'
 7850    GOSUB &EMIT.L
 7860  RETURN

 7870  LABEL &F.RND
 7880  GOSUB &NEXT
 7890  GOSUB &EXPR
 7900  GOSUB &EMIT.L WITH A$ = '\S[\P-1] = PRNG(\S[\P-1]);'
 7910  RETURN

 7920  LABEL &F.VAL
 7930  GOSUB &NEXT
 7940  GOSUB &STR.EXPR
 7950  GOSUB &EMIT.L WITH A$ = '\S[\P-1] = STR_VAL((\B*)\S[\P-1]);'
 7960  RETURN

 7970  LABEL &STR.EXPR
 7980  GOSUB &STR.FAC
 7990  WHILE T$ = '+'
 8000    GOSUB &NEXT
 8010    GOSUB &STR.FAC
 8020    LOCAL A$ = '\S[\P-2] = \W STR_PLUS((\B*)\S[\P-2], (\B*)\S[\P-1]);'
 8030      GOSUB &EMIT.L
 8040      GOSUB &EMIT WITH A$ = 'P--;'
 8050    ENDLOC
 8060  WEND
 8070  RETURN

 8080  LABEL &STR.FAC
 8090  IF C = ASC('''') THEN
 8100    GOSUB &ESCAPE WITH A$ = T$
 8110    GOSUB &EMIT WITH A$ = 'S[P++] = W"' + X$ + '";'
 8120    GOSUB &NEXT
 8130    RETURN
 8140  ENDIF
 8150  IF L%(C) AND MID$(T$, 2) = '$' THEN
 8160    GOSUB &STRVAR
 8170    GOSUB &EMIT WITH A$ = 'S[P-1] = W (SV[S[P-1]]? SV[S[P-1]] : (B*)"");'
 8180    RETURN
 8190  ENDIF
 8200  IF L%(C) AND MID$(T$, LEN(T$)) = '(' THEN
 8210    GOSUB &STR.FUNAPP
 8220    GOSUB &X.RPAREN
 8230    RETURN
 8240  ENDIF
 8250  GOSUB &SYN.ERR
 8260  RETURN

 8270  LABEL &ESCAPE : REM A$ -> X$
 8280  LOCAL I, C$
 8290    LET X$ = ''
 8300    IF A$ = '''''' LET X$ = '' : RETURN
 8310    FOR I = 2 TO LEN(A$) - 1
 8320      LET C$ = MID$(A$, I, 1)
 8330      IF C$ = '"' LET C$ = '\"'
 8340      IF C$ = '\' LET C$ = '\\'
 8350      IF C$ = '%' LET C$ = '%%'
 8360      LET X$ = X$ + C$
 8370    NEXT
 8380  RETURN

 8390  LABEL &STRVAR
 8400  IF NOT CALL(&IS.SVAR) GOSUB &SYN.ERR : RETURN
 8410  LET A = ASC(T$) - ASC('A')
 8420  GOSUB &E.IMMED WITH A1 = A
 8430  GOSUB &NEXT
 8440  IF T$ = '(' THEN
 8450    GOSUB &NEXT
 8460    GOSUB &EXPR
 8470    GOSUB &E.BINARY WITH I$ = '+'
 8480    GOSUB &X.RPAREN
 8490  ENDIF
 8500  RETURN

 8510  LABEL &STR.FUNAPP
 8520  IF T$ = 'CHR$(' GOTO &SF.CHRS
 8530  IF T$ = 'MID$(' GOTO &SF.MIDS
 8540  IF T$ = 'STR$(' GOTO &SF.STRS
 8550  GOSUB &SYN.ERR : RETURN

 8560  LABEL &SF.CHRS
 8570  GOSUB &NEXT
 8580  GOSUB &EXPR
 8590  GOSUB &EMIT.L WITH A$ = '\S[\P-1] = \W STR_CHR(\S[\P-1]);'
 8600  RETURN

 8610  LABEL &SF.MIDS
 8620  LOCAL A$
 8630    GOSUB &NEXT
 8640    GOSUB &STR.EXPR
 8650    GOSUB &X.COMMA
 8660    GOSUB &EXPR
 8670    IF T$ = ',' THEN
 8680      GOSUB &NEXT
 8690      GOSUB &EXPR
 8700      LET A$ = '\S[\P-3] = \W STR_MID((\B*)\S[\P-3], \S[\P-2],'
 8710      LET A$ = A$ + ' \S[\P-1]); \P -= 2;'
 8720    ELSE
 8730      LET A$ = '\S[\P-2] = \W STR_MID((\B*)\S[\P-2], \S[\P-1], 127);'
 8740      LET A$ = A$ + '\P--;'
 8750    ENDIF
 8760    GOSUB &EMIT.L
 8770  RETURN

 8780  LABEL &SF.STRS
 8790  GOSUB &NEXT
 8800  GOSUB &EXPR
 8810  GOSUB &EMIT.L WITH A$ = '\S[\P-1] = \W STR_STR(\S[\P-1]);'
 8820  RETURN

 8830  LABEL &LOCALS
 8840  IF Z > 1 AND Z9(Z - 1) = ASC('L') LET Z = Z - 2
 8850  LOCAL M = 0, A2
 8860    REPEAT
 8870      GOSUB &NEXT
 8880      IF Z >= Z1 GOSUB &ERROR WITH A$ = 'STK' : LET Z = Z - 1
 8890      IF CALL(&IS.SVAR) THEN
 8900        GOSUB &STRVAR WITH S = 0
 8910        LET A2 = A, Z9(Z) = -(A + 1), Z = Z + 1
 8920        GOSUB &EMIT WITH A$ = 'S[P++] = W SV[%1];', A1 = A
 8930        IF T$ = '=' THEN
 8940          GOSUB &NEXT
 8950          GOSUB &STR.EXPR
 8960          LET A1 = A2
 8970          GOSUB &EMIT.L WITH A$ = '\S\V[%1] = ALLOCSTR();'
 8980          GOSUB &EMIT.L WITH A$ = 'STRCPY(\S\V[%1], (\B*)\S[--\P]);'
 8990        ELSE
 9000          LET A1 = A2
 9010          GOSUB &EMIT WITH A$ = 'A = W (S[P-1]? (B*)S[P-1]: (B*)"");'
 9020          GOSUB &EMIT.L WITH A$ = '\S\V[%1] = ALLOCSTR();'
 9030          GOSUB &EMIT.L WITH A$ = 'STRCPY(\S\V[%1], (\B*)\A);'
 9040        ENDIF
 9050      ELSE
 9060        GOSUB &VARIABLE WITH S = 0
 9070        LET A2 = A, Z9(Z) = A, Z = Z + 1
 9080        GOSUB &EMIT WITH A$ = 'S[P++] = V[%1];', A1 = A
 9090        IF T$ = '=' THEN
 9100          GOSUB &NEXT
 9110          GOSUB &EXPR
 9120          GOSUB &EMIT WITH A$ = 'V[%1] = S[--P];', A1 = A2
 9130        ENDIF
 9140      ENDIF
 9150      LET M = M + 1
 9160    UNTIL T$ <> ','
 9170    GOSUB &PUSH WITH T = ASC('L')
 9180  RETURN M

 9190  LABEL &ENDLOCS
 9200  IF NOT M RETURN
 9210  LOCAL I, J, A1
 9220    LET J = 1
 9230    WHILE J < Z AND Z9(Z - J) <> ASC('L')
 9240      LET J = J + 2
 9250    WEND
 9260    LET J = J + 1
 9270    IF J + M > Z GOSUB &ERROR WITH A$ = 'NST' : RETURN
 9280    FOR I = 1 TO M
 9290      LET A1 = Z9(Z - I - J)
 9300      IF A1 < 0 THEN
 9310        GOSUB &EMIT.L WITH A$ = 'FREESTR(\S\V[%1]);', A1 = -(A1 + 1)
 9320        GOSUB &EMIT WITH A$ = 'SV[%1] = (B*)S[--P];', A1 = -(A1 + 1)
 9330      ELSE
 9340        GOSUB &EMIT WITH A$ = 'V[%1] = S[--P];'
 9350      ENDIF
 9360    NEXT
 9370  RETURN

 9380  LABEL &X.VAR
 9390  IF CALL(&IS.VAR) GOSUB &NEXT : RETURN
 9400  GOSUB &SYN.ERR : RETURN

 9410  LABEL &X.LPAREN
 9420  GOSUB &EXPECT WITH A$ = '(' : RETURN

 9430  LABEL &X.RPAREN
 9440  GOSUB &EXPECT WITH A$ = ')' : RETURN

 9450  LABEL &X.EQU
 9460  GOSUB &EXPECT WITH A$ = '=' : RETURN

 9470  LABEL &X.COMMA
 9480  GOSUB &EXPECT WITH A$ = ',' : RETURN

 9490  LABEL &EXPECT : REM A$ = WHAT
 9500  IF T$ = A$ GOSUB &NEXT : RETURN
 9510  GOSUB &SYN.ERR : RETURN

 9520  LABEL &IS.VAR
 9530  RETURN L%(C) AND (LEN(T$) = 1 OR D%(ASC(MID$(T$, 2))))

 9540  LABEL &IS.SVAR
 9550  RETURN L%(C) AND MID$(T$, 2) = '$'

 9560  LABEL &ISSTR
 9570  IF MID$(T$, LEN(T$) - 1) = '$(' RETURN 1
 9580  IF L%(C) AND MID$(T$, 2) = '$' RETURN 1
 9590  RETURN C = ASC('''')

 9600  LABEL &NEXT
 9610  WHILE MID$(B$, P, 1) = ' '
 9620    LET P = P + 1
 9630  WEND
 9640  LET C = B%(P), P = P + 1
 9650  IF D%(C) GOTO &NUMBER
 9660  IF L%(C) GOTO &VAR.OR.KW
 9670  IF C = ASC('''') GOTO &STRING
 9680  IF C = ASC('&') GOTO &LABEL
 9690  IF C = ASC('<') AND B%(P) = ASC('>') OR B%(P) = ASC('=') THEN
 9700    LET T$ = MID$(B$, P - 1, 2), P = P + 1
 9710    RETURN
 9720  ENDIF
 9730  IF C = ASC('>') AND B%(P) = ASC('=') THEN
 9740    LET T$ = MID$(B$, P - 1, 2), P = P + 1
 9750    RETURN
 9760  ENDIF
 9770  LET T$ = CHR$(C)
 9780  RETURN

 9790  LABEL &VAR.OR.KW
 9800  LET C1 = B%(P)
 9810  IF D%(C1) OR C1 = ASC('%') OR C1 = ASC('$') THEN
 9820    LET T$ = MID$(B$, P - 1, 2), P = P + 1
 9830    RETURN
 9840  ENDIF
 9850  IF L%(C1) GOTO &KEYWORD
 9860  LET T$ = CHR$(C)
 9870  RETURN

 9880  LABEL &KEYWORD
 9890  LET T$ = ''
 9900  LET C1 = C
 9910  WHILE S%(C1)
 9920    LET T$ = T$ + CHR$(C1)
 9930    LET C1 = B%(P), P = P + 1
 9940  WEND
 9950  IF C1 = ASC('(') LET T$ = T$ + '(', C1 = B%(P), P = P + 1
 9960  LET P = P - 1
 9970  RETURN

 9980  LABEL &NUMBER
 9990  LET V = 0, T$ = ''
10000  LET C1 = C
10010  WHILE D%(C1)
10020    LET V = V * 10 + C1 - ASC('0')
10030    LET T$ = T$ + CHR$(C1)
10040    LET C1 = B%(P), P = P + 1
10050  WEND
10060  LET P = P - 1
10070  RETURN

10080  LABEL &STRING
10090  LET T$ = '''', C1 = B%(P), P = P + 1
10100  WHILE C1 <> ASC('''') OR B%(P) = ASC('''')
10110    LET T$ = T$ + CHR$(C1)
10120    IF C1 = ASC('''') AND B%(P) = ASC('''') THEN
10130      LET C1 = B%(P + 1), P = P + 2
10140    ELSE
10150      LET C1 = B%(P), P = P + 1
10160    ENDIF
10170  WEND
10180  LET T$ = T$ + ''''
10190  RETURN

10200  LABEL &LABEL
10210  LET T$ = '&', C1 = B%(P), P = P + 1
10220  WHILE L%(C1) OR D%(C1) OR C1 = ASC('.')
10230    LET T$ = T$ + CHR$(C1), C1 = B%(P), P = P + 1
10240  WEND
10250  LET P = P - 1
10260  RETURN

10270  LABEL &X.NUM
10280  IF D%(C) GOSUB &NEXT : RETURN
10290  GOSUB &SYN.ERR : RETURN

10300  LABEL &E.LOAD
10310  GOSUB &EMIT WITH A$ = 'S[P-1] = V[S[P-1]];'
10320  RETURN

10330  LABEL &E.IMMED
10340  GOSUB &EMIT WITH A$ = 'S[P++] = %1;'
10350  RETURN

10360  LABEL &E.STORE
10370  GOSUB &EMIT WITH A$ = 'V[S[P-2]] = S[P-1]; P -= 2;'
10380  RETURN

10390  LABEL &E.STO.STR
10400  GOSUB &EMIT.L WITH A$ = 'ASG_STR(\S[\P-2], (\B*)\S[\P-1]); \P -= 2;'
10410  RETURN

10420  LABEL &E.UNARY : REM I$ = INSTRUCTION
10430  LOCAL A$ = 'S[P-1] = ' + I$ + 'S[P-1];'
10440    GOSUB &EMIT
10450  RETURN

10460  LABEL &E.BINARY : REM I$ = INSTRUCTION
10470  LOCAL A$ = 'S[P-2] = S[P-2] ' + I$ + ' S[P-1]; P--;'
10480    GOSUB &EMIT
10490  RETURN

10500  LABEL &E.LOGOP
10510  LOCAL A$ = 'S[P-2] = (S[P-2] != 0) ' + I$ + ' (S[P-1] != 0); P--;'
10520    GOSUB &EMIT
10530  RETURN

10540  LABEL &EMITLAB : REM X = ID
10550  IF S <> 2 RETURN
10560  LOCAL O$
10570    GOSUB &LOWCASE WITH A$ = 'CASE ' + STR$(X) + ':'
10580    PRINT #4 O$
10590  RETURN

10600  LABEL &TMPLAB : REM X = ID
10610  IF S <> 2 RETURN
10620  LOCAL O$
10630    GOSUB &LOWCASE WITH A$ = 'CASE ' + STR$(-X) + ':'
10640    PRINT #4 O$
10650  RETURN

10660  LABEL &EMIT.L
10670  LOCAL O$
10680    GOSUB &LOWCASE
10690    GOSUB &EMIT WITH A$ = O$
10700  RETURN

10710  LABEL &LOWCASE : REM A$ -> O$
10720  LOCAL I, C
10730    LET O$ = ''
10740    FOR I = 1 TO LEN(A$)
10750      LET C = ASC(MID$(A$, I))
10760      IF C = ASC('\') THEN
10770        LET O$ = O$ + MID$(A$, I + 1, 1), I = I + 1
10780      ELSE
10790        IF L%(C) LET C = C + 32
10800        LET O$ = O$ + CHR$(C)
10810      ENDIF
10820    NEXT
10830  RETURN

10840  LABEL &JUMP : REM D = DEST
10850  GOSUB &EMIT.L WITH A$ = 'JUMP(' + STR$(D) + ');'
10860  RETURN

10870  LABEL &CJUMP : REM D = DEST
10880  GOSUB &EMIT.L WITH A$ = 'IF (!\S[--\P]) JUMP(' + STR$(D) + ');'
10890  RETURN

10900  LABEL &EMIT
10910  IF S <> 2 RETURN
10920  LOCAL I, J, O$ = ''
10930    PRINT #4 CHR$(9);
10940    FOR I = 1 TO LEN(A$)
10950      IF MID$(A$, I, 1) = '%' THEN
10960        IF D%(ASC(MID$(A$, I + 1))) THEN
10970          LET J = VAL(MID$(A$, I + 1)), I = I + 1
10980          LET O$ = O$ + STR$(A(J))
10990        ELSE
11000          LET O$ = O$ + '%', I = I + 1
11010        ENDIF
11020      ELSE
11030        LET O$ = O$ + MID$(A$, I, 1)
11040      ENDIF
11050    NEXT
11060    PRINT #4 O$
11070  RETURN

11080  LABEL &ADD.SYMLAB
11090  IF S <> 1 RETURN
11100  LET S1 = S1 + 1
11110  LET A$ = MID$(T$, 2) + '=' + STR$(L) + ':'
11120  IF LEN(Z$(Y1)) + LEN(A$) > 125 LET Y1 = Y1 + 1
11130  LET Z$(Y1) = Z$(Y1) + A$
11140  RETURN

11150  LABEL &ADD.NUMLAB
11160  IF S <> 1 RETURN
11170  LOCAL I
11180    FOR I = 0 TO N1 - 1
11190      IF Z9(Z2 + I) = L EXIT
11200    NEXT
11210    IF Z9(Z2 + I) = L RETURN
11220    IF N1 >= 1000 GOSUB &ERROR WITH A$ = 'MEM' : RETURN
11230    LET Z9(Z2 + N1) = L, N1 = N1 + 1
11240  RETURN

11250  LABEL &FIND.NUMLAB : REM X = LABEL
11260  IF S <> 2 RETURN 0
11270  LOCAL I
11280    FOR I = 0 TO N1 - 1
11290      IF Z9(Z2 + I) = X EXIT
11300    NEXT
11310  RETURN I < N1

11320  LABEL &FIND.SYMLAB : REM A$ = LABEL
11330  LOCAL I, J, M, L$
11340    FOR I = 0 TO Y1
11350      LET L$ = Z$(I), M = 0
11360      WHILE LEN(L$) > 1
11370        LET J = POS('=', L$)
11380        IF A$ = MID$(L$, 1, J - 1) LET M = 1 : EXIT
11390        LET L$ = MID$(L$, POS(':', L$) + 1)
11400      WEND
11410      IF M EXIT
11420    NEXT
11430    IF M RETURN VAL(MID$(L$, J + 1))
11440    IF S = 2 GOSUB &ERROR WITH A$ = 'LAB', S = 1
11450  RETURN 0

11460  LABEL &PUSH : REM T = TYPE, V = VALUE
11470  IF Z + 2 >= Z2 GOSUB &ERROR WITH A$ = 'STK' : RETURN
11480  LET Z9(Z) = V, Z9(Z + 1) = T, Z = Z + 2
11490  RETURN

11500  LABEL &POP : REM T = TYPE
11510  IF Z < 2 GOSUB &ERROR WITH A$ = 'STK' : RETURN
11520  IF Z9(Z - 1) <> T GOSUB &ERROR WITH A$ = 'NST'
11530  LET Z = Z - 2
11540  RETURN Z9(Z)

11550  LABEL &SYN.ERR
11560  LET A$ = 'SYN' : GOTO &ERROR

11570  LABEL &ERROR : REM A$ = TYPE
11580  IF S <> 1 RETURN
11590  IF NOT E THEN
11600    PRINT #1 A$; ': ';
11610    PRINT #1 B$; '  ['; T$; ']'
11620    LET E = 1
11630  ENDIF
11640  RETURN
