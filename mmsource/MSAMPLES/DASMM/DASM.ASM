
.DATA
PUBLIC _rgReserved DB 65,76,73,71,78,0,0,0,66,89,84
 DB 69,0,0,0,0,67,79,68,69,0,0
 DB 0,0,68,65,84,65,0,0,0,0,68
 DB 66,0,0,0,0,0,0,68,68,0,0
 DB 0,0,0,0,68,70,0,0,0,0,0
 DB 0,68,85,80,0,0,0,0,0,68,87
 DB 0,0,0,0,0,0,68,87,79,82,68
 DB 0,0,0,69,78,68,0,0,0,0,0
 DB 69,81,85,0,0,0,0,0,69,88,84
 DB 82,78,0,0,0,70,65,82,0,0,0
 DB 0,0,70,87,79,82,68,0,0,0,73
 DB 78,67,76,85,68,69,0,78,65,77,69
 DB 0,0,0,0,78,69,65,82,0,0,0
 DB 0,79,70,70,83,69,84,0,0,80,65
 DB 82,65,0,0,0,0,80,84,82,0,0
 DB 0,0,0,80,85,66,76,73,67,0,0
 DB 83,69,65,82,67,72,0,0,83,72,79
 DB 82,84,0,0,0,83,84,65,67,75,0
 DB 0,0,83,84,65,82,84,0,0,0,85
 DB 83,69,49,54,0,0,0,85,83,69,51
 DB 50,0,0,0,86,73,82,84,85,65,76
 DB 0,87,79,82,68,0,0,0,0
PUBLIC _rgreg DB 65,72,0,0,65,76,0,0,65,88,0
 DB 0,66,72,0,0,66,76,0,0,66,80
 DB 0,0,66,88,0,0,67,72,0,0,67
 DB 76,0,0,67,82,48,0,67,82,49,0
 DB 67,82,50,0,67,82,51,0,67,83,0
 DB 0,67,88,0,0,68,72,0,0,68,73
 DB 0,0,68,76,0,0,68,82,48,0,68
 DB 82,49,0,68,82,50,0,68,82,51,0
 DB 68,82,54,0,68,82,55,0,68,83,0
 DB 0,68,88,0,0,69,65,88,0,69,66
 DB 80,0,69,66,88,0,69,67,88,0,69
 DB 68,73,0,69,68,88,0,69,83,73,0
 DB 69,83,0,0,69,83,80,0,70,83,0
 DB 0,71,83,0,0,83,73,0,0,83,80
 DB 0,0,83,83,0,0,84,82,54,0,84
 DB 82,55,0,0,0,0,0,0,0,0,0
 DB 0,0,0,0,0,0,0,0,0,0,0
 DB 0,0,0,0,0,0,0,0,0,0,0
 DB 0,0,0,0,0,0,0,0,0,0
PUBLIC _rginst DB 65,65,65,0,0,0,0,65,65,68,0
 DB 0,0,0,65,65,77,0,0,0,0,65
 DB 65,83,0,0,0,0,65,68,67,0,0
 DB 0,0,65,68,68,0,0,0,0,65,78
 DB 68,0,0,0,0,65,82,80,76,0,0
 DB 0,66,79,85,78,68,0,0,66,83,70
 DB 0,0,0,0,66,83,82,0,0,0,0
 DB 66,84,0,0,0,0,0,66,84,67,0
 DB 0,0,0,66,84,82,0,0,0,0,66
 DB 84,83,0,0,0,0,67,65,76,76,0
 DB 0,0,67,66,87,0,0,0,0,67,68
 DB 81,0,0,0,0,67,76,67,0,0,0
 DB 0,67,76,68,0,0,0,0,67,76,73
 DB 0,0,0,0,67,76,84,83,0,0,0
 DB 67,77,67,0,0,0,0,67,77,80,0
 DB 0,0,0,67,77,80,83,0,0,0,67
 DB 77,80,83,66,0,0,67,77,80,83,68
 DB 0,0,67,77,80,83,87,0,0,67,87
 DB 68,0,0,0,0,67,87,68,69,0,0
 DB 0,68,65,65,0,0,0,0,68,65,83
 DB 0,0,0,0,68,69,67,0,0,0,0
 DB 68,73,86,0,0,0,0,69,78,84,69
 DB 82,0,0,72,76,84,0,0,0,0,73
 DB 68,73,86,0,0,0,73,77,85,76,0
 DB 0,0,73,78,0,0,0,0,0,73,78
 DB 67,0,0,0,0,73,78,83,0,0,0
 DB 0,73,78,83,66,0,0,0,73,78,83
 DB 68,0,0,0,73,78,83,87,0,0,0
 DB 73,78,84,0,0,0,0,73,78,84,79
 DB 0,0,0,73,82,69,84,0,0,0,73
 DB 82,69,84,68,0,0,74,65,0,0,0
 DB 0,0,74,65,69,0,0,0,0,74,66
 DB 0,0,0,0,0,74,66,69,0,0,0
 DB 0,74,67,0,0,0,0,0,74,67,88
 DB 90,0,0,0,74,69,0,0,0,0,0
 DB 74,69,67,88,90,0,0,74,71,0,0
 DB 0,0,0,74,71,69,0,0,0,0,74
 DB 76,0,0,0,0,0,74,76,69,0,0
 DB 0,0,74,77,80,0,0,0,0,74,78
 DB 65,0,0,0,0,74,78,65,69,0,0
 DB 0,74,78,66,0,0,0,0,74,78,66
 DB 69,0,0,0,74,78,67,0,0,0,0
 DB 74,78,69,0,0,0,0,74,78,71,0
 DB 0,0,0,74,78,71,69,0,0,0,74
 DB 78,76,0,0,0,0,74,78,76,69,0
 DB 0,0,74,78,79,0,0,0,0,74,78
 DB 80,0,0,0,0,74,78,83,0,0,0
 DB 0,74,78,90,0,0,0,0,74,79,0
 DB 0,0,0,0,74,80,0,0,0,0,0
 DB 74,80,69,0,0,0,0,74,80,79,0
 DB 0,0,0,74,83,0,0,0,0,0,74
 DB 90,0,0,0,0,0,76,65,72,70,0
 DB 0,0,76,65,82,0,0,0,0,76,68
 DB 83,0,0,0,0,76,69,65,0,0,0
 DB 0,76,69,65,86,69,0,0,76,69,83
 DB 0,0,0,0,76,70,83,0,0,0,0
 DB 76,71,68,84,0,0,0,76,71,83,0
 DB 0,0,0,76,73,68,84,0,0,0,76
 DB 76,68,84,0,0,0,76,77,83,87,0
 DB 0,0,76,79,67,75,0,0,0,76,79
 DB 68,83,0,0,0,76,79,68,83,66,0
 DB 0,76,79,68,83,68,0,0,76,79,68
 DB 83,87,0,0,76,79,79,80,0,0,0
 DB 76,79,79,80,69,0,0,76,79,79,80
 DB 78,69,0,76,79,79,80,78,90,0,76
 DB 79,79,80,90,0,0,76,83,76,0,0
 DB 0,0,76,83,83,0,0,0,0,76,84
 DB 82,0,0,0,0,77,79,86,0,0,0
 DB 0,77,79,86,83,0,0,0,77,79,86
 DB 83,66,0,0,77,79,86,83,68,0,0
 DB 77,79,86,83,87,0,0,77,79,86,83
 DB 88,0,0,77,79,86,90,88,0,0,77
 DB 85,76,0,0,0,0,78,69,71,0,0
 DB 0,0,78,79,80,0,0,0,0,78,79
 DB 84,0,0,0,0,79,82,0,0,0,0
 DB 0,79,85,84,0,0,0,0,79,85,84
 DB 83,0,0,0,79,85,84,83,66,0,0
 DB 79,85,84,83,68,0,0,79,85,84,83
 DB 87,0,0,80,79,80,0,0,0,0,80
 DB 79,80,65,0,0,0,80,79,80,65,68
 DB 0,0,80,79,80,70,0,0,0,80,79
 DB 80,70,68,0,0,80,85,83,72,0,0
 DB 0,80,85,83,72,65,0,0,80,85,83
 DB 72,65,68,0,80,85,83,72,70,0,0
 DB 80,85,83,72,70,68,0,82,67,76,0
 DB 0,0,0,82,67,82,0,0,0,0,82
 DB 69,80,0,0,0,0,82,69,80,69,0
 DB 0,0,82,69,80,78,69,0,0,82,69
 DB 80,78,90,0,0,82,69,80,90,0,0
 DB 0,82,69,84,0,0,0,0,82,69,84
 DB 70,0,0,0,82,69,84,78,0,0,0
 DB 82,79,76,0,0,0,0,82,79,82,0
 DB 0,0,0,83,65,72,70,0,0,0,83
 DB 65,76,0,0,0,0,83,65,82,0,0
 DB 0,0,83,66,66,0,0,0,0,83,67
 DB 65,83,0,0,0,83,67,65,83,66,0
 DB 0,83,67,65,83,68,0,0,83,67,65
 DB 83,87,0,0,83,69,84,65,0,0,0
 DB 83,69,84,65,69,0,0,83,69,84,66
 DB 0,0,0,83,69,84,66,69,0,0,83
 DB 69,84,67,0,0,0,83,69,84,69,0
 DB 0,0,83,69,84,71,0,0,0,83,69
 DB 84,71,69,0,0,83,69,84,76,0,0
 DB 0,83,69,84,76,69,0,0,83,69,84
 DB 78,65,0,0,83,69,84,78,65,69,0
 DB 83,69,84,78,66,0,0,83,69,84,78
 DB 66,69,0,83,69,84,78,67,0,0,83
 DB 69,84,78,69,0,0,83,69,84,78,71
 DB 0,0,83,69,84,78,71,69,0,83,69
 DB 84,78,76,0,0,83,69,84,78,76,69
 DB 0,83,69,84,78,79,0,0,83,69,84
 DB 78,80,0,0,83,69,84,78,83,0,0
 DB 83,69,84,78,90,0,0,83,69,84,79
 DB 0,0,0,83,69,84,80,0,0,0,83
 DB 69,84,80,69,0,0,83,69,84,80,79
 DB 0,0,83,69,84,83,0,0,0,83,69
 DB 84,90,0,0,0,83,71,68,84,0,0
 DB 0,83,72,76,0,0,0,0,83,72,76
 DB 68,0,0,0,83,72,82,0,0,0,0
 DB 83,72,82,68,0,0,0,83,73,68,84
 DB 0,0,0,83,76,68,84,0,0,0,83
 DB 77,83,87,0,0,0,83,84,67,0,0
 DB 0,0,83,84,68,0,0,0,0,83,84
 DB 73,0,0,0,0,83,84,79,83,0,0
 DB 0,83,84,79,83,66,0,0,83,84,79
 DB 83,68,0,0,83,84,79,83,87,0,0
 DB 83,84,82,0,0,0,0,83,85,66,0
 DB 0,0,0,84,69,83,84,0,0,0,86
 DB 69,82,82,0,0,0,86,69,82,87,0
 DB 0,0,87,65,73,84,0,0,0,88,67
 DB 72,71,0,0,0,88,76,65,84,0,0
 DB 0,88,76,65,84,66,0,0,88,79,82
 DB 0,0,0,0
PUBLIC _rgrinst DB 70,50,88,77,49,0,0,0,70,65,66
 DB 83,0,0,0,0,70,65,68,68,0,0
 DB 0,0,70,65,68,68,80,0,0,0,70
 DB 66,76,68,0,0,0,0,70,66,83,84
 DB 80,0,0,0,70,67,72,83,0,0,0
 DB 0,70,67,76,69,88,0,0,0,70,67
 DB 79,77,0,0,0,0,70,67,79,77,80
 DB 0,0,0,70,67,79,77,80,80,0,0
 DB 70,67,79,83,0,0,0,0,70,68,69
 DB 67,83,84,80,0,70,68,73,86,0,0
 DB 0,0,70,68,73,86,80,0,0,0,70
 DB 68,73,86,82,0,0,0,70,68,73,86
 DB 82,80,0,0,70,70,82,69,69,0,0
 DB 0,70,73,65,68,68,0,0,0,70,73
 DB 67,79,77,0,0,0,70,73,67,79,77
 DB 80,0,0,70,73,68,73,86,0,0,0
 DB 70,73,68,73,86,82,0,0,70,73,76
 DB 68,0,0,0,0,70,73,77,85,76,0
 DB 0,0,70,73,78,67,83,84,80,0,70
 DB 73,78,73,84,0,0,0,70,73,83,84
 DB 0,0,0,0,70,73,83,84,80,0,0
 DB 0,70,73,83,85,66,0,0,0,70,73
 DB 83,85,66,82,0,0,70,76,68,0,0
 DB 0,0,0,70,76,68,49,0,0,0,0
 DB 70,76,68,67,87,0,0,0,70,76,68
 DB 69,78,86,0,0,70,76,68,76,50,69
 DB 0,0,70,76,68,76,50,84,0,0,70
 DB 76,68,76,71,50,0,0,70,76,68,76
 DB 78,50,0,0,70,76,68,80,73,0,0
 DB 0,70,76,68,90,0,0,0,0,70,77
 DB 85,76,0,0,0,0,70,77,85,76,80
 DB 0,0,0,70,78,67,76,69,88,0,0
 DB 70,78,73,78,73,84,0,0,70,78,79
 DB 80,0,0,0,0,70,78,83,65,86,69
 DB 0,0,70,78,83,84,67,87,0,0,70
 DB 78,83,84,69,78,86,0,70,78,83,84
 DB 83,87,0,0,70,80,65,84,65,78,0
 DB 0,70,80,82,69,77,0,0,0,70,80
 DB 82,69,77,49,0,0,70,80,84,65,78
 DB 0,0,0,70,82,78,68,73,78,84,0
 DB 70,82,83,84,79,82,0,0,70,83,65
 DB 86,69,0,0,0,70,83,67,65,76,69
 DB 0,0,70,83,73,78,0,0,0,0,70
 DB 83,73,78,67,79,83,0,70,83,81,82
 DB 84,0,0,0,70,83,84,0,0,0,0
 DB 0,70,83,84,67,87,0,0,0,70,83
 DB 84,69,78,86,0,0,70,83,84,80,0
 DB 0,0,0,70,83,84,83,87,0,0,0
 DB 70,83,85,66,0,0,0,0,70,83,85
 DB 66,80,0,0,0,70,83,85,66,80,82
 DB 0,0,70,83,85,66,82,0,0,0,70
 DB 84,83,84,0,0,0,0,70,85,67,79
 DB 77,0,0,0,70,85,67,79,77,80,0
 DB 0,70,85,67,79,77,80,80,0,70,87
 DB 65,73,84,0,0,0,70,88,65,77,0
 DB 0,0,0,70,88,67,72,0,0,0,0
 DB 70,88,84,82,65,67,84,0,70,89,76
 DB 50,88,0,0,0,70,89,76,50,88,80
 DB 49,0
PUBLIC _rgINS DB 0,0,0,0,0,0,0,0,1,0,0
 DB 0,0,55,0,0,2,0,0,0,0,213
 DB 10,1,3,0,0,0,0,212,10,1,5
 DB 69,77,0,0,20,0,8,5,81,74,0
 DB 0,131,16,1,5,80,77,0,0,128,16
 DB 9,5,80,67,0,0,16,0,12,5,67
 DB 80,0,0,18,0,10,6,81,75,0,0
 DB 131,0,1,6,69,77,0,0,4,0,8
 DB 6,80,77,0,0,128,0,9,6,67,80
 DB 0,0,2,0,10,6,80,67,0,0,0
 DB 0,12,7,81,75,0,0,131,32,1,7
 DB 69,77,0,0,36,0,8,7,80,77,0
 DB 0,128,32,9,7,67,80,0,0,34,0
 DB 10,7,80,67,0,0,32,0,12,8,79
 DB 65,0,0,99,0,4,9,81,82,0,0
 DB 98,0,2,10,68,81,0,1,188,0,2
 DB 11,68,81,0,1,189,0,2,12,81,68
 DB 0,1,163,0,4,12,81,74,0,1,186
 DB 32,1,13,81,68,0,1,187,0,4,13
 DB 81,74,0,1,186,56,1,14,81,68,0
 DB 1,179,0,4,14,81,74,0,1,186,48
 DB 1,15,81,68,0,1,171,0,4,15,81
 DB 74,0,1,186,40,1,16,62,0,0,0
 DB 232,0,0,16,81,0,0,0,255,16,1
 DB 16,63,0,0,0,154,0,0,16,83,0
 DB 0,0,255,24,1,17,0,0,0,4,152
 DB 0,0,30,0,0,0,2,152,0,0,19
 DB 0,0,0,0,248,0,0,20,0,0,0
 DB 0,252,0,0,21,0,0,0,0,250,0
 DB 0,22,0,0,0,1,6,0,0,23,0
 DB 0,0,0,245,0,0,24,81,75,0,0
 DB 131,56,1,24,69,77,0,0,60,0,8
 DB 24,80,77,0,0,128,56,9,24,67,80
 DB 0,0,58,0,10,24,80,67,0,0,56
 DB 0,12,26,0,0,0,0,166,0,0,27
 DB 0,0,0,0,167,0,0,28,0,0,0
 DB 8,167,0,0,29,0,0,0,8,153,0
 DB 0,18,0,0,0,2,153,0,0,31,0
 DB 0,0,0,39,0,0,32,0,0,0,0
 DB 47,0,0,33,68,0,0,0,72,0,16
 DB 33,80,0,0,0,254,8,9,34,80,0
 DB 0,0,246,48,9,35,76,74,0,0,200
 DB 0,128,36,0,0,0,0,244,0,0,37
 DB 80,0,0,0,246,56,9,38,80,0,0
 DB 0,246,40,9,38,68,81,0,1,175,0
 DB 2,38,68,81,74,0,107,0,2,38,68
 DB 74,0,0,107,0,130,38,68,81,77,0
 DB 105,0,2,38,68,77,0,0,105,0,2
 DB 39,69,74,0,0,228,0,136,39,69,153
 DB 0,0,236,0,136,40,68,0,0,0,64
 DB 0,16,40,80,0,0,0,254,0,9,42
 DB 0,0,0,0,108,0,0,43,0,0,0
 DB 0,109,0,0,44,0,0,0,8,109,0
 DB 0,45,85,0,0,0,204,0,0,45,74
 DB 0,0,0,205,0,0,46,0,0,0,0
 DB 206,0,0,47,0,0,0,8,207,0,0
 DB 48,0,0,0,0,207,0,0,49,61,0
 DB 0,0,119,0,0,49,62,0,0,1,135
 DB 0,0,50,61,0,0,0,115,0,0,50
 DB 62,0,0,1,131,0,0,51,61,0,0
 DB 0,114,0,0,51,62,0,0,1,130,0
 DB 0,52,61,0,0,0,118,0,0,52,62
 DB 0,0,1,134,0,0,53,61,0,0,0
 DB 114,0,0,53,62,0,0,1,130,0,0
 DB 54,61,0,0,0,227,0,0,65,61,0
 DB 0,0,119,0,0,65,62,0,0,1,135
 DB 0,0,64,61,0,0,0,115,0,0,64
 DB 62,0,0,1,131,0,0,66,61,0,0
 DB 0,115,0,0,66,62,0,0,1,131,0
 DB 0,62,61,0,0,0,118,0,0,62,62
 DB 0,0,1,134,0,0,63,61,0,0,0
 DB 114,0,0,63,62,0,0,1,130,0,0
 DB 56,61,0,0,0,227,0,0,55,61,0
 DB 0,0,116,0,0,55,62,0,0,1,132
 DB 0,0,57,61,0,0,0,127,0,0,57
 DB 62,0,0,1,143,0,0,58,61,0,0
 DB 0,125,0,0,58,62,0,0,1,141,0
 DB 0,70,61,0,0,0,125,0,0,70,62
 DB 0,0,1,141,0,0,59,61,0,0,0
 DB 124,0,0,59,62,0,0,1,140,0,0
 DB 69,61,0,0,0,124,0,0,69,62,0
 DB 0,1,140,0,0,60,61,0,0,0,126
 DB 0,0,60,62,0,0,1,142,0,0,68
 DB 61,0,0,0,126,0,0,68,62,0,0
 DB 1,142,0,0,67,61,0,0,0,117,0
 DB 0,67,62,0,0,1,133,0,0,71,61
 DB 0,0,0,127,0,0,71,62,0,0,1
 DB 143,0,0,72,61,0,0,0,113,0,0
 DB 72,62,0,0,1,129,0,0,73,61,0
 DB 0,0,123,0,0,73,62,0,0,1,139
 DB 0,0,74,61,0,0,0,121,0,0,74
 DB 62,0,0,1,137,0,0,75,61,0,0
 DB 0,117,0,0,75,62,0,0,1,133,0
 DB 0,76,61,0,0,0,112,0,0,76,62
 DB 0,0,1,128,0,0,77,61,0,0,0
 DB 122,0,0,77,62,0,0,1,138,0,0
 DB 79,61,0,0,0,123,0,0,79,62,0
 DB 0,1,139,0,0,78,61,0,0,0,122
 DB 0,0,78,62,0,0,1,138,0,0,80
 DB 61,0,0,0,120,0,0,80,62,0,0
 DB 1,136,0,0,81,61,0,0,0,116,0
 DB 0,81,62,0,0,1,132,0,0,61,61
 DB 0,0,0,235,0,0,61,62,0,0,0
 DB 233,0,0,61,81,0,0,0,255,32,1
 DB 61,63,0,0,0,234,0,0,61,83,0
 DB 0,0,255,40,1,82,0,0,0,0,159
 DB 0,0,83,68,81,0,1,2,0,2,85
 DB 68,82,0,0,141,0,130,86,0,0,0
 DB 0,201,0,0,89,83,0,0,1,1,16
 DB 1,91,83,0,0,1,1,24,1,84,68
 DB 83,0,0,197,0,2,105,68,83,0,1
 DB 178,0,2,87,68,83,0,0,196,0,2
 DB 88,68,83,0,1,180,0,2,90,68,83
 DB 0,1,181,0,2,92,79,0,0,1,0
 DB 16,1,93,79,0,0,1,1,48,1,94
 DB 0,0,0,0,240,0,0,96,0,0,0
 DB 0,172,0,0,97,0,0,0,0,173,0
 DB 0,98,0,0,0,8,173,0,0,99,61
 DB 0,0,0,226,0,0,100,61,0,0,0
 DB 225,0,0,103,61,0,0,0,225,0,0
 DB 101,61,0,0,0,224,0,0,102,61,0
 DB 0,0,224,0,0,104,68,81,0,1,3
 DB 0,2,106,79,0,0,1,0,24,1,107
 DB 69,84,0,0,160,0,8,107,84,69,0
 DB 0,162,0,8,107,64,74,0,0,176,0
 DB 16,107,68,77,0,0,184,0,16,107,67
 DB 80,0,0,138,0,10,107,80,67,0,0
 DB 136,0,12,107,80,77,0,0,198,0,10
 DB 107,79,70,0,0,140,0,4,107,70,79
 DB 0,0,142,0,2,107,66,71,0,1,32
 DB 0,4,107,71,66,0,1,34,0,2,107
 DB 66,72,0,1,33,0,4,107,72,66,0
 DB 1,35,0,2,107,66,73,0,1,36,0
 DB 4,107,73,66,0,1,38,0,2,109,0
 DB 0,0,0,164,0,0,110,0,0,0,0
 DB 165,0,0,111,0,0,0,8,165,0,0
 DB 112,66,79,0,1,191,0,130,112,68,78
 DB 0,1,190,0,130,113,66,79,0,1,183
 DB 0,130,113,68,78,0,1,182,0,130,114
 DB 80,0,0,0,246,32,9,115,80,0,0
 DB 0,246,24,9,116,0,0,0,0,144,0
 DB 0,117,80,0,0,0,246,16,9,118,81
 DB 75,0,0,131,8,1,118,69,77,0,0
 DB 12,0,8,118,80,77,0,0,128,8,9
 DB 118,67,80,0,0,10,0,10,118,80,67
 DB 0,0,8,0,12,119,74,69,0,0,230
 DB 0,8,119,153,69,0,0,238,0,8,121
 DB 0,0,0,0,110,0,0,122,0,0,0
 DB 0,111,0,0,123,0,0,0,8,111,0
 DB 0,124,82,0,0,0,143,0,1,124,68
 DB 0,0,0,88,0,16,124,152,0,0,0
 DB 31,0,0,124,161,0,0,0,7,0,0
 DB 124,167,0,0,0,23,0,0,124,163,0
 DB 0,1,161,0,0,124,164,0,0,1,169
 DB 0,0,125,0,0,0,0,97,0,0,126
 DB 0,0,0,0,97,0,0,127,0,0,0
 DB 0,157,0,0,128,0,0,0,0,157,0
 DB 0,129,82,0,0,0,255,48,1,129,68
 DB 0,0,0,80,0,16,129,75,0,0,0
 DB 106,0,0,129,77,0,0,0,104,0,0
 DB 129,141,0,0,0,14,0,0,129,167,0
 DB 0,0,22,0,0,129,152,0,0,0,30
 DB 0,0,129,161,0,0,0,6,0,0,129
 DB 163,0,0,1,160,0,0,129,164,0,0
 DB 1,168,0,0,130,0,0,0,0,96,0
 DB 0,131,0,0,0,0,96,0,0,132,0
 DB 0,0,0,156,0,0,133,0,0,0,0
 DB 156,0,0,134,80,86,0,0,208,16,137
 DB 134,80,136,0,0,210,16,137,134,80,74
 DB 0,0,192,16,137,135,80,86,0,0,208
 DB 24,137,135,80,136,0,0,210,24,137,135
 DB 80,74,0,0,192,24,137,144,80,86,0
 DB 0,208,0,137,144,80,136,0,0,210,0
 DB 137,144,80,74,0,0,192,0,137,145,80
 DB 86,0,0,208,8,137,145,80,136,0,0
 DB 210,8,137,145,80,74,0,0,192,8,137
 DB 136,0,0,0,0,243,0,0,137,0,0
 DB 0,0,243,0,0,138,0,0,0,0,242
 DB 0,0,143,0,0,0,0,195,0,0,143
 DB 76,0,0,0,194,0,0,142,0,0,0
 DB 0,203,0,0,142,76,0,0,0,202,0
 DB 0,147,80,86,0,0,208,32,137,147,80
 DB 136,0,0,210,32,137,147,80,74,0,0
 DB 192,32,137,148,80,86,0,0,208,56,137
 DB 148,80,136,0,0,210,56,137,148,80,74
 DB 0,0,192,56,137,185,80,86,0,0,208
 DB 32,137,185,80,136,0,0,210,32,137,185
 DB 80,74,0,0,192,32,137,187,80,86,0
 DB 0,208,40,137,187,80,136,0,0,210,40
 DB 137,187,80,74,0,0,192,40,137,149,81
 DB 75,0,0,131,24,1,149,69,77,0,0
 DB 28,0,8,149,80,77,0,0,128,24,9
 DB 149,67,80,0,0,26,0,10,149,80,67
 DB 0,0,24,0,12,151,0,0,0,0,174
 DB 0,0,152,0,0,0,0,175,0,0,153
 DB 0,0,0,8,175,0,0,154,78,0,0
 DB 1,151,0,64,155,78,0,0,1,147,0
 DB 64,156,78,0,0,1,146,0,64,157,78
 DB 0,0,1,150,0,64,158,78,0,0,1
 DB 146,0,64,159,78,0,0,1,148,0,64
 DB 160,78,0,0,1,159,0,64,161,78,0
 DB 0,1,157,0,64,162,78,0,0,1,156
 DB 0,64,163,78,0,0,1,158,0,64,164
 DB 78,0,0,1,150,0,64,165,78,0,0
 DB 1,146,0,64,166,78,0,0,1,147,0
 DB 64,167,78,0,0,1,151,0,64,168,78
 DB 0,0,1,147,0,64,169,78,0,0,1
 DB 149,0,64,170,78,0,0,1,158,0,64
 DB 171,78,0,0,1,156,0,64,172,78,0
 DB 0,1,157,0,64,173,78,0,0,1,159
 DB 0,64,174,78,0,0,1,145,0,64,175
 DB 78,0,0,1,155,0,64,176,78,0,0
 DB 1,153,0,64,177,78,0,0,1,149,0
 DB 64,178,78,0,0,1,144,0,64,179,78
 DB 0,0,1,154,0,64,180,78,0,0,1
 DB 154,0,64,181,78,0,0,1,155,0,64
 DB 182,78,0,0,1,152,0,64,183,78,0
 DB 0,1,148,0,64,184,83,0,0,1,1
 DB 0,1,189,83,0,0,1,1,8,1,186
 DB 81,68,74,1,164,0,0,186,81,68,136
 DB 1,165,0,0,188,81,68,74,1,172,0
 DB 0,188,81,68,136,1,173,0,0,190,79
 DB 0,0,1,0,0,1,191,79,0,0,1
 DB 1,32,1,192,0,0,0,0,249,0,0
 DB 194,0,0,0,0,251,0,0,193,0,0
 DB 0,0,253,0,0,196,0,0,0,0,170
 DB 0,0,197,0,0,0,0,171,0,0,198
 DB 0,0,0,8,171,0,0,199,79,0,0
 DB 1,0,8,1,200,81,75,0,0,131,40
 DB 1,200,69,77,0,0,44,0,8,200,80
 DB 77,0,0,128,40,9,200,67,80,0,0
 DB 42,0,10,200,80,67,0,0,40,0,12
 DB 201,69,77,0,0,168,0,8,201,80,77
 DB 0,0,246,0,9,201,67,80,0,0,132
 DB 0,10,202,79,0,0,1,0,32,1,203
 DB 79,0,0,1,0,40,1,204,0,0,0
 DB 0,155,0,0,205,65,130,0,0,144,0
 DB 16,205,130,65,0,0,144,0,32,205,66
 DB 154,0,0,144,0,16,205,154,66,0,0
 DB 144,0,32,205,80,67,0,0,134,0,12
 DB 205,67,80,0,0,134,0,10,206,82,0
 DB 0,0,0,0,0,207,0,0,0,0,0
 DB 0,0,208,81,75,0,0,131,48,1,208
 DB 69,77,0,0,52,0,8,208,80,77,0
 DB 0,128,48,9,208,67,80,0,0,50,0
 DB 10,208,80,67,0,0,48,0,12
PUBLIC _rgM32 DB 0,0,0,0,1,0,0,0,3,1,4
 DB 0,6,1,4,64,10,1,4,128,18,1
 DB 4,192,64,0,5,0,7,1,4,64,11
 DB 1,4,128,19,1,4,192,33,0,64,0
 DB 65,0,128,0,35,1,68,0,67,1,132
 DB 0,39,1,68,64,43,1,68,128,51,1
 DB 68,192,71,1,132,64,75,1,132,128,83
 DB 1,132,192
PUBLIC _rgM16 DW 134,165,0,0,0,0,0,0,134,144,0
 DW 0,0,0,0,0,133,165,0,0,0,0
 DW 0,0,133,144,0,0,0,0,0,0,165
 DW 0,0,0,0,0,0,0,144,0,0,0
 DW 0,0,0,0,88,0,0,0,0,0,0
 DW 0,134,0,0,0,0,0,0,0,134,165
 DW 87,0,0,0,0,0,134,144,87,0,0
 DW 0,0,0,133,165,87,0,0,0,0,0
 DW 133,144,87,0,0,0,0,0,165,87,0
 DW 0,0,0,0,0,144,87,0,0,0,0
 DW 0,0,133,87,0,0,0,0,0,0,134
 DW 87,0,0,0,0,0,0,134,165,88,0
 DW 0,0,0,0,134,144,88,0,0,0,0
 DW 0,133,165,88,0,0,0,0,0,133,144
 DW 88,0,0,0,0,0,165,88,0,0,0
 DW 0,0,0,144,88,0,0,0,0,0,0
 DW 133,88,0,0,0,0,0,0,134,88,0
 DW 0,0,0,0,0
EXTRN _AllocPage FWORD
EXTRN _AllocOSPage FWORD
EXTRN _AllocDMAPage FWORD
EXTRN _DeAllocPage FWORD
EXTRN _QueryPages FWORD
EXTRN _GetPhyAdd FWORD
EXTRN _AliasMem FWORD
EXTRN _DeAliasMem FWORD
EXTRN _CreateFile FWORD
EXTRN _CreateDir FWORD
EXTRN _DeleteDir FWORD
EXTRN _OpenFile FWORD
EXTRN _RenameFile FWORD
EXTRN _GetFileSize FWORD
EXTRN _SetFileSize FWORD
EXTRN _ReadBlock FWORD
EXTRN _WriteBlock FWORD
EXTRN _ReadBytes FWORD
EXTRN _WriteBytes FWORD
EXTRN _GetFileLFA FWORD
EXTRN _SetFileLFA FWORD
EXTRN _CloseFile FWORD
EXTRN _DeleteFile FWORD
EXTRN _GetDirSector FWORD
PUBLIC _level DD 0
PUBLIC _fContinue DB 0
PUBLIC _src_fh DD 0,0,0,0,0
PUBLIC _run_fh DD 0
PUBLIC _lst_fh DD 0
PUBLIC _sym_fh DD 0
PUBLIC _filetype DB 1
PUBLIC _fListA DB 0
PUBLIC _fListE DB 0
PUBLIC _fSymDump DB 0
PUBLIC _Column DB 0
PUBLIC _error_count DD 0
PUBLIC _warn_count DD 0
PUBLIC _fLineIn DB 0
PUBLIC _fPutBack DB 0
PUBLIC _iSymNext DD 1
PUBLIC _fPublic DB 0
PUBLIC _fExtern DB 0
PUBLIC _fFarLabel DB 0
PUBLIC _iLSymNext DD 1
PUBLIC _iRefNext DD 0
PUBLIC _iERefNext DD 0
PUBLIC _iFUNext DD 0
PUBLIC _nCDFix DD 0
PUBLIC _nDDFix DD 0
PUBLIC _nDCFix DD 0
PUBLIC _nCCFix DD 0
PUBLIC _iMacNext DD 0
PUBLIC _fStart DB 0
PUBLIC _StartAddr DD 0
PUBLIC _oNextData DD 0
PUBLIC _oNextCode DD 0
PUBLIC _CodeOffset DD 0
PUBLIC _DataOffset DD 0
PUBLIC _pNextAddr DD 0
PUBLIC _fDataSeg DB 0
PUBLIC _StackTotal DD 0
PUBLIC _fMoreStorage DB 0
PUBLIC _StoreSize DD 0
L_lit DB 13,10,70,65,84,65,76,32,69,82,82,79,82,44,32,108
 DB 105,110,101,32,37,108,100,32,45,32,37,115,13,10,0,13
 DB 10,70,65,84,65,76,32,69,82,82,79,82,44,32,108,105
 DB 110,101,32,37,108,100,32,45,32,37,115,13,10,0,37,100
 DB 32,69,114,114,111,114,115,13,10,37,100,32,87,97,114,110
 DB 105,110,103,115,13,10,0,73,110,118,97,108,105,100,32,101
 DB 120,112,114,101,115,115,105,111,110,44,32,39,41,39,32,101
 DB 120,112,101,99,116,101,100,0,73,110,118,97,108,105,100,32
 DB 101,120,112,114,101,115,115,105,111,110,44,32,118,97,108,117
 DB 101,32,101,120,112,101,99,116,101,100,0,86,97,108,117,101
 DB 32,101,120,112,101,99,116,101,100,32,97,102,116,101,114,32
 DB 117,110,97,114,121,32,39,45,39,0,84,111,111,32,109,97
 DB 110,121,32,100,105,103,105,116,115,32,102,111,114,32,110,117
 DB 109,101,114,105,99,32,114,97,100,105,120,0,73,110,118,97
 DB 108,105,100,32,99,104,97,114,97,99,116,101,114,32,105,110
 DB 32,97,32,110,117,109,98,101,114,0,85,110,116,101,114,109
 DB 105,110,97,116,101,100,32,115,116,114,105,110,103,0,85,110
 DB 114,101,99,111,103,110,105,122,101,100,32,99,104,97,114,97
 DB 99,116,101,114,0,73,110,118,97,108,105,100,32,65,108,105
 DB 103,110,109,101,110,116,32,115,112,101,99,105,102,105,101,100
 DB 0,83,116,97,114,116,32,99,111,109,109,97,110,100,32,111
 DB 110,108,121,32,97,108,108,111,119,101,100,32,105,110,32,67
 DB 83,69,71,0,86,105,114,116,117,97,108,32,99,111,109,109
 DB 97,110,100,32,109,117,115,116,32,98,101,32,102,105,114,115
 DB 116,32,105,110,32,115,101,103,109,101,110,116,0,73,110,118
 DB 97,108,105,100,32,86,105,114,116,117,97,108,32,118,97,108
 DB 117,101,0,83,116,97,114,116,105,110,103,32,97,100,100,114
 DB 101,115,115,32,110,111,116,32,102,111,117,110,100,0,83,116
 DB 97,99,107,32,99,111,109,109,97,110,100,32,110,111,116,32
 DB 97,108,108,111,119,101,100,32,105,110,32,68,83,69,71,0
 DB 73,110,118,97,108,105,100,32,68,79,84,32,99,111,109,109
 DB 97,110,100,0,73,110,118,97,108,105,100,32,79,112,101,114
 DB 97,110,100,0,73,110,118,97,108,105,100,32,115,101,103,109
 DB 101,110,116,32,114,101,103,105,115,116,101,114,32,117,115,101
 DB 0,73,110,118,97,108,105,100,32,115,99,97,108,101,32,118
 DB 97,108,117,101,32,39,82,101,103,42,63,39,0,83,99,97
 DB 108,101,32,118,97,108,117,101,32,101,120,112,101,99,116,101
 DB 100,32,40,42,50,44,42,52,44,42,56,41,0,84,111,111
 DB 32,109,97,110,121,32,97,100,100,114,101,115,115,32,115,99
 DB 97,108,101,32,118,97,108,117,101,115,0,73,110,118,97,108
 DB 105,100,32,114,101,103,105,115,116,101,114,32,102,111,114,32
 DB 109,101,109,111,114,121,32,111,112,101,114,97,110,100,0,73
 DB 110,118,97,108,105,100,32,109,101,109,111,114,121,32,111,112
 DB 101,114,97,110,100,0,79,102,102,115,101,116,32,109,117,115
 DB 116,32,98,101,32,102,114,111,109,32,100,97,116,97,32,115
 DB 101,103,109,101,110,116,0,78,101,115,116,101,100,32,98,114
 DB 97,99,107,101,116,115,0,85,110,98,97,108,97,110,99,101
 DB 100,32,98,114,97,99,107,101,116,115,0,73,110,118,97,108
 DB 105,100,32,111,112,101,114,97,110,100,32,115,105,122,101,32
 DB 97,116,116,114,105,98,117,116,101,0,0,85,110,107,110,111
 DB 119,110,32,116,111,107,101,110,32,105,110,32,111,112,101,114
 DB 97,110,100,32,97,114,114,97,121,0,84,111,111,32,109,97
 DB 110,121,32,111,112,101,114,97,110,100,115,32,111,114,32,101
 DB 120,116,114,97,32,99,104,97,114,97,99,116,101,114,0,0
 DB 73,110,118,97,108,105,100,32,101,120,112,114,101,115,115,105
 DB 111,110,32,111,114,32,110,117,109,101,114,105,99,32,118,97
 DB 108,117,101,0,79,112,101,114,97,110,100,32,101,120,112,101
 DB 99,116,101,100,32,98,101,102,111,114,101,32,99,111,109,109
 DB 97,0,0,73,110,118,97,108,105,100,32,99,104,97,114,97
 DB 99,116,101,114,32,111,114,32,114,101,115,101,114,118,101,100
 DB 32,119,111,114,100,32,105,110,32,111,112,101,114,97,110,100
 DB 0,82,101,108,97,116,105,118,101,32,106,117,109,112,32,111
 DB 117,116,32,111,102,32,114,97,110,103,101,0,79,112,101,114
 DB 97,110,100,32,115,105,122,101,32,78,79,84,32,115,112,101
 DB 99,105,102,105,101,100,32,111,114,32,105,109,112,108,105,101
 DB 100,0,73,110,115,116,114,117,99,116,105,111,110,115,32,110
 DB 111,116,32,97,108,108,111,119,101,100,32,105,110,32,100,97
 DB 116,97,32,115,101,103,109,101,110,116,0,73,110,115,116,114
 DB 117,99,116,105,111,110,32,101,120,112,101,99,116,101,100,32
 DB 97,102,116,101,114,32,112,114,101,102,105,120,0,79,112,101
 DB 114,97,110,100,32,115,105,122,101,115,32,100,111,110,39,116
 DB 32,109,97,116,99,104,0,87,114,111,110,103,32,111,112,101
 DB 114,97,110,100,32,116,121,112,101,32,102,111,114,32,105,110
 DB 115,116,114,117,99,116,105,111,110,0,73,110,99,111,114,114
 DB 101,99,116,32,102,111,114,109,97,116,32,102,111,114,32,109
 DB 101,109,111,114,121,32,111,112,101,114,97,110,100,0,83,116
 DB 114,105,110,103,115,32,111,110,108,121,32,118,97,108,105,100
 DB 32,102,111,114,32,68,66,32,115,116,111,114,97,103,101,0
 DB 69,120,112,101,99,116,101,100,32,39,40,39,32,97,102,116
 DB 101,114,32,39,68,85,80,39,0,83,116,111,114,97,103,101
 DB 32,101,120,112,101,99,116,101,100,32,98,101,116,119,101,101
 DB 110,32,99,111,109,109,97,115,0,39,58,39,32,110,111,116
 DB 32,101,120,112,101,99,116,101,100,0,68,87,111,114,100,32
 DB 115,116,111,114,97,103,101,32,114,101,113,117,105,114,101,100
 DB 32,102,111,114,32,79,70,70,83,69,84,0,73,110,118,97
 DB 108,105,100,32,115,116,111,114,97,103,101,32,118,97,108,117
 DB 101,0,0,39,58,39,32,101,120,112,101,99,116,101,100,32
 DB 97,102,116,101,114,32,108,97,115,116,32,108,97,98,101,108
 DB 0,77,97,99,114,111,32,110,111,116,32,97,108,108,111,119
 DB 101,100,32,105,110,32,108,101,120,105,99,97,108,32,108,101
 DB 118,101,108,32,48,0,69,81,85,32,111,114,32,83,116,111
 DB 114,97,103,101,32,101,120,112,101,99,116,101,100,0,0,73
 DB 110,115,116,114,117,99,116,105,111,110,32,101,120,112,101,99
 DB 116,101,100,32,98,101,102,111,114,101,32,114,101,103,105,115
 DB 116,101,114,32,110,97,109,101,0,80,117,98,108,105,99,32
 DB 83,121,109,98,111,108,32,97,108,114,101,97,100,121,32,100
 DB 101,102,105,110,101,100,0,76,111,99,97,108,32,115,121,109
 DB 98,111,108,32,97,108,114,101,97,100,121,32,100,101,102,105
 DB 110,101,100,0,78,117,109,98,101,114,32,110,111,116,32,101
 DB 120,112,101,99,116,101,100,0,78,101,119,32,115,121,109,98
 DB 111,108,32,109,117,115,116,32,102,111,108,108,111,119,32,80
 DB 85,66,76,73,67,32,107,101,121,119,111,114,100,0,76,97
 DB 98,101,108,44,32,67,111,109,109,97,110,100,44,32,73,110
 DB 115,116,114,117,99,116,105,111,110,44,32,111,114,32,83,116
 DB 111,114,97,103,101,32,101,120,112,101,99,116,101,100,0,73
 DB 110,99,111,110,115,105,115,116,97,110,116,32,114,101,100,101
 DB 99,108,97,114,97,116,105,111,110,0,0,13,10,69,82,82
 DB 79,82,58,32,37,100,44,32,108,105,110,101,58,32,37,108
 DB 100,44,32,37,115,13,10,0,13,10,69,82,82,79,82,44
 DB 32,108,105,110,101,32,37,100,32,45,32,37,115,13,10,0
 DB 80,85,66,76,73,67,32,83,89,77,66,79,76,83,58,32
 DB 13,10,0,78,97,109,101,58,32,37,115,32,32,32,32,32
 DB 32,79,102,102,115,101,116,32,37,48,56,108,88,32,32,0
 DB 67,83,69,71,32,32,0,68,83,69,71,32,32,0,66,89
 DB 84,69,32,32,0,87,79,82,68,32,32,0,68,87,79,82
 DB 68,32,32,0,70,87,79,82,68,32,32,0,69,88,84,82
 DB 78,32,32,0,70,65,82,32,32,32,32,0,80,85,66,76
 DB 73,67,32,0,77,65,67,82,79,32,32,0,13,10,0,76
 DB 79,67,65,76,32,83,89,77,66,79,76,83,58,32,13,10
 DB 0,78,97,109,101,58,32,37,115,32,32,32,32,32,32,79
 DB 102,102,115,101,116,32,37,108,88,32,32,32,0,67,83,69
 DB 71,32,32,0,68,83,69,71,32,32,0,66,89,84,69,32
 DB 32,0,87,79,82,68,32,32,0,68,87,79,82,68,32,32
 DB 0,70,87,79,82,68,32,32,0,69,88,84,82,78,32,32
 DB 0,70,65,82,32,32,32,32,0,80,85,66,76,73,67,32
 DB 0,77,65,67,82,79,0,13,10,0,70,79,82,87,65,82
 DB 68,32,82,69,70,69,82,69,78,67,69,83,58,10,0,78
 DB 97,109,101,58,32,37,115,32,32,32,32,32,32,79,102,102
 DB 115,101,116,58,32,37,108,88,32,32,32,76,105,110,101,58
 DB 32,37,100,10,0,114,0,67,97,110,39,116,32,111,112,101
 DB 110,32,73,78,67,76,85,68,69,32,102,105,108,101,10,0
 DB 37,48,56,108,88,32,0,73,78,67,76,85,68,69,58,32
 DB 37,115,0,69,88,67,69,69,68,69,68,32,77,65,88,32
 DB 73,78,67,76,85,68,69,32,68,69,80,84,72,32,40,53
 DB 41,0,37,48,56,108,88,32,0,60,45,32,68,83,69,71
 DB 32,66,101,103,105,110,0,37,48,56,108,88,32,0,60,45
 DB 32,67,83,69,71,32,66,101,103,105,110,0,37,48,56,108
 DB 88,32,0,60,45,32,87,79,82,68,32,65,76,73,71,78
 DB 44,32,80,65,68,58,32,0,48,48,32,0,57,48,32,0
 DB 60,45,32,68,87,79,82,68,32,65,76,73,71,78,44,32
 DB 80,65,68,58,32,0,48,48,32,0,57,48,32,0,60,45
 DB 32,80,65,82,65,40,49,54,41,32,65,76,73,71,78,44
 DB 32,80,65,68,58,32,0,48,48,32,0,57,48,32,0,37
 DB 48,56,108,88,32,0,60,45,32,69,78,68,32,111,102,32
 DB 83,111,117,114,99,101,32,0,37,48,56,108,88,32,0,60
 DB 45,32,83,84,65,82,84,32,65,100,100,114,101,115,115,32
 DB 0,86,73,82,84,85,65,76,32,83,101,103,109,101,110,116
 DB 32,97,100,100,114,101,115,115,58,32,0,37,48,56,108,88
 DB 0,86,73,82,84,85,65,76,32,83,101,103,109,101,110,116
 DB 32,97,100,100,114,101,115,115,58,32,0,37,48,56,108,88
 DB 0,83,116,97,99,107,32,84,111,116,97,108,58,32,0,37
 DB 48,56,108,88,0,77,97,99,114,111,32,98,117,102,102,101
 DB 114,32,111,118,101,114,102,108,111,119,46,46,46,0,77,97
 DB 99,114,111,32,116,97,98,108,101,32,111,118,101,114,102,108
 DB 111,119,46,46,46,0,32,32,37,100,32,32,0,70,111,114
 DB 119,97,114,100,32,82,101,102,101,114,101,110,99,101,32,98
 DB 117,102,102,101,114,32,111,118,101,114,102,108,111,119,46,46
 DB 46,0,70,111,114,119,97,114,100,32,82,101,102,101,114,101
 DB 110,99,101,32,116,97,98,108,101,32,111,118,101,114,102,108
 DB 111,119,46,46,46,0,70,105,120,117,112,32,84,97,98,108
 DB 101,32,111,118,101,114,102,108,111,119,46,46,46,0,69,120
 DB 116,101,114,110,97,108,32,82,101,102,101,114,101,110,99,101
 DB 32,84,97,98,108,101,32,111,118,101,114,102,108,111,119,46
 DB 46,46,0,124,32,0,124,32,0,124,32,0,32,0,32,0
 DB 32,0,32,0,114,32,0,32,32,0,32,32,0,32,32,0
 DB 32,32,0,114,32,0,32,32,0,32,32,0,32,32,0,32
 DB 32,0,32,32,0,82,32,0,32,32,0,82,32,0,58,0
 DB 32,32,0,32,32,0,13,10,32,32,32,32,32,32,32,32
 DB 32,32,32,32,32,32,32,32,0,32,0,32,0,37,48,56
 DB 108,88,32,42,32,40,37,48,56,108,88,114,41,0,37,48
 DB 56,108,88,32,42,32,40,37,48,56,108,88,41,0,32,37
 DB 48,56,108,88,114,0,32,37,48,56,108,88,0,37,48,56
 DB 108,88,32,42,32,40,37,48,52,108,88,41,32,0,37,48
 DB 52,108,88,32,0,37,48,56,108,88,32,42,32,40,37,48
 DB 50,108,88,41,32,0,37,48,50,108,88,32,0,83,121,109
 DB 98,111,108,32,98,117,102,102,101,114,32,111,118,101,114,102
 DB 108,111,119,46,46,46,0,83,121,109,98,111,108,32,116,97
 DB 98,108,101,32,111,118,101,114,102,108,111,119,46,46,46,0
 DB 76,111,99,97,108,32,115,121,109,98,111,108,32,98,117,102
 DB 102,101,114,32,111,118,101,114,102,108,111,119,46,46,46,0
 DB 76,111,99,97,108,32,115,121,109,98,111,108,32,116,97,98
 DB 108,101,32,111,118,101,114,102,108,111,119,46,46,46,0,85
 DB 110,114,101,115,111,108,118,101,100,32,115,121,109,98,111,108
 DB 32,105,110,32,99,117,114,114,101,110,116,32,109,111,100,117
 DB 108,101,0,85,110,114,101,115,111,108,118,101,100,32,101,120
 DB 116,101,114,110,97,108,58,32,37,115,10,0,83,116,97,99
 DB 107,32,83,105,122,101,58,32,37,108,100,13,10,0,67,111
 DB 100,101,32,32,83,105,122,101,58,32,37,108,100,13,10,0
 DB 68,97,116,97,32,32,83,105,122,101,58,32,37,108,100,13
 DB 10,0,13,10,32,32,32,32,32,32,32,32,32,32,32,32
 DB 32,32,32,32,0,67,79,78,84,73,78,85,73,78,71,45
 DB 62,32,37,115,44,32,76,101,118,101,108,58,37,100,13,10
 DB 0,13,10,0,37,100,32,69,114,114,111,114,115,13,10,37
 DB 100,32,87,97,114,110,105,110,103,115,13,10,0,37,100,32
 DB 69,114,114,111,114,115,13,10,37,100,32,87,97,114,110,105
 DB 110,103,115,13,10,0,66,117,105,108,100,105,110,103,32,82
 DB 117,110,32,102,105,108,101,46,46,46,13,10,0,32,68,111
 DB 110,101,46,13,10,0,13,10,32,32,32,32,32,32,32,32
 DB 32,32,32,32,32,32,32,32,0,80,82,79,67,69,83,83
 DB 73,78,71,45,62,32,37,115,44,32,76,101,118,101,108,58
 DB 37,100,13,10,0,37,48,54,100,32,0,37,48,56,108,88
 DB 32,0,37,48,56,108,88,32,0,37,48,56,108,88,32,0
 DB 37,48,56,108,88,32,0,37,48,56,108,88,32,0,32,0
 DB 37,115,0,13,10,0,73,110,118,97,108,105,100,32,111,112
 DB 116,105,111,110,10,0,114,0,119,98,0,67,97,110,39,116
 DB 32,111,112,101,110,32,82,85,78,32,102,105,108,101,10,0
 DB 84,111,111,32,109,97,110,121,32,111,112,116,105,111,110,115
 DB 10,0,85,115,97,103,101,58,32,65,84,70,102,105,108,101
 DB 32,91,82,117,110,70,105,108,101,93,32,47,76,32,47,69
 DB 32,47,68,32,47,86,13,10,0,47,76,32,61,32,67,111
 DB 109,112,108,101,116,101,32,76,105,115,116,32,102,105,108,101
 DB 32,103,101,110,101,114,97,116,101,100,13,10,0,47,83,32
 DB 61,32,73,110,99,108,117,100,101,32,83,89,77,66,79,76
 DB 83,32,40,111,110,108,121,32,105,110,32,99,111,109,112,108
 DB 101,116,101,32,108,105,115,116,32,102,105,108,101,41,13,10
 DB 0,47,69,32,61,32,76,105,115,116,32,102,105,108,101,32
 DB 102,111,114,32,69,114,114,111,114,115,47,119,97,114,110,105
 DB 110,103,115,32,111,110,108,121,13,10,0,47,68,32,61,32
 DB 80,114,111,99,101,115,115,32,97,115,32,68,121,110,97,109
 DB 105,99,32,108,105,110,107,32,108,105,98,114,97,114,121,13
 DB 10,0,47,86,32,61,32,80,114,111,99,101,115,115,32,97
 DB 115,32,100,101,86,105,99,101,32,100,114,105,118,101,114,13
 DB 10,0,67,97,110,39,116,32,111,112,101,110,32,84,101,109
 DB 112,108,97,116,101,32,102,105,108,101,10,0,119,98,0,67
 DB 97,110,39,116,32,111,112,101,110,32,79,85,84,80,85,84
 DB 32,102,105,108,101,10,0,119,0,67,97,110,39,116,32,111
 DB 112,101,110,32,108,105,115,116,32,102,105,108,101,32,40,115
 DB 111,117,114,99,101,46,76,73,83,41,10,0,68,65,83,77
 DB 32,86,101,114,32,49,46,55,77,32,40,99,41,32,82,46
 DB 65,46,32,66,117,114,103,101,115,115,32,49,57,57,50,44
 DB 49,57,57,51,44,49,57,57,52,44,49,57,57,53,13,10
 DB 13,10,0,68,65,83,77,32,86,101,114,32,49,46,55,77
 DB 32,40,99,41,32,82,46,65,46,32,66,117,114,103,101,115
 DB 115,32,49,57,57,50,44,49,57,57,51,44,49,57,57,52
 DB 44,49,57,57,53,13,10,13,10,0,76,73,78,69,32,32
 DB 32,79,70,70,83,69,84,32,32,32,65,67,84,73,79,78
 DB 47,68,65,84,65,47,67,79,68,69,32,32,32,32,32,32
 DB 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,83
 DB 79,85,82,67,69,13,10,13,10,0,67,97,110,39,116,32
 DB 65,108,108,111,99,97,116,101,32,98,117,102,102,101,114,32
 DB 49,10,0,67,97,110,39,116,32,65,108,108,111,99,97,116
 DB 101,32,98,117,102,102,101,114,32,50,10,0,67,97,110,39
 DB 116,32,65,108,108,111,99,97,116,101,32,98,117,102,102,101
 DB 114,32,51,10,0,67,97,110,39,116,32,65,108,108,111,99
 DB 97,116,101,32,98,117,102,102,101,114,32,52,10,0,67,97
 DB 110,39,116,32,65,108,108,111,99,97,116,101,32,98,117,102
 DB 102,101,114,32,53,10,0,67,97,110,39,116,32,65,108,108
 DB 111,99,97,116,101,32,98,117,102,102,101,114,32,54,10,0
 DB 67,97,110,39,116,32,65,108,108,111,99,97,116,101,32,67
 DB 83,32,98,117,102,102,101,114,32,10,0,67,97,110,39,116
 DB 32,65,108,108,111,99,97,116,101,32,68,83,32,98,117,102
 DB 102,101,114,32,10,0
PUBLIC _rgInsLookUp DD 209 DUP(0)
PUBLIC _lineno DD 5 DUP(0)
PUBLIC _srcname DB 200 DUP(0)
PUBLIC _runname DB 40 DUP(0)
PUBLIC _lstname DB 40 DUP(0)
PUBLIC _pcsbuf DD 0h
PUBLIC _pdsbuf DD 0h
PUBLIC _ics DD 0h
PUBLIC _ids DD 0h
PUBLIC _line_buf0 DB 200 DUP(0)
PUBLIC _line_buf1 DB 200 DUP(0)
PUBLIC _line_ptr DD 0h
PUBLIC _list_buf DB 200 DUP(0)
PUBLIC _TString DB 133 DUP(0)
PUBLIC _CBString DD 0h
PUBLIC _TSymnum DD 0h
PUBLIC _TNumber DD 0h
PUBLIC _TInst DD 0h
PUBLIC _TReg DD 0h
PUBLIC _Token DD 0h
PUBLIC _LTString DB 133 DUP(0)
PUBLIC _LCBString DD 0h
PUBLIC _LTSymnum DD 0h
PUBLIC _LTNumber DD 0h
PUBLIC _LTInst DD 0h
PUBLIC _LTReg DD 0h
PUBLIC _LToken DD 0h
PUBLIC _UString DB 31 DUP(0)
PUBLIC _UCBString DD 0h
PUBLIC _gst DB 14000 DUP(0)
PUBLIC _pSymBuf DD 0h
PUBLIC _pSymNext DD 0h
PUBLIC _lst DB 36000 DUP(0)
PUBLIC _pLSymBuf DD 0h
PUBLIC _pLSymNext DD 0h
PUBLIC _pfrt DD 0h
PUBLIC _pRefBuf DD 0h
PUBLIC _pRefNext DD 0h
PUBLIC _ert DB 21060 DUP(0)
PUBLIC _nExtRef DD 0h
PUBLIC _pfut DD 0h
PUBLIC _rgMacPtr DD 300 DUP(0)
PUBLIC _pMacBuf DD 0h
PUBLIC _pMacNext DD 0h
PUBLIC _rgToken DD 60 DUP(0)
PUBLIC _rgVal DD 60 DUP(0)
PUBLIC _rgTID DD 60 DUP(0)
PUBLIC _rgTCnt DD 3 DUP(0)
PUBLIC _rgOpType DD 3 DUP(0)
PUBLIC _rgOpReg DD 3 DUP(0)
PUBLIC _OpSize DB 3 DUP(0)
PUBLIC _OpSizeA DB 0h
PUBLIC _OpPrefix DB 0h
PUBLIC _iInstEntry DD 0h
PUBLIC _CrntInst DD 0h
PUBLIC _InstPfx DD 0h
PUBLIC _nOperands DD 0h
PUBLIC _fForRef DB 0h
PUBLIC _OpMType DB 0h
PUBLIC _OpBase DD 0h
PUBLIC _OpIndx DD 0h
PUBLIC _OpDisp DD 0h
PUBLIC _iMemEntry DD 0h
PUBLIC _OpImm DD 0h
PUBLIC _fOpImm DB 0h
PUBLIC _OpImm2 DD 0h
PUBLIC _fOpImm2 DB 0h
PUBLIC _nFixUp DB 0h
PUBLIC _bOpc1 DB 0h
PUBLIC _bOpc2 DB 0h
PUBLIC _bModRM DB 0h
PUBLIC _bSIB DB 0h
PUBLIC _fModRM DB 0h
PUBLIC _fSIB DB 0h
PUBLIC _ExpType DB 0h
PUBLIC _ExpType0 DB 0h
PUBLIC _nExpSyms DD 0h
PUBLIC _iExpSym DD 0h
PUBLIC _iExpSym0 DD 0h
PUBLIC _fOffset DB 0h
PUBLIC _tag DB 5 DUP(0)


.CODE
EXTRN _iscntrl: NEAR
EXTRN _isspace: NEAR
EXTRN _isdigit: NEAR
EXTRN _isupper: NEAR
EXTRN _islower: NEAR
EXTRN _ispunct: NEAR
EXTRN _isalpha: NEAR
EXTRN _isxdigit: NEAR
EXTRN _isalnum: NEAR
EXTRN _isgraph: NEAR
EXTRN _toupper: NEAR
EXTRN _tolower: NEAR
EXTRN _fopen: NEAR
EXTRN _fclose: NEAR
EXTRN _remove: NEAR
EXTRN _rename: NEAR
EXTRN _fgetc: NEAR
EXTRN _fgets: NEAR
EXTRN _fputs: NEAR
EXTRN _fputc: NEAR
EXTRN _printf: NEAR
EXTRN _sprintf: NEAR
EXTRN _fprintf: NEAR
EXTRN _ftell: NEAR
EXTRN _rewind: NEAR
EXTRN _fseek: NEAR
EXTRN _fread: NEAR
EXTRN _fwrite: NEAR
EXTRN _strcpy: NEAR
EXTRN _strncpy: NEAR
EXTRN _strcat: NEAR
EXTRN _strncat: NEAR
EXTRN _strcmp: NEAR
EXTRN _strncmp: NEAR
EXTRN _strlen: NEAR
EXTRN _strchr: NEAR
EXTRN _exit: NEAR
PUBLIC _OutDWordX:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,9
	LEA EAX,DWORD PTR [EBP+8]
	MOV DWORD PTR [EBP-4], EAX
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1
	XOR EAX,EAX
	MOV DWORD PTR [EBP-9], EAX
L_2:
	MOV EAX,DWORD PTR [EBP-9]
	CMP EAX,4
	SETL AL
	AND AL,AL
	JZ L_3
	JMP SHORT L_4
L_5:
	MOV EAX,DWORD PTR [EBP-9]
	INC DWORD PTR [EBP-9]
	JMP SHORT L_2
L_4:
	MOV ESI,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-5], AL
	MOV EAX,_ids
	INC _ids
	MOV ESI,_pdsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-5]
	MOV BYTE PTR [ESI], AL
	JMP L_5
L_3:
	MOV EAX,_oNextData
	ADD EAX,4
	MOV _oNextData, EAX
	JMP L_6
L_1:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-9], EAX
L_7:
	MOV EAX,DWORD PTR [EBP-9]
	CMP EAX,4
	SETL AL
	AND AL,AL
	JZ L_8
	JMP SHORT L_9
L_10:
	MOV EAX,DWORD PTR [EBP-9]
	INC DWORD PTR [EBP-9]
	JMP SHORT L_7
L_9:
	MOV ESI,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-5], AL
	MOV EAX,_ics
	INC _ics
	MOV ESI,_pcsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-5]
	MOV BYTE PTR [ESI], AL
	JMP L_10
L_8:
	MOV EAX,_oNextCode
	ADD EAX,4
	MOV _oNextCode, EAX
L_6:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _OutDWordCS:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,9
	LEA EAX,DWORD PTR [EBP+8]
	MOV DWORD PTR [EBP-4], EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-9], EAX
L_11:
	MOV EAX,DWORD PTR [EBP-9]
	CMP EAX,4
	SETL AL
	AND AL,AL
	JZ L_12
	JMP SHORT L_13
L_14:
	MOV EAX,DWORD PTR [EBP-9]
	INC DWORD PTR [EBP-9]
	JMP SHORT L_11
L_13:
	MOV ESI,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-5], AL
	MOV EAX,_ics
	INC _ics
	MOV ESI,_pcsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-5]
	MOV BYTE PTR [ESI], AL
	JMP L_14
L_12:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _readCS:
	PUSH EBP
	MOV EBP,ESP
L_15:
	MOV EAX,DWORD PTR [EBP+8]
	DEC DWORD PTR [EBP+8]
	AND EAX,EAX
	JZ L_16
	MOV ESI,DWORD PTR [EBP+12]
	INC DWORD PTR [EBP+12]
	MOV EAX,_ics
	INC _ics
	MOV EBX,ESI
	MOV ESI,_pcsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
	JMP L_15
L_16:
	POP EBP
	RETN 8
PUBLIC _writeCS:
	PUSH EBP
	MOV EBP,ESP
L_17:
	MOV EAX,DWORD PTR [EBP+8]
	DEC DWORD PTR [EBP+8]
	AND EAX,EAX
	JZ L_18
	MOV EAX,_ics
	INC _ics
	MOV ESI,_pcsbuf
	ADD ESI,EAX
	MOV EBX,ESI
	MOV ESI,DWORD PTR [EBP+12]
	INC DWORD PTR [EBP+12]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
	JMP L_17
L_18:
	POP EBP
	RETN 8
PUBLIC _seekCS:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+8]
	MOV _ics, EAX
	POP EBP
	RETN 4
PUBLIC _OutDWordDS:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,9
	LEA EAX,DWORD PTR [EBP+8]
	MOV DWORD PTR [EBP-4], EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-9], EAX
L_19:
	MOV EAX,DWORD PTR [EBP-9]
	CMP EAX,4
	SETL AL
	AND AL,AL
	JZ L_20
	JMP SHORT L_21
L_22:
	MOV EAX,DWORD PTR [EBP-9]
	INC DWORD PTR [EBP-9]
	JMP SHORT L_19
L_21:
	MOV ESI,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-5], AL
	MOV EAX,_ids
	INC _ids
	MOV ESI,_pdsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-5]
	MOV BYTE PTR [ESI], AL
	JMP L_22
L_20:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _readDS:
	PUSH EBP
	MOV EBP,ESP
L_23:
	MOV EAX,DWORD PTR [EBP+8]
	DEC DWORD PTR [EBP+8]
	AND EAX,EAX
	JZ L_24
	MOV ESI,DWORD PTR [EBP+12]
	INC DWORD PTR [EBP+12]
	MOV EAX,_ids
	INC _ids
	MOV EBX,ESI
	MOV ESI,_pdsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
	JMP L_23
L_24:
	POP EBP
	RETN 8
PUBLIC _writeDS:
	PUSH EBP
	MOV EBP,ESP
L_25:
	MOV EAX,DWORD PTR [EBP+8]
	DEC DWORD PTR [EBP+8]
	AND EAX,EAX
	JZ L_26
	MOV EAX,_ids
	INC _ids
	MOV ESI,_pdsbuf
	ADD ESI,EAX
	MOV EBX,ESI
	MOV ESI,DWORD PTR [EBP+12]
	INC DWORD PTR [EBP+12]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
	JMP L_25
L_26:
	POP EBP
	RETN 8
PUBLIC _seekDS:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+8]
	MOV _ids, EAX
	POP EBP
	RETN 4
PUBLIC _OutWordX:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,9
	LEA EAX,DWORD PTR [EBP+8]
	MOV DWORD PTR [EBP-4], EAX
	MOV ESI,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-5], AL
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_27
	MOV EAX,_ids
	INC _ids
	MOV ESI,_pdsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-5]
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-4]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-5], AL
	MOV EAX,_ids
	INC _ids
	MOV ESI,_pdsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-5]
	MOV BYTE PTR [ESI], AL
	MOV EAX,_oNextData
	ADD EAX,2
	MOV _oNextData, EAX
	JMP L_28
L_27:
	MOV EAX,_ics
	INC _ics
	MOV ESI,_pcsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-5]
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-4]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-5], AL
	MOV EAX,_ics
	INC _ics
	MOV ESI,_pcsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-5]
	MOV BYTE PTR [ESI], AL
	MOV EAX,_oNextCode
	ADD EAX,2
	MOV _oNextCode, EAX
L_28:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _OutByteX:
	PUSH EBP
	MOV EBP,ESP
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_29
	MOV EAX,_ids
	INC _ids
	MOV ESI,_pdsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+8]
	MOV BYTE PTR [ESI], AL
	MOV EAX,_oNextData
	INC _oNextData
	JMP L_30
L_29:
	MOV EAX,_ics
	INC _ics
	MOV ESI,_pcsbuf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+8]
	MOV BYTE PTR [ESI], AL
	MOV EAX,_oNextCode
	INC _oNextCode
L_30:
	POP EBP
	RETN 4
PUBLIC _OutByteCS:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,1
	MOV EAX,DWORD PTR [EBP+8]
	MOV BYTE PTR [EBP-1], AL
	MOV EAX,_ics
	INC _ics
	MOV ESI,_pcsbuf
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [EBP-1]
	MOV BYTE PTR [ESI], AL
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _is_ident:
	PUSH EBP
	MOV EBP,ESP
	MOVSX EAX,BYTE PTR [EBP+8]
	PUSH EAX
	CALL _isalpha
	AND EAX,EAX
	JNZ L_31
	MOVSX EAX,BYTE PTR [EBP+8]
	CMP EAX,95
	SETE AL
	AND AL,AL
L_31:
	POP EBP
	RETN 4
PUBLIC _isskip:
	PUSH EBP
	MOV EBP,ESP
	MOVSX EAX,BYTE PTR [EBP+8]
	XOR ECX,ECX
	CMP EAX,ECX
	SETG AL
	AND AL,AL
	JZ L_33
	MOVSX EAX,BYTE PTR [EBP+8]
	CMP EAX,32
	SETLE AL
	AND AL,AL
L_33:
	JZ L_34
	MOV EAX,1
	JMP L_35
L_34:
	XOR EAX,EAX
L_36:
L_35:
	POP EBP
	RETN 4
PUBLIC _put_hexb:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,18
	XOR EAX,EAX
	MOV DWORD PTR [EBP-14], EAX
	MOV EAX,2
	MOV DWORD PTR [EBP-18], EAX
L_37:
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+12]
	MOV ECX,16
	XOR EDX,EDX
	DIV ECX
	MOV EAX,EDX
	MOV ECX,48
	ADD EAX,ECX
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,57
	SETG AL
	AND AL,AL
	JZ L_40
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,7
	ADD EAX,ECX
	MOV BYTE PTR [ESI], AL
L_40:
	MOV EAX,DWORD PTR [EBP-14]
	INC DWORD PTR [EBP-14]
L_38:
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+12]
	MOV ECX,16
	XOR EDX,EDX
	DIV ECX
	MOV BYTE PTR [EBP+12], AL
	AND EAX,EAX
	JNZ L_37
L_39:
L_41:
	MOV EAX,DWORD PTR [EBP-18]
	DEC DWORD PTR [EBP-18]
	CMP EAX,DWORD PTR [EBP-14]
	SETA AL
	AND AL,AL
	JZ L_42
	PUSH 48
	PUSH DWORD PTR [EBP+8]
	CALL _fputc
	JMP L_41
L_42:
L_43:
	MOV EAX,DWORD PTR [EBP-14]
	AND EAX,EAX
	JZ L_44
	DEC DWORD PTR [EBP-14]
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	PUSH DWORD PTR [EBP+8]
	CALL _fputc
	JMP L_43
L_44:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _put_hexw:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,18
	XOR EAX,EAX
	MOV DWORD PTR [EBP-14], EAX
	MOV EAX,4
	MOV DWORD PTR [EBP-18], EAX
L_45:
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP+12]
	MOV ECX,16
	XOR EDX,EDX
	DIV ECX
	MOV EAX,EDX
	ADD EAX,48
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,57
	SETG AL
	AND AL,AL
	JZ L_48
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,7
	ADD EAX,ECX
	MOV BYTE PTR [ESI], AL
L_48:
	MOV EAX,DWORD PTR [EBP-14]
	INC DWORD PTR [EBP-14]
L_46:
	MOV EAX,DWORD PTR [EBP+12]
	MOV ECX,16
	XOR EDX,EDX
	DIV ECX
	MOV DWORD PTR [EBP+12], EAX
	AND EAX,EAX
	JNZ L_45
L_47:
L_49:
	MOV EAX,DWORD PTR [EBP-18]
	DEC DWORD PTR [EBP-18]
	CMP EAX,DWORD PTR [EBP-14]
	SETA AL
	AND AL,AL
	JZ L_50
	PUSH 48
	PUSH DWORD PTR [EBP+8]
	CALL _fputc
	JMP L_49
L_50:
L_51:
	MOV EAX,DWORD PTR [EBP-14]
	AND EAX,EAX
	JZ L_52
	DEC DWORD PTR [EBP-14]
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	PUSH DWORD PTR [EBP+8]
	CALL _fputc
	JMP L_51
L_52:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _put_hexd:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,18
	XOR EAX,EAX
	MOV DWORD PTR [EBP-14], EAX
	MOV EAX,8
	MOV DWORD PTR [EBP-18], EAX
L_53:
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP+12]
	MOV ECX,16
	XOR EDX,EDX
	DIV ECX
	MOV EAX,EDX
	ADD EAX,48
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,57
	SETG AL
	AND AL,AL
	JZ L_56
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,7
	ADD EAX,ECX
	MOV BYTE PTR [ESI], AL
L_56:
	MOV EAX,DWORD PTR [EBP-14]
	INC DWORD PTR [EBP-14]
L_54:
	MOV EAX,DWORD PTR [EBP+12]
	MOV ECX,16
	XOR EDX,EDX
	DIV ECX
	MOV DWORD PTR [EBP+12], EAX
	AND EAX,EAX
	JNZ L_53
L_55:
L_57:
	MOV EAX,DWORD PTR [EBP-18]
	DEC DWORD PTR [EBP-18]
	CMP EAX,DWORD PTR [EBP-14]
	SETA AL
	AND AL,AL
	JZ L_58
	PUSH 48
	PUSH DWORD PTR [EBP+8]
	CALL _fputc
	JMP L_57
L_58:
L_59:
	MOV EAX,DWORD PTR [EBP-14]
	AND EAX,EAX
	JZ L_60
	DEC DWORD PTR [EBP-14]
	MOV EAX,DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-10]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	PUSH DWORD PTR [EBP+8]
	CALL _fputc
	JMP L_59
L_60:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _expr4:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,4
	MOV EAX,_Token
	CMP EAX,112
	SETE AL
	AND AL,AL
	JZ L_61
	MOV EAX,1
	MOV _fOffset, AL
	CALL _Parse
L_61:
	MOV EAX,_Token
	CMP EAX,40
	SETE AL
	AND AL,AL
	JZ L_62
	CALL _Parse
	PUSH DWORD PTR [EBP+8]
	CALL _expr1
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,_Token
	CMP EAX,41
	SETE AL
	AND AL,AL
	JZ L_63
	CALL _Parse
	JMP L_64
L_63:
	PUSH 1
	CALL _line_error
	XOR EAX,EAX
	JMP L_65
L_64:
	JMP L_66
L_62:
	MOV EAX,_Token
	CMP EAX,6
	SETE AL
	AND AL,AL
	JZ L_67
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,_TNumber
	MOV DWORD PTR [ESI], EAX
	CALL _Parse
	JMP L_68
L_67:
	MOV EAX,_Token
	CMP EAX,4
	SETE AL
	AND AL,AL
	JZ L_69
	MOV EAX,_nExpSyms
	INC _nExpSyms
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV EBX,ESI
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+16]
	MOV DWORD PTR [EBX], EAX
	MOV EAX,_TSymnum
	MOV _iExpSym, EAX
	MOV EAX,1
	MOV _ExpType, AL
	CALL _Parse
	JMP L_70
L_69:
	MOV EAX,_Token
	CMP EAX,3
	SETE AL
	AND AL,AL
	JZ L_71
	MOV EAX,_nExpSyms
	INC _nExpSyms
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV EBX,ESI
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+16]
	MOV DWORD PTR [EBX], EAX
	MOV EAX,_TSymnum
	MOV _iExpSym, EAX
	MOV EAX,2
	MOV _ExpType, AL
	CALL _Parse
	JMP L_72
L_71:
	MOV EAX,_Token
	CMP EAX,8
	SETE AL
	AND AL,AL
	JZ L_73
	MOV EAX,_nExpSyms
	INC _nExpSyms
	MOV ESI,DWORD PTR [EBP+8]
	XOR EAX,EAX
	MOV DWORD PTR [ESI], EAX
	XOR EAX,EAX
	MOV _iExpSym, EAX
	XOR EAX,EAX
	MOV _ExpType, AL
	PUSH OFFSET _UString
	PUSH OFFSET _TString
	PUSH 30
	CALL _strncpy
	MOV EAX,_CBString
	CMP EAX,30
	SETG AL
	AND AL,AL
	JZ L_74
	MOV EAX,30
	MOV _UCBString, EAX
	JMP L_75
L_74:
	MOV EAX,_CBString
	MOV _UCBString, EAX
L_75:
	MOV EAX,_UCBString
	MOV ESI,OFFSET _UString
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	CALL _Parse
	JMP L_76
L_73:
	MOV EAX,_Token
	CMP EAX,36
	SETE AL
	AND AL,AL
	JZ L_77
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_78
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,_oNextData
	MOV DWORD PTR [ESI], EAX
	JMP L_79
L_78:
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,_oNextCode
	MOV DWORD PTR [ESI], EAX
L_79:
	MOV EAX,3
	MOV _ExpType, AL
	CALL _Parse
	JMP L_80
L_77:
	PUSH 2
	CALL _line_error
	XOR EAX,EAX
	JMP L_65
L_80:
L_76:
L_72:
L_70:
L_68:
L_66:
	MOV EAX,1
L_65:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _expr3:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,4
	MOV EAX,_Token
	CMP EAX,45
	SETE AL
	AND AL,AL
	JZ L_81
	CALL _Parse
	PUSH DWORD PTR [EBP+8]
	CALL _expr4
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,DWORD PTR [EBP-4]
	AND EAX,EAX
	JZ L_82
	MOV ESI,DWORD PTR [EBP+8]
	MOV EBX,ESI
	MOV ESI,DWORD PTR [EBP+8]
	NEG DWORD PTR [ESI]
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBX], EAX
	MOV EAX,1
	JMP L_83
L_82:
	PUSH 3
	CALL _line_error
	XOR EAX,EAX
	JMP L_83
L_84:
	JMP L_85
L_81:
	PUSH DWORD PTR [EBP+8]
	CALL _expr4
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,DWORD PTR [EBP-4]
L_85:
L_83:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _expr2:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	PUSH DWORD PTR [EBP+8]
	CALL _expr3
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,_Token
	CMP EAX,42
	SETNE AL
	AND AL,AL
	JZ L_86
	MOV EAX,_Token
	CMP EAX,47
	SETNE AL
	AND AL,AL
L_86:
	JZ L_87
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_88
L_87:
L_89:
	MOV EAX,1
	AND EAX,EAX
	JZ L_90
	MOV EAX,_Token
	CMP EAX,42
	SETE AL
	AND AL,AL
	JZ L_91
	CALL _Parse
	LEA EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL _expr2
	AND EAX,EAX
	JZ L_92
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,DWORD PTR [ESI]
	MOV ECX,DWORD PTR [EBP-8]
	IMUL ECX
	MOV DWORD PTR [ESI], EAX
L_92:
	JMP L_93
L_91:
	MOV EAX,_Token
	CMP EAX,47
	SETE AL
	AND AL,AL
	JZ L_94
	CALL _Parse
	LEA EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL _expr2
	AND EAX,EAX
	JZ L_95
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,DWORD PTR [ESI]
	MOV ECX,DWORD PTR [EBP-8]
	CDQ
	IDIV ECX
	MOV DWORD PTR [ESI], EAX
L_95:
	JMP L_96
L_94:
	MOV EAX,1
	JMP L_88
L_96:
L_93:
	JMP L_89
L_90:
L_88:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _expr1:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	PUSH DWORD PTR [EBP+8]
	CALL _expr2
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,_Token
	CMP EAX,43
	SETNE AL
	AND AL,AL
	JZ L_97
	MOV EAX,_Token
	CMP EAX,45
	SETNE AL
	AND AL,AL
L_97:
	JZ L_98
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_99
L_98:
L_100:
	MOV EAX,1
	AND EAX,EAX
	JZ L_101
	MOV EAX,_Token
	CMP EAX,43
	SETE AL
	AND AL,AL
	JZ L_102
	CALL _Parse
	MOV EAX,_Token
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_103
	MOV EAX,1
	JMP L_99
L_103:
	LEA EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL _expr2
	AND EAX,EAX
	JZ L_104
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,DWORD PTR [ESI]
	ADD EAX,DWORD PTR [EBP-8]
	MOV DWORD PTR [ESI], EAX
	JMP L_105
L_104:
	XOR EAX,EAX
	JMP L_99
L_105:
	JMP L_106
L_102:
	MOV EAX,_Token
	CMP EAX,45
	SETE AL
	AND AL,AL
	JZ L_107
	CALL _Parse
	MOV EAX,_Token
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_108
	MOV EAX,1
	JMP L_99
L_108:
	LEA EAX,DWORD PTR [EBP-8]
	PUSH EAX
	CALL _expr2
	AND EAX,EAX
	JZ L_109
	MOV ESI,DWORD PTR [EBP+8]
	MOV EAX,DWORD PTR [ESI]
	SUB EAX,DWORD PTR [EBP-8]
	MOV DWORD PTR [ESI], EAX
	JMP L_110
L_109:
	XOR EAX,EAX
	JMP L_99
L_110:
	JMP L_111
L_107:
	MOV EAX,1
	JMP L_99
L_111:
L_106:
	JMP L_100
L_101:
L_99:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _Expression:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,4
	XOR EAX,EAX
	MOV _nExpSyms, EAX
	XOR EAX,EAX
	MOV _fOffset, AL
	LEA EAX,DWORD PTR [EBP-4]
	PUSH EAX
	CALL _expr1
	AND EAX,EAX
	JZ L_112
	MOV EAX,_Token
	AND EAX,EAX
	JZ L_113
	CALL _ReturnToken
L_113:
	MOV EAX,_nExpSyms
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_114
	MOVSX EAX,_fOffset
	AND EAX,EAX
	JZ L_115
	MOV EAX,7
	MOV _Token, EAX
	JMP L_116
L_115:
	MOV EAX,9
	MOV _Token, EAX
L_116:
	JMP L_117
L_114:
	MOV EAX,6
	MOV _Token, EAX
L_117:
	MOV EAX,_iExpSym
	MOV _TSymnum, EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV _TNumber, EAX
	MOV EAX,1
	JMP L_118
L_112:
	XOR EAX,EAX
L_119:
L_118:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _is_r32:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+8]
	JMP L_121
L_122:
L_123:
L_124:
L_125:
L_126:
L_127:
L_128:
L_129:
	MOV EAX,1
	JMP L_130
L_131:
	XOR EAX,EAX
	JMP L_130
L_121:
	CMP EAX,162
	JE L_129
	CMP EAX,155
	JE L_128
	CMP EAX,158
	JE L_127
	CMP EAX,160
	JE L_126
	CMP EAX,159
	JE L_125
	CMP EAX,157
	JE L_124
	CMP EAX,156
	JE L_123
	CMP EAX,154
	JE L_122
	JMP L_131
L_120:
L_130:
	POP EBP
	RETN 4
PUBLIC _is_r16:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+8]
	JMP L_133
L_134:
L_135:
L_136:
L_137:
L_138:
L_139:
L_140:
L_141:
	MOV EAX,1
	JMP L_142
L_143:
	XOR EAX,EAX
	JMP L_142
L_133:
	CMP EAX,166
	JE L_141
	CMP EAX,133
	JE L_140
	CMP EAX,144
	JE L_139
	CMP EAX,165
	JE L_138
	CMP EAX,153
	JE L_137
	CMP EAX,142
	JE L_136
	CMP EAX,134
	JE L_135
	CMP EAX,130
	JE L_134
	JMP L_143
L_132:
L_142:
	POP EBP
	RETN 4
PUBLIC _is_r8:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+8]
	JMP L_145
L_146:
L_147:
L_148:
L_149:
L_150:
L_151:
L_152:
L_153:
	MOV EAX,1
	JMP L_154
L_155:
	XOR EAX,EAX
	JMP L_154
L_145:
	CMP EAX,143
	JE L_153
	CMP EAX,135
	JE L_152
	CMP EAX,131
	JE L_151
	CMP EAX,128
	JE L_150
	CMP EAX,145
	JE L_149
	CMP EAX,136
	JE L_148
	CMP EAX,132
	JE L_147
	CMP EAX,129
	JE L_146
	JMP L_155
L_144:
L_154:
	POP EBP
	RETN 4
PUBLIC _is_rSEG:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+8]
	JMP L_157
L_158:
L_159:
L_160:
L_161:
L_162:
L_163:
	MOV EAX,1
	JMP L_164
L_165:
	XOR EAX,EAX
	JMP L_164
L_157:
	CMP EAX,167
	JE L_163
	CMP EAX,164
	JE L_162
	CMP EAX,163
	JE L_161
	CMP EAX,141
	JE L_160
	CMP EAX,161
	JE L_159
	CMP EAX,152
	JE L_158
	JMP L_165
L_156:
L_164:
	POP EBP
	RETN 4
PUBLIC _is_rDRG:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+8]
	JMP L_167
L_168:
L_169:
L_170:
L_171:
L_172:
L_173:
	MOV EAX,1
	JMP L_174
L_175:
	XOR EAX,EAX
	JMP L_174
L_167:
	CMP EAX,151
	JE L_173
	CMP EAX,150
	JE L_172
	CMP EAX,149
	JE L_171
	CMP EAX,148
	JE L_170
	CMP EAX,147
	JE L_169
	CMP EAX,146
	JE L_168
	JMP L_175
L_166:
L_174:
	POP EBP
	RETN 4
PUBLIC _is_rCRG:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+8]
	CMP EAX,137
	SETE AL
	AND AL,AL
	JNZ L_176
	MOV EAX,DWORD PTR [EBP+8]
	CMP EAX,139
	SETE AL
	AND AL,AL
	JNZ L_177
	MOV EAX,DWORD PTR [EBP+8]
	CMP EAX,140
	SETE AL
	AND AL,AL
L_177:
L_176:
	POP EBP
	RETN 4
PUBLIC _is_rTRG:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+8]
	CMP EAX,168
	SETE AL
	AND AL,AL
	JNZ L_179
	MOV EAX,DWORD PTR [EBP+8]
	CMP EAX,169
	SETE AL
	AND AL,AL
L_179:
	POP EBP
	RETN 4
PUBLIC _is_Comp:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+12]
	SHL EAX,3
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP+8]
	ADD EAX,1
	ADD EAX,EBX
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	JMP L_182
L_183:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,EAX
	JNZ L_184
	MOV EAX,1
	JMP L_185
L_184:
	JMP L_181
L_186:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,61
	SETE AL
	AND AL,AL
	JZ L_187
	MOV EAX,1
	JMP L_185
L_187:
	JMP L_181
L_188:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,62
	SETE AL
	AND AL,AL
	JZ L_189
	MOV EAX,1
	JMP L_185
L_189:
	JMP L_181
L_190:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,64
	SETE AL
	AND AL,AL
	JZ L_191
	MOV EAX,1
	JMP L_185
L_191:
	JMP L_181
L_192:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,64
	SETE AL
	AND AL,AL
	JZ L_193
	MOV EAX,1
	JMP L_185
L_193:
	JMP L_181
L_194:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JZ L_195
	MOV EAX,1
	JMP L_185
L_195:
	JMP L_181
L_196:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,66
	SETE AL
	AND AL,AL
	JZ L_197
	MOV EAX,1
	JMP L_185
L_197:
	JMP L_181
L_198:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,64
	SETE AL
	AND AL,AL
	JNZ L_199
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JNZ L_200
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,66
	SETE AL
	AND AL,AL
L_200:
L_199:
	JZ L_201
	MOV EAX,1
	JMP L_185
L_201:
	JMP L_181
L_202:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JNZ L_203
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,66
	SETE AL
	AND AL,AL
L_203:
	JZ L_204
	MOV EAX,1
	JMP L_185
L_204:
	JMP L_181
L_205:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,64
	SETE AL
	AND AL,AL
	JZ L_206
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,129
	SETE AL
	AND AL,AL
L_206:
	JNZ L_207
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JZ L_208
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,130
	SETE AL
	AND AL,AL
L_208:
	JNZ L_209
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,66
	SETE AL
	AND AL,AL
	JZ L_210
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,154
	SETE AL
	AND AL,AL
L_210:
L_209:
L_207:
	JZ L_211
	MOV EAX,1
	JMP L_185
L_211:
	JMP L_181
L_212:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,70
	SETE AL
	AND AL,AL
	JZ L_213
	MOV EAX,1
	JMP L_185
L_213:
	JMP L_181
L_214:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,71
	SETE AL
	AND AL,AL
	JZ L_215
	MOV EAX,1
	JMP L_185
L_215:
	JMP L_181
L_216:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,72
	SETE AL
	AND AL,AL
	JZ L_217
	MOV EAX,1
	JMP L_185
L_217:
	JMP L_181
L_218:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,73
	SETE AL
	AND AL,AL
	JZ L_219
	MOV EAX,1
	JMP L_185
L_219:
	JMP L_181
L_220:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,87
	SETE AL
	AND AL,AL
	JZ L_221
	MOV EAX,1
	JMP L_185
L_221:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,88
	SETE AL
	AND AL,AL
	JZ L_222
	MOV EAX,_OpImm
	CMP EAX,256
	SETL AL
	AND AL,AL
	JZ L_223
	MOV EAX,_OpImm
	CMP EAX,0
	SETGE AL
	AND AL,AL
L_223:
L_222:
	JZ L_224
	MOV EAX,1
	JMP L_185
L_224:
	JMP L_181
L_225:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,87
	SETE AL
	AND AL,AL
	JZ L_226
	MOV EAX,1
	JMP L_185
L_226:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,88
	SETE AL
	AND AL,AL
	JZ L_227
	MOV EAX,_OpImm
	CMP EAX,128
	SETL AL
	AND AL,AL
	JZ L_228
	MOV EAX,_OpImm
	CMP EAX,0
	SETGE AL
	AND AL,AL
L_228:
L_227:
	JZ L_229
	MOV EAX,1
	JMP L_185
L_229:
	JMP L_181
L_230:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,87
	SETE AL
	AND AL,AL
	JNZ L_231
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,88
	SETE AL
	AND AL,AL
L_231:
	JZ L_232
	MOV EAX,1
	JMP L_185
L_232:
	JMP L_181
L_233:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,87
	SETE AL
	AND AL,AL
	JNZ L_234
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,88
	SETE AL
	AND AL,AL
	JNZ L_235
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,89
	SETE AL
	AND AL,AL
L_235:
L_234:
	JZ L_236
	MOV EAX,1
	JMP L_185
L_236:
	JMP L_181
L_237:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,64
	SETE AL
	AND AL,AL
	JNZ L_238
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETE AL
	AND AL,AL
	JZ L_239
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,1
	AND EAX,ECX
L_239:
L_238:
	JZ L_240
	MOV EAX,1
	JMP L_185
L_240:
	JMP L_181
L_241:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JNZ L_242
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETE AL
	AND AL,AL
	JZ L_243
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,2
	AND EAX,ECX
L_243:
L_242:
	JZ L_244
	MOV EAX,1
	JMP L_185
L_244:
	JMP L_181
L_245:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,64
	SETE AL
	AND AL,AL
	JNZ L_246
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JNZ L_247
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,66
	SETE AL
	AND AL,AL
	JNZ L_248
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETE AL
	AND AL,AL
L_248:
L_247:
L_246:
	JZ L_249
	MOV EAX,1
	JMP L_185
L_249:
	JMP L_181
L_250:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETE AL
	AND AL,AL
	JZ L_251
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	AND EAX,ECX
	JZ L_252
	XOR EAX,EAX
	JMP L_185
L_252:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,1
	AND EAX,ECX
	JZ L_253
	XOR EAX,EAX
	JMP L_185
L_253:
	MOV EAX,1
	JMP L_185
L_251:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JNZ L_254
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,66
	SETE AL
	AND AL,AL
L_254:
	JZ L_255
	MOV EAX,1
	JMP L_185
L_255:
	JMP L_181
L_256:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETE AL
	AND AL,AL
	JZ L_257
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	AND EAX,ECX
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_257:
	JZ L_258
	MOV EAX,1
	JMP L_185
L_258:
	JMP L_181
L_259:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,83
	SETE AL
	AND AL,AL
	JZ L_260
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	AND EAX,ECX
L_260:
	JZ L_261
	MOV EAX,1
	JMP L_185
L_261:
	JMP L_181
L_262:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETE AL
	AND AL,AL
	JZ L_263
	MOVSX EAX,_OpMType
	MOV ECX,64
	AND EAX,ECX
	JZ L_264
	MOVSX EAX,_OpMType
	MOV ECX,2
	AND EAX,ECX
	XOR ECX,ECX
	CMP EAX,ECX
	SETE AL
	AND AL,AL
	JZ L_265
	MOVSX EAX,_OpMType
	MOV ECX,1
	AND EAX,ECX
	XOR ECX,ECX
	CMP EAX,ECX
	SETE AL
	AND AL,AL
L_265:
L_264:
L_263:
	JZ L_266
	MOV EAX,1
	JMP L_185
L_266:
	JMP L_181
L_267:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,87
	SETE AL
	AND AL,AL
	JZ L_268
	MOV EAX,_OpImm
	CMP EAX,3
	SETE AL
	AND AL,AL
L_268:
	JZ L_269
	MOV EAX,1
	JMP L_185
L_269:
	JMP L_181
L_270:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,87
	SETE AL
	AND AL,AL
	JZ L_271
	MOV EAX,_OpImm
	CMP EAX,1
	SETE AL
	AND AL,AL
L_271:
	JZ L_272
	MOV EAX,1
	JMP L_185
L_272:
	JMP L_181
L_273:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JZ L_274
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,153
	SETE AL
	AND AL,AL
L_274:
	JZ L_275
	MOV EAX,1
	JMP L_185
L_275:
	JMP L_181
L_276:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,64
	SETE AL
	AND AL,AL
	JZ L_277
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,136
	SETE AL
	AND AL,AL
L_277:
	JZ L_278
	MOV EAX,1
	JMP L_185
L_278:
	JMP L_181
L_279:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,64
	SETE AL
	AND AL,AL
	JZ L_280
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,129
	SETE AL
	AND AL,AL
L_280:
	JZ L_281
	MOV EAX,1
	JMP L_185
L_281:
	JMP L_181
L_282:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JZ L_283
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,130
	SETE AL
	AND AL,AL
L_283:
	JZ L_284
	MOV EAX,1
	JMP L_185
L_284:
	JMP L_181
L_285:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,66
	SETE AL
	AND AL,AL
	JZ L_286
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,154
	SETE AL
	AND AL,AL
L_286:
	JZ L_287
	MOV EAX,1
	JMP L_185
L_287:
	JMP L_181
L_288:
L_289:
L_290:
L_291:
L_292:
L_293:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,70
	SETE AL
	AND AL,AL
	JZ L_294
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP+12]
	SHL EAX,3
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP+8]
	ADD EAX,1
	ADD EAX,EBX
	MOV EBX,ESI
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBX]
	XOR ECX,ECX
	MOV CL,BYTE PTR [ESI]
	CMP EAX,ECX
	SETE AL
	AND AL,AL
L_294:
	JZ L_295
	MOV EAX,1
	JMP L_185
L_295:
	JMP L_181
L_296:
	JMP L_181
L_182:
	CMP EAX,164
	JE L_293
	CMP EAX,163
	JE L_292
	CMP EAX,161
	JE L_291
	CMP EAX,152
	JE L_290
	CMP EAX,167
	JE L_289
	CMP EAX,141
	JE L_288
	CMP EAX,154
	JE L_285
	CMP EAX,130
	JE L_282
	CMP EAX,129
	JE L_279
	CMP EAX,136
	JE L_276
	CMP EAX,153
	JE L_273
	CMP EAX,86
	JE L_270
	CMP EAX,85
	JE L_267
	CMP EAX,84
	JE L_262
	CMP EAX,83
	JE L_259
	CMP EAX,82
	JE L_256
	CMP EAX,81
	JE L_250
	CMP EAX,80
	JE L_245
	CMP EAX,79
	JE L_241
	CMP EAX,78
	JE L_237
	CMP EAX,77
	JE L_233
	CMP EAX,76
	JE L_230
	CMP EAX,75
	JE L_225
	CMP EAX,74
	JE L_220
	CMP EAX,73
	JE L_218
	CMP EAX,72
	JE L_216
	CMP EAX,71
	JE L_214
	CMP EAX,70
	JE L_212
	CMP EAX,69
	JE L_205
	CMP EAX,68
	JE L_202
	CMP EAX,67
	JE L_198
	CMP EAX,66
	JE L_196
	CMP EAX,65
	JE L_194
	CMP EAX,64
	JE L_192
	CMP EAX,63
	JE L_190
	CMP EAX,62
	JE L_188
	CMP EAX,61
	JE L_186
	CMP EAX,0
	JE L_183
	JMP L_296
L_181:
	XOR EAX,EAX
L_185:
	POP EBP
	RETN 8
PUBLIC _is_Reg:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+8]
	JMP L_298
L_299:
L_300:
L_301:
L_302:
L_303:
L_304:
	MOV EAX,1
	JMP L_305
L_306:
	JMP L_297
L_298:
	CMP EAX,73
	JE L_304
	CMP EAX,72
	JE L_303
	CMP EAX,71
	JE L_302
	CMP EAX,66
	JE L_301
	CMP EAX,65
	JE L_300
	CMP EAX,64
	JE L_299
	JMP L_306
L_297:
	XOR EAX,EAX
L_305:
	POP EBP
	RETN 4
PUBLIC _fatal_error:
	PUSH EBP
	MOV EBP,ESP
	INC _error_count
	MOV EAX,_error_count
	XOR EAX,EAX
	MOV AL,_fListA
	XOR ECX,ECX
	MOV CL,_fListE
	OR EAX,ECX
	JZ L_307
	PUSH _lst_fh
	PUSH OFFSET L_lit+0
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	PUSH DWORD PTR [EBP+8]
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
	PUSH _lst_fh
	CALL _fclose
L_307:
	PUSH OFFSET L_lit+31
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	PUSH DWORD PTR [EBP+8]
	MOV EDI, 8
	CALL _printf
	ADD ESP,12
	PUSH OFFSET L_lit+62
	PUSH _error_count
	PUSH _warn_count
	MOV EDI, 8
	CALL _printf
	ADD ESP,12
	PUSH 1
	CALL _exit
	POP EBP
	RETN 4
PUBLIC _line_error:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,4
	MOV EAX,DWORD PTR [EBP+8]
	JMP L_309
L_310:
	MOV EAX,OFFSET L_lit+87
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_311:
	MOV EAX,OFFSET L_lit+120
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_312:
	MOV EAX,OFFSET L_lit+155
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_313:
	MOV EAX,OFFSET L_lit+186
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_314:
	MOV EAX,OFFSET L_lit+220
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_315:
	MOV EAX,OFFSET L_lit+250
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_316:
	MOV EAX,OFFSET L_lit+270
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_317:
	MOV EAX,OFFSET L_lit+293
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_318:
	MOV EAX,OFFSET L_lit+321
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_319:
	MOV EAX,OFFSET L_lit+356
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_320:
	MOV EAX,OFFSET L_lit+397
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_321:
	MOV EAX,OFFSET L_lit+419
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_322:
	MOV EAX,OFFSET L_lit+446
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_323:
	MOV EAX,OFFSET L_lit+480
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_324:
	MOV EAX,OFFSET L_lit+500
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_325:
	MOV EAX,OFFSET L_lit+516
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_326:
	MOV EAX,OFFSET L_lit+545
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_327:
	MOV EAX,OFFSET L_lit+573
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_328:
	MOV EAX,OFFSET L_lit+605
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_329:
	MOV EAX,OFFSET L_lit+635
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_330:
	MOV EAX,OFFSET L_lit+671
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_331:
	MOV EAX,OFFSET L_lit+694
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_332:
	MOV EAX,OFFSET L_lit+727
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_333:
	MOV EAX,OFFSET L_lit+743
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_334:
	MOV EAX,OFFSET L_lit+763
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_335:
L_336:
L_337:
L_338:
L_339:
L_340:
	MOV EAX,OFFSET L_lit+794
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_341:
	MOV EAX,OFFSET L_lit+795
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_342:
	MOV EAX,OFFSET L_lit+826
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_343:
	MOV EAX,OFFSET L_lit+863
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_344:
	MOV EAX,OFFSET L_lit+864
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_345:
	MOV EAX,OFFSET L_lit+900
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_346:
	MOV EAX,OFFSET L_lit+930
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_347:
	MOV EAX,OFFSET L_lit+931
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_348:
	MOV EAX,OFFSET L_lit+977
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_349:
	MOV EAX,OFFSET L_lit+1004
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_350:
	MOV EAX,OFFSET L_lit+1042
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_351:
	MOV EAX,OFFSET L_lit+1083
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_352:
	MOV EAX,OFFSET L_lit+1117
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_353:
	MOV EAX,OFFSET L_lit+1143
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_354:
	MOV EAX,OFFSET L_lit+1178
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_355:
	MOV EAX,OFFSET L_lit+1214
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_356:
	MOV EAX,OFFSET L_lit+1248
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_357:
	MOV EAX,OFFSET L_lit+1273
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_358:
	MOV EAX,OFFSET L_lit+1305
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_359:
	MOV EAX,OFFSET L_lit+1322
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_360:
	MOV EAX,OFFSET L_lit+1356
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_361:
L_362:
	MOV EAX,OFFSET L_lit+1378
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_363:
	MOV EAX,OFFSET L_lit+1379
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_364:
	MOV EAX,OFFSET L_lit+1409
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_365:
	MOV EAX,OFFSET L_lit+1446
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_366:
L_367:
L_368:
L_369:
L_370:
L_371:
	MOV EAX,OFFSET L_lit+1470
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_372:
	MOV EAX,OFFSET L_lit+1471
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_373:
	MOV EAX,OFFSET L_lit+1513
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_374:
	MOV EAX,OFFSET L_lit+1543
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_375:
	MOV EAX,OFFSET L_lit+1572
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_376:
	MOV EAX,OFFSET L_lit+1592
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_377:
	MOV EAX,OFFSET L_lit+1630
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_378:
	MOV EAX,OFFSET L_lit+1679
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_379:
	MOV EAX,OFFSET L_lit+1706
	MOV DWORD PTR [EBP-4], EAX
	JMP L_308
L_380:
	JMP L_308
L_309:
	CMP EAX,70
	JE L_379
	CMP EAX,69
	JE L_378
	CMP EAX,68
	JE L_377
	CMP EAX,67
	JE L_376
	CMP EAX,66
	JE L_375
	CMP EAX,65
	JE L_374
	CMP EAX,64
	JE L_373
	CMP EAX,63
	JE L_372
	CMP EAX,62
	JE L_371
	CMP EAX,61
	JE L_370
	CMP EAX,60
	JE L_369
	CMP EAX,59
	JE L_368
	CMP EAX,58
	JE L_367
	CMP EAX,57
	JE L_366
	CMP EAX,56
	JE L_365
	CMP EAX,55
	JE L_364
	CMP EAX,54
	JE L_363
	CMP EAX,53
	JE L_362
	CMP EAX,52
	JE L_361
	CMP EAX,51
	JE L_360
	CMP EAX,50
	JE L_359
	CMP EAX,49
	JE L_358
	CMP EAX,48
	JE L_357
	CMP EAX,47
	JE L_356
	CMP EAX,46
	JE L_355
	CMP EAX,45
	JE L_354
	CMP EAX,44
	JE L_353
	CMP EAX,43
	JE L_352
	CMP EAX,42
	JE L_351
	CMP EAX,41
	JE L_350
	CMP EAX,40
	JE L_349
	CMP EAX,39
	JE L_348
	CMP EAX,38
	JE L_347
	CMP EAX,37
	JE L_346
	CMP EAX,36
	JE L_345
	CMP EAX,35
	JE L_344
	CMP EAX,34
	JE L_343
	CMP EAX,33
	JE L_342
	CMP EAX,32
	JE L_341
	CMP EAX,31
	JE L_340
	CMP EAX,30
	JE L_339
	CMP EAX,29
	JE L_338
	CMP EAX,28
	JE L_337
	CMP EAX,27
	JE L_336
	CMP EAX,26
	JE L_335
	CMP EAX,25
	JE L_334
	CMP EAX,24
	JE L_333
	CMP EAX,23
	JE L_332
	CMP EAX,22
	JE L_331
	CMP EAX,21
	JE L_330
	CMP EAX,20
	JE L_329
	CMP EAX,19
	JE L_328
	CMP EAX,18
	JE L_327
	CMP EAX,17
	JE L_326
	CMP EAX,16
	JE L_325
	CMP EAX,15
	JE L_324
	CMP EAX,14
	JE L_323
	CMP EAX,13
	JE L_322
	CMP EAX,12
	JE L_321
	CMP EAX,11
	JE L_320
	CMP EAX,10
	JE L_319
	CMP EAX,9
	JE L_318
	CMP EAX,8
	JE L_317
	CMP EAX,7
	JE L_316
	CMP EAX,6
	JE L_315
	CMP EAX,5
	JE L_314
	CMP EAX,4
	JE L_313
	CMP EAX,3
	JE L_312
	CMP EAX,2
	JE L_311
	CMP EAX,1
	JE L_310
	JMP L_380
L_308:
	PUSH _lst_fh
	PUSH OFFSET L_lit+1707
	PUSH DWORD PTR [EBP+8]
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	PUSH DWORD PTR [EBP-4]
	MOV EDI, 12
	CALL _fprintf
	ADD ESP,20
	MOV ESI,_line_ptr
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	XOR EAX,EAX
	MOV _Column, AL
	INC _error_count
	MOV EAX,_error_count
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _prev_error:
	PUSH EBP
	MOV EBP,ESP
	PUSH _lst_fh
	PUSH OFFSET L_lit+1736
	PUSH DWORD PTR [EBP+8]
	PUSH DWORD PTR [EBP+12]
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
	XOR EAX,EAX
	MOV _Column, AL
	INC _error_count
	MOV EAX,_error_count
	POP EBP
	RETN 8
PUBLIC _get_number:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,47
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4], EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-14], EAX
	MOV EAX,10
	MOV DWORD PTR [EBP-8], EAX
L_381:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-9], AL
	PUSH EAX
	CALL _isxdigit
	AND EAX,EAX
	JZ L_382
	MOV EAX,DWORD PTR [EBP-14]
	INC DWORD PTR [EBP-14]
	LEA ESI,BYTE PTR [EBP-47]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [EBP-9]
	MOV BYTE PTR [ESI], AL
	MOV ESI,_line_ptr
	INC _line_ptr
	MOV EAX,DWORD PTR [ESI]
	JMP L_381
L_382:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,104
	SETE AL
	AND AL,AL
	JNZ L_383
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,72
	SETE AL
	AND AL,AL
L_383:
	JZ L_384
	MOV ESI,_line_ptr
	INC _line_ptr
	MOV EAX,16
	MOV DWORD PTR [EBP-8], EAX
	JMP L_385
L_384:
	MOV EAX,DWORD PTR [EBP-14]
	SUB EAX,1
	LEA ESI,BYTE PTR [EBP-47]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,98
	SETE AL
	AND AL,AL
	JNZ L_386
	MOV EAX,DWORD PTR [EBP-14]
	SUB EAX,1
	LEA ESI,BYTE PTR [EBP-47]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,66
	SETE AL
	AND AL,AL
L_386:
	JZ L_387
	MOV EAX,2
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,DWORD PTR [EBP-14]
	DEC DWORD PTR [EBP-14]
L_387:
L_385:
	MOV EAX,DWORD PTR [EBP-8]
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_388
	MOV EAX,DWORD PTR [EBP-14]
	CMP EAX,33
	SETG AL
	AND AL,AL
L_388:
	JNZ L_389
	MOV EAX,DWORD PTR [EBP-8]
	CMP EAX,10
	SETE AL
	AND AL,AL
	JZ L_390
	MOV EAX,DWORD PTR [EBP-14]
	CMP EAX,10
	SETG AL
	AND AL,AL
L_390:
	JNZ L_391
	MOV EAX,DWORD PTR [EBP-8]
	CMP EAX,16
	SETE AL
	AND AL,AL
	JZ L_392
	MOV EAX,DWORD PTR [EBP-14]
	CMP EAX,9
	SETG AL
	AND AL,AL
L_392:
L_391:
L_389:
	JZ L_393
	PUSH 4
	CALL _line_error
	XOR EAX,EAX
	JMP L_394
L_393:
	XOR EAX,EAX
	MOV BYTE PTR [EBP-10], AL
L_395:
	MOVSX EAX,BYTE PTR [EBP-10]
	LEA ESI,BYTE PTR [EBP-47]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBP-9], AL
	MOVSX EAX,BYTE PTR [EBP-9]
	PUSH EAX
	CALL _isdigit
	AND EAX,EAX
	JZ L_398
	MOVSX EAX,BYTE PTR [EBP-9]
	MOV ECX,48
	SUB EAX,ECX
	MOV BYTE PTR [EBP-9], AL
	JMP L_399
L_398:
	MOVSX EAX,BYTE PTR [EBP-9]
	CMP EAX,97
	SETGE AL
	AND AL,AL
	JZ L_400
	MOVSX EAX,BYTE PTR [EBP-9]
	MOV ECX,87
	SUB EAX,ECX
	MOV BYTE PTR [EBP-9], AL
	JMP L_401
L_400:
	MOVSX EAX,BYTE PTR [EBP-9]
	CMP EAX,65
	SETGE AL
	AND AL,AL
	JZ L_402
	MOVSX EAX,BYTE PTR [EBP-9]
	MOV ECX,55
	SUB EAX,ECX
	MOV BYTE PTR [EBP-9], AL
	JMP L_403
L_402:
	JMP L_397
L_403:
L_401:
L_399:
	MOVSX EAX,BYTE PTR [EBP-9]
	CMP EAX,DWORD PTR [EBP-8]
	SETAE AL
	AND AL,AL
	JZ L_404
	PUSH 5
	CALL _line_error
	XOR EAX,EAX
	JMP L_394
L_404:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,DWORD PTR [EBP-8]
	MUL ECX
	MOVSX ECX,BYTE PTR [EBP-9]
	ADD EAX,ECX
	MOV DWORD PTR [EBP-4], EAX
	MOVSX EAX,BYTE PTR [EBP-10]
	INC BYTE PTR [EBP-10]
L_396:
	MOVSX EAX,BYTE PTR [EBP-10]
	CMP EAX,DWORD PTR [EBP-14]
	SETL AL
	AND AL,AL
	JNZ L_395
L_397:
	MOV EAX,DWORD PTR [EBP-4]
L_394:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _findrsvd:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,24
	MOV EAX,DWORD PTR [EBP+8]
	CMP EAX,8
	SETG AL
	AND AL,AL
	JZ L_405
	XOR EAX,EAX
	JMP L_406
L_405:
	LEA EAX,DWORD PTR [EBP-24]
	PUSH EAX
	PUSH DWORD PTR [EBP+12]
	PUSH DWORD PTR [EBP+8]
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP+8]
	LEA ESI,BYTE PTR [EBP-24]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,29
	MOV DWORD PTR [EBP-12], EAX
L_407:
	MOV EAX,DWORD PTR [EBP-8]
	CMP EAX,DWORD PTR [EBP-12]
	SETLE AL
	AND AL,AL
	JZ L_408
	MOV EAX,DWORD PTR [EBP-12]
	SUB EAX,DWORD PTR [EBP-8]
	MOV ECX,2
	CDQ
	IDIV ECX
	ADD EAX,DWORD PTR [EBP-8]
	MOV DWORD PTR [EBP-16], EAX
	LEA EAX,DWORD PTR [EBP-24]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-16]
	SHL EAX,3
	MOV ESI,OFFSET _rgReserved
	ADD ESI,EAX
	PUSH ESI
	PUSH 7
	CALL _strncmp
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,DWORD PTR [EBP-4]
	AND EAX,EAX
	JNZ L_409
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,94
	JMP L_406
L_409:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,0
	SETG AL
	AND AL,AL
	JZ L_411
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,1
	MOV DWORD PTR [EBP-8], EAX
	JMP L_412
L_411:
	MOV EAX,DWORD PTR [EBP-16]
	SUB EAX,1
	MOV DWORD PTR [EBP-12], EAX
L_412:
L_410:
	JMP L_407
L_408:
	XOR EAX,EAX
L_406:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _findinst:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,22
	MOV EAX,DWORD PTR [EBP+8]
	CMP EAX,7
	SETG AL
	AND AL,AL
	JZ L_413
	XOR EAX,EAX
	JMP L_414
L_413:
	LEA EAX,DWORD PTR [EBP-22]
	PUSH EAX
	PUSH DWORD PTR [EBP+12]
	PUSH DWORD PTR [EBP+8]
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP+8]
	LEA ESI,BYTE PTR [EBP-22]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,207
	MOV DWORD PTR [EBP-12], EAX
L_415:
	MOV EAX,DWORD PTR [EBP-8]
	CMP EAX,DWORD PTR [EBP-12]
	SETLE AL
	AND AL,AL
	JZ L_416
	MOV EAX,DWORD PTR [EBP-12]
	SUB EAX,DWORD PTR [EBP-8]
	MOV ECX,2
	CDQ
	IDIV ECX
	ADD EAX,DWORD PTR [EBP-8]
	MOV DWORD PTR [EBP-16], EAX
	LEA EAX,DWORD PTR [EBP-22]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-16]
	MOV ECX,7
	IMUL ECX
	MOV ESI,OFFSET _rginst
	ADD ESI,EAX
	PUSH ESI
	PUSH 6
	CALL _strncmp
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,DWORD PTR [EBP-4]
	AND EAX,EAX
	JNZ L_417
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,1
	JMP L_414
L_417:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,0
	SETG AL
	AND AL,AL
	JZ L_419
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,1
	MOV DWORD PTR [EBP-8], EAX
	JMP L_420
L_419:
	MOV EAX,DWORD PTR [EBP-16]
	SUB EAX,1
	MOV DWORD PTR [EBP-12], EAX
L_420:
L_418:
	JMP L_415
L_416:
	XOR EAX,EAX
L_414:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _findreg:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,19
	MOV EAX,DWORD PTR [EBP+8]
	CMP EAX,3
	SETG AL
	AND AL,AL
	JNZ L_421
	MOV EAX,DWORD PTR [EBP+8]
	CMP EAX,2
	SETL AL
	AND AL,AL
L_421:
	JZ L_422
	XOR EAX,EAX
	JMP L_423
L_422:
	LEA EAX,DWORD PTR [EBP-19]
	PUSH EAX
	PUSH DWORD PTR [EBP+12]
	PUSH DWORD PTR [EBP+8]
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP+8]
	LEA ESI,BYTE PTR [EBP-19]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,51
	MOV DWORD PTR [EBP-12], EAX
L_424:
	MOV EAX,DWORD PTR [EBP-8]
	CMP EAX,DWORD PTR [EBP-12]
	SETLE AL
	AND AL,AL
	JZ L_425
	MOV EAX,DWORD PTR [EBP-12]
	SUB EAX,DWORD PTR [EBP-8]
	MOV ECX,2
	CDQ
	IDIV ECX
	ADD EAX,DWORD PTR [EBP-8]
	MOV DWORD PTR [EBP-16], EAX
	LEA EAX,DWORD PTR [EBP-19]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-16]
	SHL EAX,2
	MOV ESI,OFFSET _rgreg
	ADD ESI,EAX
	PUSH ESI
	PUSH 3
	CALL _strncmp
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,DWORD PTR [EBP-4]
	AND EAX,EAX
	JNZ L_426
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,128
	JMP L_423
L_426:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,0
	SETG AL
	AND AL,AL
	JZ L_428
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,1
	MOV DWORD PTR [EBP-8], EAX
	JMP L_429
L_428:
	MOV EAX,DWORD PTR [EBP-16]
	SUB EAX,1
	MOV DWORD PTR [EBP-12], EAX
L_429:
L_427:
	JMP L_424
L_425:
	XOR EAX,EAX
L_423:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _findLsymbol:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,136
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	PUSH DWORD PTR [EBP+12]
	PUSH DWORD PTR [EBP+8]
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP+8]
	LEA ESI,BYTE PTR [EBP-136]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	MOV EAX,_iLSymNext
	MOV DWORD PTR [EBP-4], EAX
L_430:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,1
	SETG AL
	AND AL,AL
	JZ L_431
	MOV EAX,DWORD PTR [EBP-4]
	DEC DWORD PTR [EBP-4]
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+8]
	CMP EAX,DWORD PTR [EBP+8]
	SETE AL
	AND AL,AL
	JZ L_432
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+12]
	PUSH DWORD PTR [EBP+8]
	CALL _strncmp
	CMP EAX,0
	SETE AL
	AND AL,AL
	JZ L_433
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_434
L_433:
L_432:
	JMP L_430
L_431:
	XOR EAX,EAX
L_434:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _findGsymbol:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,136
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	PUSH DWORD PTR [EBP+12]
	PUSH DWORD PTR [EBP+8]
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP+8]
	LEA ESI,BYTE PTR [EBP-136]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	MOV EAX,_iSymNext
	MOV DWORD PTR [EBP-4], EAX
L_435:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,1
	SETG AL
	AND AL,AL
	JZ L_436
	MOV EAX,DWORD PTR [EBP-4]
	DEC DWORD PTR [EBP-4]
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+8]
	CMP EAX,DWORD PTR [EBP+8]
	SETE AL
	AND AL,AL
	JZ L_437
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+12]
	PUSH DWORD PTR [EBP+8]
	CALL _strncmp
	CMP EAX,0
	SETE AL
	AND AL,AL
	JZ L_438
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_439
L_438:
L_437:
	JMP L_435
L_436:
	XOR EAX,EAX
L_439:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _DumpGSymbols:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,136
	PUSH _lst_fh
	PUSH OFFSET L_lit+1760
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	MOV EAX,1
	MOV DWORD PTR [EBP-4], EAX
L_440:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,_iSymNext
	SETL AL
	AND AL,AL
	JZ L_441
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+12]
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+8]
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+8]
	LEA ESI,BYTE PTR [EBP-136]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	PUSH _lst_fh
	PUSH OFFSET L_lit+1779
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+16]
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,1
	JZ L_442
	PUSH _lst_fh
	PUSH OFFSET L_lit+1808
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_442:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,2
	JZ L_443
	PUSH _lst_fh
	PUSH OFFSET L_lit+1815
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_443:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,8
	JZ L_444
	PUSH _lst_fh
	PUSH OFFSET L_lit+1822
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_444:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,16
	JZ L_445
	PUSH _lst_fh
	PUSH OFFSET L_lit+1829
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_445:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,32
	JZ L_446
	PUSH _lst_fh
	PUSH OFFSET L_lit+1836
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_446:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,64
	JZ L_447
	PUSH _lst_fh
	PUSH OFFSET L_lit+1844
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_447:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,128
	JZ L_448
	PUSH _lst_fh
	PUSH OFFSET L_lit+1852
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_448:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,256
	JZ L_449
	PUSH _lst_fh
	PUSH OFFSET L_lit+1860
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_449:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,512
	JZ L_450
	PUSH _lst_fh
	PUSH OFFSET L_lit+1868
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_450:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,4
	JZ L_451
	PUSH _lst_fh
	PUSH OFFSET L_lit+1876
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_451:
	PUSH _lst_fh
	PUSH OFFSET L_lit+1884
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_440
L_441:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _DumpLSymbols:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,136
	PUSH _lst_fh
	PUSH OFFSET L_lit+1887
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	MOV EAX,1
	MOV DWORD PTR [EBP-4], EAX
L_452:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,_iLSymNext
	SETL AL
	AND AL,AL
	JZ L_453
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+12]
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+8]
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+8]
	LEA ESI,BYTE PTR [EBP-136]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	PUSH _lst_fh
	PUSH OFFSET L_lit+1905
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+16]
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,1
	JZ L_454
	PUSH _lst_fh
	PUSH OFFSET L_lit+1933
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_454:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,2
	JZ L_455
	PUSH _lst_fh
	PUSH OFFSET L_lit+1940
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_455:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,8
	JZ L_456
	PUSH _lst_fh
	PUSH OFFSET L_lit+1947
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_456:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,16
	JZ L_457
	PUSH _lst_fh
	PUSH OFFSET L_lit+1954
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_457:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,32
	JZ L_458
	PUSH _lst_fh
	PUSH OFFSET L_lit+1961
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_458:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,64
	JZ L_459
	PUSH _lst_fh
	PUSH OFFSET L_lit+1969
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_459:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,128
	JZ L_460
	PUSH _lst_fh
	PUSH OFFSET L_lit+1977
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_460:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,256
	JZ L_461
	PUSH _lst_fh
	PUSH OFFSET L_lit+1985
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_461:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,512
	JZ L_462
	PUSH _lst_fh
	PUSH OFFSET L_lit+1993
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_462:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,4
	JZ L_463
	PUSH _lst_fh
	PUSH OFFSET L_lit+2001
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_463:
	PUSH _lst_fh
	PUSH OFFSET L_lit+2007
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_452
L_453:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _DumpFRT:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,136
	PUSH _lst_fh
	PUSH OFFSET L_lit+2010
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4], EAX
L_464:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,_iRefNext
	SETL AL
	AND AL,AL
	JZ L_465
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+6]
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI+1]
	PUSH EAX
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI+1]
	LEA ESI,BYTE PTR [EBP-136]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	PUSH _lst_fh
	PUSH OFFSET L_lit+2031
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+10]
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+2]
	MOV EDI, 12
	CALL _fprintf
	ADD ESP,20
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_464
L_465:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _ReturnToken:
	PUSH EBP
	MOV EBP,ESP
	PUSH OFFSET _LTString
	PUSH OFFSET _TString
	PUSH 132
	CALL _strncpy
	MOV EAX,_CBString
	MOV _LCBString, EAX
	MOV EAX,_TSymnum
	MOV _LTSymnum, EAX
	MOV EAX,_TNumber
	MOV _LTNumber, EAX
	MOV EAX,_TInst
	MOV _LTInst, EAX
	MOV EAX,_TReg
	MOV _LTReg, EAX
	MOV EAX,_Token
	MOV _LToken, EAX
	MOV EAX,1
	MOV _fPutBack, AL
	POP EBP
	RETN
PUBLIC _Parse:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,4
	MOVSX EAX,_fPutBack
	AND EAX,EAX
	JZ L_466
	PUSH OFFSET _TString
	PUSH OFFSET _LTString
	PUSH 132
	CALL _strncpy
	MOV EAX,_LCBString
	MOV _CBString, EAX
	MOV EAX,_LTSymnum
	MOV _TSymnum, EAX
	MOV EAX,_LTNumber
	MOV _TNumber, EAX
	MOV EAX,_LTInst
	MOV _TInst, EAX
	MOV EAX,_LTReg
	MOV _TReg, EAX
	MOV EAX,_LToken
	MOV _Token, EAX
	XOR EAX,EAX
	MOV _fPutBack, AL
	MOV EAX,_Token
	JMP L_467
L_466:
L_468:
	XOR EAX,EAX
	MOV _TSymnum, EAX
	XOR EAX,EAX
	MOV _TInst, EAX
	XOR EAX,EAX
	MOV _TReg, EAX
	XOR EAX,EAX
	MOV _Token, EAX
	MOV ESI,OFFSET _TString
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	XOR EAX,EAX
	MOV _CBString, EAX
	XOR EAX,EAX
	MOV _TNumber, EAX
L_469:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _isskip
	AND EAX,EAX
	JZ L_470
	MOV ESI,_line_ptr
	INC _line_ptr
	MOV EAX,DWORD PTR [ESI]
	JMP L_469
L_470:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	JNZ L_471
	XOR EAX,EAX
	JMP L_467
L_471:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,59
	SETE AL
	AND AL,AL
	JZ L_472
	MOV ESI,_line_ptr
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	XOR EAX,EAX
	JMP L_467
L_472:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4], EAX
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _is_ident
	AND EAX,EAX
	JZ L_473
L_474:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _isalnum
	AND EAX,EAX
	JNZ L_476
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,95
	SETE AL
	AND AL,AL
L_476:
	JZ L_475
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	MOV ESI,OFFSET _TString
	ADD ESI,EAX
	MOV EBX,ESI
	PUSH EBX
	MOV ESI,_line_ptr
	INC _line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _toupper
	POP EDX
	MOV BYTE PTR [EDX], AL
	JMP L_474
L_475:
	MOV EAX,DWORD PTR [EBP-4]
	MOV _CBString, EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ESI,OFFSET _TString
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	PUSH OFFSET _TString
	PUSH DWORD PTR [EBP-4]
	CALL _findreg
	MOV _TReg, EAX
	AND EAX,EAX
	JZ L_477
	MOV EAX,2
	MOV _Token, EAX
	JMP L_467
L_477:
	PUSH OFFSET _TString
	PUSH DWORD PTR [EBP-4]
	CALL _findinst
	MOV _TInst, EAX
	AND EAX,EAX
	JZ L_478
	MOV EAX,1
	MOV _Token, EAX
	JMP L_467
L_478:
	PUSH OFFSET _TString
	PUSH DWORD PTR [EBP-4]
	CALL _findrsvd
	MOV _Token, EAX
	AND EAX,EAX
	JZ L_479
	MOV EAX,_Token
	JMP L_467
L_479:
	MOV EAX,_level
	AND EAX,EAX
	JZ L_480
	PUSH OFFSET _TString
	PUSH DWORD PTR [EBP-4]
	CALL _findLsymbol
	MOV _TSymnum, EAX
	AND EAX,EAX
	JZ L_481
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,4
	JZ L_482
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+16]
	MOV DWORD PTR [EBP-4], EAX
	PUSH OFFSET _line_buf1
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	MOV ESI,OFFSET _rgMacPtr
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _strcpy
	PUSH OFFSET _line_buf1
	PUSH _line_ptr
	PUSH 132
	CALL _strncat
	MOV EAX,OFFSET _line_buf1
	MOV _line_ptr, EAX
	JMP L_468
L_482:
	MOV EAX,4
	MOV _Token, EAX
	JMP L_467
L_483:
L_481:
L_480:
	PUSH OFFSET _TString
	PUSH DWORD PTR [EBP-4]
	CALL _findGsymbol
	MOV _TSymnum, EAX
	AND EAX,EAX
	JZ L_484
	MOV EAX,3
	MOV _Token, EAX
	JMP L_467
L_484:
	MOV EAX,8
	MOV _Token, EAX
	JMP L_467
L_485:
L_473:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _isdigit
	AND EAX,EAX
	JZ L_486
	CALL _get_number
	MOV _TNumber, EAX
	MOV EAX,6
	MOV _Token, EAX
	JMP L_467
L_486:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	JMP L_488
L_489:
L_490:
L_491:
L_492:
L_493:
L_494:
L_495:
L_496:
L_497:
L_498:
L_499:
L_500:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	MOV _Token, EAX
	MOV ESI,OFFSET _TString
	MOV EBX,ESI
	MOV ESI,_line_ptr
	INC _line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
	MOV EAX,1
	MOV ESI,OFFSET _TString
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	MOV EAX,1
	MOV _CBString, EAX
	MOV EAX,_Token
	JMP L_467
L_501:
	MOV ESI,_line_ptr
	INC _line_ptr
	MOV EAX,DWORD PTR [ESI]
L_502:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	JZ L_504
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,39
	SETNE AL
	AND AL,AL
	JZ L_505
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,132
	SETL AL
	AND AL,AL
L_505:
L_504:
	JZ L_503
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	MOV ESI,OFFSET _TString
	ADD ESI,EAX
	MOV EBX,ESI
	MOV ESI,_line_ptr
	INC _line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
	JMP L_502
L_503:
	MOV EAX,DWORD PTR [EBP-4]
	MOV _CBString, EAX
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,39
	SETNE AL
	AND AL,AL
	JZ L_506
	PUSH 6
	CALL _line_error
	JMP L_507
L_506:
	MOV ESI,_line_ptr
	INC _line_ptr
	MOV EAX,DWORD PTR [ESI]
L_507:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ESI,OFFSET _TString
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-4]
	MOV _CBString, EAX
	MOV EAX,5
	MOV _Token, EAX
	JMP L_467
L_508:
	PUSH 7
	CALL _line_error
	MOV EAX,10
	MOV _Token, EAX
	JMP L_467
L_488:
	CMP EAX,39
	JE L_501
	CMP EAX,93
	JE L_500
	CMP EAX,91
	JE L_499
	CMP EAX,58
	JE L_498
	CMP EAX,47
	JE L_497
	CMP EAX,46
	JE L_496
	CMP EAX,45
	JE L_495
	CMP EAX,44
	JE L_494
	CMP EAX,43
	JE L_493
	CMP EAX,42
	JE L_492
	CMP EAX,41
	JE L_491
	CMP EAX,40
	JE L_490
	CMP EAX,36
	JE L_489
	JMP L_508
L_487:
L_467:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _DoInclude:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,_level
	CMP EAX,4
	SETB AL
	AND AL,AL
	JZ L_509
	INC _level
	MOV EAX,_level
	MOV ECX,40
	MUL ECX
	MOV ESI,OFFSET _srcname
	ADD ESI,EAX
	PUSH ESI
	PUSH DWORD PTR [EBP+8]
	CALL _strcpy
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _src_fh
	ADD ESI,EAX
	MOV EBX,ESI
	PUSH EBX
	MOV EAX,_level
	MOV ECX,40
	MUL ECX
	MOV ESI,OFFSET _srcname
	ADD ESI,EAX
	PUSH ESI
	PUSH OFFSET L_lit+2069
	CALL _fopen
	POP EDX
	MOV DWORD PTR [EDX], EAX
	AND EAX,EAX
	JNZ L_510
	DEC _level
	PUSH OFFSET L_lit+2071
	CALL _fatal_error
	JMP L_511
L_510:
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	XOR EAX,EAX
	MOV DWORD PTR [ESI], EAX
L_511:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_512
	PUSH _lst_fh
	PUSH OFFSET L_lit+2096
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _lst_fh
	PUSH OFFSET L_lit+2103
	MOV EAX,_level
	MOV ECX,40
	MUL ECX
	MOV ESI,OFFSET _srcname
	ADD ESI,EAX
	PUSH ESI
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_512:
	JMP L_513
L_509:
	PUSH OFFSET L_lit+2115
	CALL _fatal_error
L_513:
	POP EBP
	RETN 4
PUBLIC _DoSearch:
	PUSH EBP
	MOV EBP,ESP
	POP EBP
	RETN 4
PUBLIC _Command:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,62
	CALL _Parse
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,DWORD PTR [EBP-8]
	JMP L_515
L_516:
	MOV EAX,1
	MOV _fDataSeg, AL
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_517
	MOV EAX,OFFSET _oNextData
	MOV _pNextAddr, EAX
	PUSH _lst_fh
	PUSH OFFSET L_lit+2146
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _lst_fh
	PUSH OFFSET L_lit+2153
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_517:
	JMP L_514
L_518:
	XOR EAX,EAX
	MOV _fDataSeg, AL
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_519
	MOV EAX,OFFSET _oNextCode
	MOV _pNextAddr, EAX
	PUSH _lst_fh
	PUSH OFFSET L_lit+2167
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _lst_fh
	PUSH OFFSET L_lit+2174
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_519:
	JMP L_514
L_520:
	CALL _Parse
	MOV DWORD PTR [EBP-12], EAX
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_521
	PUSH _lst_fh
	PUSH OFFSET L_lit+2188
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_521:
	MOV EAX,DWORD PTR [EBP-12]
	CMP EAX,123
	SETE AL
	AND AL,AL
	JZ L_522
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_523
	PUSH _lst_fh
	PUSH OFFSET L_lit+2195
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_523:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_524
	MOV EAX,_oNextData
	AND EAX,1
	JZ L_525
	XOR EAX,EAX
	PUSH EAX
	CALL _OutByteX
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_526
	PUSH _lst_fh
	PUSH OFFSET L_lit+2216
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_526:
L_525:
	JMP L_527
L_524:
	MOV EAX,_oNextCode
	AND EAX,1
	JZ L_528
	PUSH 144
	CALL _OutByteX
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_529
	PUSH _lst_fh
	PUSH OFFSET L_lit+2220
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_529:
L_528:
L_527:
	JMP L_530
L_522:
	MOV EAX,DWORD PTR [EBP-12]
	CMP EAX,103
	SETE AL
	AND AL,AL
	JZ L_531
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_532
	PUSH _lst_fh
	PUSH OFFSET L_lit+2224
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_532:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_533
L_534:
	MOV EAX,_oNextData
	AND EAX,3
	JZ L_535
	XOR EAX,EAX
	PUSH EAX
	CALL _OutByteX
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_536
	PUSH _lst_fh
	PUSH OFFSET L_lit+2246
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_536:
	JMP L_534
L_535:
	JMP L_537
L_533:
L_538:
	MOV EAX,_oNextCode
	AND EAX,3
	JZ L_539
	PUSH 144
	CALL _OutByteX
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_540
	PUSH _lst_fh
	PUSH OFFSET L_lit+2250
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_540:
	JMP L_538
L_539:
L_537:
	JMP L_541
L_531:
	MOV EAX,DWORD PTR [EBP-12]
	CMP EAX,113
	SETE AL
	AND AL,AL
	JZ L_542
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_543
	PUSH _lst_fh
	PUSH OFFSET L_lit+2254
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_543:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_544
L_545:
	MOV EAX,_oNextData
	AND EAX,15
	JZ L_546
	XOR EAX,EAX
	PUSH EAX
	CALL _OutByteX
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_547
	PUSH _lst_fh
	PUSH OFFSET L_lit+2279
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_547:
	JMP L_545
L_546:
	JMP L_548
L_544:
L_549:
	MOV EAX,_oNextCode
	AND EAX,15
	JZ L_550
	PUSH 144
	CALL _OutByteX
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_551
	PUSH _lst_fh
	PUSH OFFSET L_lit+2283
	PUSH _lst_fh
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_551:
	JMP L_549
L_550:
L_548:
	JMP L_552
L_542:
	PUSH 8
	CALL _line_error
L_552:
L_541:
L_530:
	JMP L_514
L_553:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_554
	PUSH _lst_fh
	PUSH OFFSET L_lit+2287
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _lst_fh
	PUSH OFFSET L_lit+2294
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_554:
	JMP L_514
L_555:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JNZ L_556
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_557
	PUSH _lst_fh
	PUSH OFFSET L_lit+2312
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _lst_fh
	PUSH OFFSET L_lit+2319
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_557:
	MOV EAX,1
	MOV _fStart, AL
	MOV EAX,_oNextCode
	MOV _StartAddr, EAX
	JMP L_558
L_556:
	PUSH 9
	CALL _line_error
L_558:
	JMP L_514
L_559:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_560
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_561
	PUSH _lst_fh
	PUSH OFFSET L_lit+2337
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_561:
	CALL _Parse
	CMP EAX,6
	SETE AL
	AND AL,AL
	JZ L_562
	MOV EAX,_oNextData
	CMP EAX,0
	SETG AL
	AND AL,AL
	JZ L_563
	PUSH 10
	CALL _line_error
	JMP L_564
L_563:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_565
	PUSH _lst_fh
	PUSH OFFSET L_lit+2363
	PUSH _TNumber
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_565:
	MOV EAX,_TNumber
	MOV _oNextData, EAX
	MOV EAX,_TNumber
	MOV _DataOffset, EAX
L_564:
	JMP L_566
L_562:
	PUSH 11
	CALL _line_error
L_566:
	JMP L_567
L_560:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_568
	PUSH _lst_fh
	PUSH OFFSET L_lit+2369
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_568:
	CALL _Parse
	CMP EAX,6
	SETE AL
	AND AL,AL
	JZ L_569
	MOV EAX,_oNextCode
	CMP EAX,0
	SETG AL
	AND AL,AL
	JZ L_570
	PUSH 10
	CALL _line_error
	JMP L_571
L_570:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_572
	PUSH _lst_fh
	PUSH OFFSET L_lit+2395
	PUSH _TNumber
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_572:
	MOV EAX,_TNumber
	MOV _oNextCode, EAX
	MOV EAX,_TNumber
	MOV _CodeOffset, EAX
L_571:
	JMP L_573
L_569:
	PUSH 11
	CALL _line_error
L_573:
L_567:
	JMP L_514
L_574:
	LEA ESI,BYTE PTR [EBP-62]
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
L_575:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _isskip
	AND EAX,EAX
	JZ L_576
	MOV ESI,_line_ptr
	INC _line_ptr
	MOV EAX,DWORD PTR [ESI]
	JMP L_575
L_576:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8], EAX
L_577:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	JZ L_579
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,59
	SETNE AL
	AND AL,AL
	JZ L_580
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _isskip
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_580:
L_579:
	JZ L_578
	MOV EAX,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	LEA ESI,BYTE PTR [EBP-62]
	ADD ESI,EAX
	MOV EBX,ESI
	MOV ESI,_line_ptr
	INC _line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
	JMP L_577
L_578:
	MOV EAX,DWORD PTR [EBP-8]
	LEA ESI,BYTE PTR [EBP-62]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	LEA EAX,DWORD PTR [EBP-62]
	PUSH EAX
	CALL _DoInclude
	JMP L_514
L_581:
	LEA ESI,BYTE PTR [EBP-62]
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
L_582:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _isskip
	AND EAX,EAX
	JZ L_583
	MOV ESI,_line_ptr
	INC _line_ptr
	MOV EAX,DWORD PTR [ESI]
	JMP L_582
L_583:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8], EAX
L_584:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	JZ L_586
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,59
	SETNE AL
	AND AL,AL
	JZ L_587
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _isskip
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_587:
L_586:
	JZ L_585
	MOV EAX,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	LEA ESI,BYTE PTR [EBP-62]
	ADD ESI,EAX
	MOV EBX,ESI
	MOV ESI,_line_ptr
	INC _line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
	JMP L_584
L_585:
	MOV EAX,DWORD PTR [EBP-8]
	LEA ESI,BYTE PTR [EBP-62]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	LEA EAX,DWORD PTR [EBP-62]
	PUSH EAX
	CALL _DoSearch
	JMP L_514
L_588:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JNZ L_589
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_590
	PUSH _lst_fh
	PUSH OFFSET L_lit+2401
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_590:
	CALL _Parse
	CMP EAX,6
	SETE AL
	AND AL,AL
	JZ L_591
	MOV EAX,_StackTotal
	ADD EAX,_TNumber
	MOV _StackTotal, EAX
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_592
	PUSH _lst_fh
	PUSH OFFSET L_lit+2415
	PUSH _StackTotal
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_592:
	JMP L_593
L_591:
	PUSH 35
	CALL _line_error
L_593:
	JMP L_594
L_589:
	PUSH 13
	CALL _line_error
L_594:
	JMP L_514
L_595:
	PUSH 14
	CALL _line_error
	JMP L_596
L_515:
	CMP EAX,118
	JE L_588
	CMP EAX,116
	JE L_581
	CMP EAX,109
	JE L_574
	CMP EAX,122
	JE L_559
	CMP EAX,119
	JE L_555
	CMP EAX,104
	JE L_553
	CMP EAX,94
	JE L_520
	CMP EAX,96
	JE L_518
	CMP EAX,97
	JE L_516
	JMP L_595
L_514:
L_596:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _EncodeRegBits:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,DWORD PTR [EBP+16]
	JMP L_598
L_599:
L_600:
L_601:
L_602:
L_603:
L_604:
	JMP L_597
L_605:
L_606:
L_607:
L_608:
L_609:
L_610:
	MOV ESI,DWORD PTR [EBP+12]
	MOV EAX,1
	MOV ECX,DWORD PTR [EBP+8]
	SHL EAX,CL
	MOVSX ECX,BYTE PTR [ESI]
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_597
L_611:
L_612:
L_613:
L_614:
L_615:
L_616:
	MOV ESI,DWORD PTR [EBP+12]
	MOV EAX,2
	MOV ECX,DWORD PTR [EBP+8]
	SHL EAX,CL
	MOVSX ECX,BYTE PTR [ESI]
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_597
L_617:
L_618:
L_619:
L_620:
L_621:
L_622:
	MOV ESI,DWORD PTR [EBP+12]
	MOV EAX,3
	MOV ECX,DWORD PTR [EBP+8]
	SHL EAX,CL
	MOVSX ECX,BYTE PTR [ESI]
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_597
L_623:
L_624:
L_625:
	MOV ESI,DWORD PTR [EBP+12]
	MOV EAX,4
	MOV ECX,DWORD PTR [EBP+8]
	SHL EAX,CL
	MOVSX ECX,BYTE PTR [ESI]
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_597
L_626:
L_627:
L_628:
L_629:
	MOV ESI,DWORD PTR [EBP+12]
	MOV EAX,5
	MOV ECX,DWORD PTR [EBP+8]
	SHL EAX,CL
	MOVSX ECX,BYTE PTR [ESI]
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_597
L_630:
L_631:
L_632:
L_633:
L_634:
L_635:
	MOV ESI,DWORD PTR [EBP+12]
	MOV EAX,6
	MOV ECX,DWORD PTR [EBP+8]
	SHL EAX,CL
	MOVSX ECX,BYTE PTR [ESI]
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_597
L_636:
L_637:
L_638:
L_639:
L_640:
	MOV ESI,DWORD PTR [EBP+12]
	MOV EAX,7
	MOV ECX,DWORD PTR [EBP+8]
	SHL EAX,CL
	MOVSX ECX,BYTE PTR [ESI]
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_597
L_641:
	JMP L_597
L_598:
	CMP EAX,151
	JE L_640
	CMP EAX,169
	JE L_639
	CMP EAX,158
	JE L_638
	CMP EAX,144
	JE L_637
	CMP EAX,131
	JE L_636
	CMP EAX,150
	JE L_635
	CMP EAX,168
	JE L_634
	CMP EAX,164
	JE L_633
	CMP EAX,160
	JE L_632
	CMP EAX,165
	JE L_631
	CMP EAX,143
	JE L_630
	CMP EAX,163
	JE L_629
	CMP EAX,155
	JE L_628
	CMP EAX,133
	JE L_627
	CMP EAX,135
	JE L_626
	CMP EAX,162
	JE L_625
	CMP EAX,166
	JE L_624
	CMP EAX,128
	JE L_623
	CMP EAX,149
	JE L_622
	CMP EAX,140
	JE L_621
	CMP EAX,152
	JE L_620
	CMP EAX,156
	JE L_619
	CMP EAX,134
	JE L_618
	CMP EAX,132
	JE L_617
	CMP EAX,148
	JE L_616
	CMP EAX,139
	JE L_615
	CMP EAX,167
	JE L_614
	CMP EAX,159
	JE L_613
	CMP EAX,153
	JE L_612
	CMP EAX,145
	JE L_611
	CMP EAX,147
	JE L_610
	CMP EAX,138
	JE L_609
	CMP EAX,141
	JE L_608
	CMP EAX,157
	JE L_607
	CMP EAX,142
	JE L_606
	CMP EAX,136
	JE L_605
	CMP EAX,146
	JE L_604
	CMP EAX,137
	JE L_603
	CMP EAX,161
	JE L_602
	CMP EAX,154
	JE L_601
	CMP EAX,130
	JE L_600
	CMP EAX,129
	JE L_599
	JMP L_641
L_597:
	POP EBP
	RETN 12
PUBLIC _AddMacro:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,108
	LEA ESI,BYTE PTR [EBP-108]
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	MOV EAX,_iMacNext
	CMP EAX,4046
	SETGE AL
	AND AL,AL
	JZ L_642
	PUSH OFFSET L_lit+2421
	CALL _fatal_error
L_642:
	MOV EAX,_iMacNext
	CMP EAX,300
	SETGE AL
	AND AL,AL
	JZ L_643
	PUSH OFFSET L_lit+2446
	CALL _fatal_error
L_643:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4], EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8], EAX
L_644:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _isskip
	AND EAX,EAX
	JZ L_645
	MOV ESI,_line_ptr
	INC _line_ptr
	MOV EAX,DWORD PTR [ESI]
	JMP L_644
L_645:
L_646:
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	JZ L_648
	MOV ESI,_line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,59
	SETNE AL
	AND AL,AL
L_648:
	JZ L_647
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	LEA ESI,BYTE PTR [EBP-108]
	ADD ESI,EAX
	MOV EBX,ESI
	MOV ESI,_line_ptr
	INC _line_ptr
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
	MOV EAX,DWORD PTR [EBP-4]
	SUB EAX,1
	LEA ESI,BYTE PTR [EBP-108]
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,32
	SETG AL
	AND AL,AL
	JZ L_649
	MOV EAX,DWORD PTR [EBP-4]
	MOV DWORD PTR [EBP-8], EAX
L_649:
	JMP L_646
L_647:
	PUSH _pMacNext
	LEA EAX,DWORD PTR [EBP-108]
	PUSH EAX
	PUSH DWORD PTR [EBP-8]
	CALL _strncpy
	MOV EAX,_iLSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	XOR EAX,EAX
	MOV DWORD PTR [ESI], EAX
	MOV EAX,_iLSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,4
	MOV DWORD PTR [ESI], EAX
	MOV EAX,_iMacNext
	SHL EAX,2
	MOV ESI,OFFSET _rgMacPtr
	ADD ESI,EAX
	MOV EAX,_pMacNext
	MOV DWORD PTR [ESI], EAX
	MOV EAX,_iLSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,_iMacNext
	MOV DWORD PTR [ESI+16], EAX
	MOV EAX,_iMacNext
	INC _iMacNext
	MOV EAX,_pMacNext
	ADD EAX,DWORD PTR [EBP-8]
	MOV _pMacNext, EAX
	MOV ESI,_pMacNext
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	MOV ESI,_pMacNext
	INC _pMacNext
	MOV EAX,DWORD PTR [ESI]
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _findref:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,136
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	PUSH DWORD PTR [EBP+12]
	PUSH DWORD PTR [EBP+8]
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP+8]
	LEA ESI,BYTE PTR [EBP-136]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	MOV EAX,_iRefNext
	MOV DWORD PTR [EBP-4], EAX
L_650:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,0
	SETG AL
	AND AL,AL
	JZ L_651
	MOV EAX,DWORD PTR [EBP-4]
	DEC DWORD PTR [EBP-4]
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI+1]
	CMP EAX,DWORD PTR [EBP+8]
	SETE AL
	AND AL,AL
	JZ L_652
	LEA EAX,DWORD PTR [EBP-136]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+6]
	PUSH DWORD PTR [EBP+8]
	CALL _strncmp
	CMP EAX,0
	SETE AL
	AND AL,AL
	JZ L_653
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_654
L_653:
L_652:
	JMP L_650
L_651:
	XOR EAX,EAX
L_654:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _EvalOper1:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_655
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-8], EAX
	JMP L_656
L_655:
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_657
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,128
	JZ L_658
	MOV EAX,_iExpSym
	MOV _nExtRef, EAX
L_658:
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-8], EAX
	JMP L_659
L_657:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8], EAX
L_659:
L_656:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	JMP L_661
L_662:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_r32
	AND EAX,EAX
	JZ L_663
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,66
	MOV DWORD PTR [ESI], EAX
	JMP L_664
L_663:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_r16
	AND EAX,EAX
	JZ L_665
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,65
	MOV DWORD PTR [ESI], EAX
	JMP L_666
L_665:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_r8
	AND EAX,EAX
	JZ L_667
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,64
	MOV DWORD PTR [ESI], EAX
	JMP L_668
L_667:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_rCRG
	AND EAX,EAX
	JZ L_669
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,71
	MOV DWORD PTR [ESI], EAX
	JMP L_670
L_669:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_rDRG
	AND EAX,EAX
	JZ L_671
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,72
	MOV DWORD PTR [ESI], EAX
	JMP L_672
L_671:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_rTRG
	AND EAX,EAX
	JZ L_673
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,73
	MOV DWORD PTR [ESI], EAX
	JMP L_674
L_673:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_rSEG
	AND EAX,EAX
	JZ L_675
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,70
	MOV DWORD PTR [ESI], EAX
L_675:
L_674:
L_672:
L_670:
L_668:
L_666:
L_664:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV EBX,ESI
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBX], EAX
	JMP L_660
L_676:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,-128
	SETGE AL
	AND AL,AL
	JZ L_677
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,127
	SETLE AL
	AND AL,AL
L_677:
	JZ L_678
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,87
	MOV DWORD PTR [ESI], EAX
	JMP L_679
L_678:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,-32768
	SETGE AL
	AND AL,AL
	JZ L_680
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,32767
	SETLE AL
	AND AL,AL
L_680:
	JZ L_681
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,88
	MOV DWORD PTR [ESI], EAX
	JMP L_682
L_681:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,89
	MOV DWORD PTR [ESI], EAX
L_682:
L_679:
	MOVSX EAX,_fOpImm
	AND EAX,EAX
	JNZ L_683
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm, EAX
	MOV EAX,1
	MOV _fOpImm, AL
	JMP L_684
L_683:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm2, EAX
	MOV EAX,1
	MOV _fOpImm2, AL
L_684:
	JMP L_660
L_685:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOV EAX,4
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,89
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm, EAX
	MOV EAX,1
	MOV _fOpImm, AL
	MOV EAX,DWORD PTR [EBP-8]
	AND EAX,1
	JZ L_686
	MOV EAX,193
	MOV _nFixUp, AL
	JMP L_687
L_686:
	MOV EAX,DWORD PTR [EBP-8]
	AND EAX,2
	JZ L_688
	MOV EAX,192
	MOV _nFixUp, AL
L_688:
L_687:
	MOV EAX,DWORD PTR [EBP-8]
	AND EAX,EAX
	JNZ L_689
	MOV EAX,1
	MOV _fForRef, AL
L_689:
	JMP L_660
L_690:
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_691
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-8], EAX
	JMP L_692
L_691:
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_693
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,128
	JZ L_694
	MOV EAX,_iExpSym
	MOV _nExtRef, EAX
L_694:
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-8], EAX
	JMP L_695
L_693:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-8], EAX
L_695:
L_692:
	MOV EAX,_CrntInst
	CMP EAX,49
	SETGE AL
	AND AL,AL
	JZ L_696
	MOV EAX,_CrntInst
	CMP EAX,81
	SETLE AL
	AND AL,AL
L_696:
	JNZ L_697
	MOV EAX,_CrntInst
	CMP EAX,16
	SETE AL
	AND AL,AL
L_697:
	JZ L_698
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,64
	AND EAX,ECX
	JZ L_699
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,61
	MOV DWORD PTR [ESI], EAX
	JMP L_700
L_699:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,62
	MOV DWORD PTR [ESI], EAX
L_700:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm, EAX
	MOV EAX,1
	MOV _fOpImm, AL
	JMP L_701
L_698:
	MOV EAX,_CrntInst
	CMP EAX,99
	SETGE AL
	AND AL,AL
	JZ L_702
	MOV EAX,_CrntInst
	CMP EAX,103
	SETLE AL
	AND AL,AL
L_702:
	JZ L_703
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,61
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm, EAX
	MOV EAX,1
	MOV _fOpImm, AL
	JMP L_704
L_703:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,82
	MOV DWORD PTR [ESI], EAX
	MOVSX EAX,_OpMType
	MOV ECX,64
	OR EAX,ECX
	MOV _OpMType, AL
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpDisp, EAX
	MOV EAX,DWORD PTR [EBP-8]
	AND EAX,1
	JZ L_705
	MOV EAX,193
	MOV _nFixUp, AL
	JMP L_706
L_705:
	MOV EAX,DWORD PTR [EBP-8]
	AND EAX,2
	JZ L_707
	MOV EAX,192
	MOV _nFixUp, AL
L_707:
L_706:
L_704:
L_701:
	MOV EAX,DWORD PTR [EBP-8]
	AND EAX,EAX
	JNZ L_708
	MOV EAX,1
	MOV _fForRef, AL
L_708:
	JMP L_660
L_709:
	PUSH 15
	CALL _line_error
	XOR EAX,EAX
	JMP L_710
L_661:
	CMP EAX,9
	JE L_690
	CMP EAX,7
	JE L_685
	CMP EAX,6
	JE L_676
	CMP EAX,2
	JE L_662
	JMP L_709
L_660:
	MOV EAX,1
L_710:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _EvalOper:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,11
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	XOR EAX,EAX
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	XOR EAX,EAX
	MOV DWORD PTR [ESI], EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4], EAX
	XOR EAX,EAX
	MOV BYTE PTR [EBP-7], AL
	XOR EAX,EAX
	MOV BYTE PTR [EBP-5], AL
	XOR EAX,EAX
	MOV BYTE PTR [EBP-6], AL
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgTCnt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_711
	PUSH DWORD PTR [EBP+8]
	CALL _EvalOper1
	JMP L_712
L_711:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,82
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_714
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_rSEG
L_714:
	AND EAX,EAX
	JZ L_715
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,4
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,58
	SETE AL
	AND AL,AL
	JZ L_716
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	JMP L_718
L_719:
	MOVSX EAX,_OpPrefix
	MOV ECX,1
	OR EAX,ECX
	MOV _OpPrefix, AL
	JMP L_717
L_720:
	MOVSX EAX,_OpPrefix
	MOV ECX,2
	OR EAX,ECX
	MOV _OpPrefix, AL
	JMP L_717
L_721:
	MOVSX EAX,_OpPrefix
	MOV ECX,4
	OR EAX,ECX
	MOV _OpPrefix, AL
	JMP L_717
L_722:
	MOVSX EAX,_OpPrefix
	MOV ECX,8
	OR EAX,ECX
	MOV _OpPrefix, AL
	JMP L_717
L_723:
	MOVSX EAX,_OpPrefix
	MOV ECX,16
	OR EAX,ECX
	MOV _OpPrefix, AL
	JMP L_717
L_724:
	MOVSX EAX,_OpPrefix
	MOV ECX,32
	OR EAX,ECX
	MOV _OpPrefix, AL
	JMP L_717
L_725:
	JMP L_717
L_718:
	CMP EAX,141
	JE L_724
	CMP EAX,164
	JE L_723
	CMP EAX,163
	JE L_722
	CMP EAX,167
	JE L_721
	CMP EAX,161
	JE L_720
	CMP EAX,152
	JE L_719
	JMP L_725
L_717:
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,2
	MOV DWORD PTR [EBP-4], EAX
	JMP L_726
L_716:
	PUSH 16
	CALL _line_error
	XOR EAX,EAX
	JMP L_712
L_726:
L_715:
L_727:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgTCnt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,DWORD PTR [ESI]
	SETL AL
	AND AL,AL
	JZ L_729
	MOVSX EAX,BYTE PTR [EBP-7]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_730
	MOVSX EAX,BYTE PTR [EBP-5]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_730:
L_729:
	JZ L_728
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	JMP L_732
L_733:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_r32
	AND EAX,EAX
	JZ L_734
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,1
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,42
	SETE AL
	AND AL,AL
	JZ L_735
	MOVSX EAX,_OpMType
	MOV ECX,2
	AND EAX,ECX
	JNZ L_736
	MOVSX EAX,_OpMType
	MOV ECX,2
	OR EAX,ECX
	MOV _OpMType, AL
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpIndx, EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,2
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,6
	SETE AL
	AND AL,AL
	JZ L_737
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,2
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	JMP L_739
L_740:
	MOVSX EAX,_OpMType
	MOV ECX,4
	OR EAX,ECX
	MOV _OpMType, AL
	JMP L_738
L_741:
	MOVSX EAX,_OpMType
	MOV ECX,8
	OR EAX,ECX
	MOV _OpMType, AL
	JMP L_738
L_742:
	MOVSX EAX,_OpMType
	MOV ECX,16
	OR EAX,ECX
	MOV _OpMType, AL
	JMP L_738
L_743:
	PUSH 17
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
	JMP L_738
L_739:
	CMP EAX,8
	JE L_742
	CMP EAX,4
	JE L_741
	CMP EAX,2
	JE L_740
	JMP L_743
L_738:
	JMP L_744
L_737:
	PUSH 18
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
L_744:
	JMP L_745
L_736:
	PUSH 19
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
L_745:
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,3
	MOV DWORD PTR [EBP-4], EAX
	JMP L_746
L_735:
	MOVSX EAX,_OpMType
	MOV ECX,1
	AND EAX,ECX
	JNZ L_747
	MOVSX EAX,_OpMType
	MOV ECX,1
	OR EAX,ECX
	MOV _OpMType, AL
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpBase, EAX
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_748
L_747:
	MOVSX EAX,_OpMType
	MOV ECX,2
	AND EAX,ECX
	JNZ L_749
	MOVSX EAX,_OpMType
	MOV ECX,2
	OR EAX,ECX
	MOV _OpMType, AL
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpIndx, EAX
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
L_749:
L_748:
L_746:
	JMP L_750
L_734:
	PUSH 20
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
L_750:
	JMP L_731
L_751:
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_752
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-11], EAX
	JMP L_753
L_752:
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_754
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,128
	JZ L_755
	MOV EAX,_iExpSym
	MOV _nExtRef, EAX
L_755:
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-11], EAX
	JMP L_756
L_754:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-11], EAX
L_756:
L_753:
	MOVSX EAX,_OpMType
	MOV ECX,96
	AND EAX,ECX
	JZ L_757
	PUSH 21
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
	JMP L_758
L_757:
	MOV EAX,_CrntInst
	CMP EAX,49
	SETGE AL
	AND AL,AL
	JZ L_759
	MOV EAX,_CrntInst
	CMP EAX,81
	SETLE AL
	AND AL,AL
	JZ L_760
	MOV EAX,_CrntInst
	CMP EAX,61
	SETNE AL
	AND AL,AL
	JZ L_761
	MOVSX EAX,BYTE PTR [EBP-6]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_761:
L_760:
L_759:
	JZ L_762
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,64
	AND EAX,ECX
	JZ L_763
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,61
	MOV DWORD PTR [ESI], EAX
	JMP L_764
L_763:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,62
	MOV DWORD PTR [ESI], EAX
L_764:
	MOVSX EAX,_fOpImm
	AND EAX,EAX
	JZ L_765
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm2, EAX
	MOV EAX,1
	MOV _fOpImm2, AL
	JMP L_766
L_765:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm, EAX
	MOV EAX,1
	MOV _fOpImm, AL
L_766:
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,EAX
	JNZ L_767
	MOV EAX,1
	MOV _fForRef, AL
L_767:
	JMP L_768
L_762:
	MOV EAX,_CrntInst
	CMP EAX,61
	SETE AL
	AND AL,AL
	JZ L_769
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,32
	AND EAX,ECX
	JNZ L_770
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,256
L_770:
	JZ L_771
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,63
	MOV DWORD PTR [ESI], EAX
	MOVSX EAX,_fOpImm
	AND EAX,EAX
	JZ L_772
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm2, EAX
	MOV EAX,1
	MOV _fOpImm2, AL
	JMP L_773
L_772:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm, EAX
	MOV EAX,1
	MOV _fOpImm, AL
L_773:
	JMP L_774
L_771:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,64
	AND EAX,ECX
	JZ L_775
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,61
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm, EAX
	MOV EAX,1
	MOV _fOpImm, AL
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,EAX
	JNZ L_776
	MOV EAX,1
	MOV _fForRef, AL
L_776:
	JMP L_777
L_775:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	AND EAX,ECX
	JZ L_778
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,83
	MOV DWORD PTR [ESI], EAX
	MOVSX EAX,_OpMType
	MOV ECX,64
	OR EAX,ECX
	MOV _OpMType, AL
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpDisp, EAX
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,1
	JZ L_779
	MOV EAX,193
	MOV _nFixUp, AL
	JMP L_780
L_779:
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,2
	JZ L_781
	MOV EAX,192
	MOV _nFixUp, AL
L_781:
L_780:
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,EAX
	JNZ L_782
	MOV EAX,1
	MOV _fForRef, AL
L_782:
	JMP L_783
L_778:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,62
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm, EAX
	MOV EAX,1
	MOV _fOpImm, AL
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,EAX
	JNZ L_784
	MOV EAX,1
	MOV _fForRef, AL
L_784:
L_783:
L_777:
L_774:
	JMP L_785
L_769:
	MOV EAX,_CrntInst
	CMP EAX,16
	SETE AL
	AND AL,AL
	JZ L_786
	MOVSX EAX,BYTE PTR [EBP-6]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_786:
	JZ L_787
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,32
	AND EAX,ECX
	JNZ L_788
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,256
L_788:
	JZ L_789
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,63
	MOV DWORD PTR [ESI], EAX
	MOVSX EAX,_fOpImm
	AND EAX,EAX
	JZ L_790
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm2, EAX
	MOV EAX,1
	MOV _fOpImm2, AL
	JMP L_791
L_790:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm, EAX
	MOV EAX,1
	MOV _fOpImm, AL
L_791:
	JMP L_792
L_789:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	AND EAX,ECX
	JZ L_793
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,83
	MOV DWORD PTR [ESI], EAX
	MOVSX EAX,_OpMType
	MOV ECX,64
	OR EAX,ECX
	MOV _OpMType, AL
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpDisp, EAX
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,1
	JZ L_794
	MOV EAX,193
	MOV _nFixUp, AL
	JMP L_795
L_794:
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,2
	JZ L_796
	MOV EAX,192
	MOV _nFixUp, AL
L_796:
L_795:
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,EAX
	JNZ L_797
	MOV EAX,1
	MOV _fForRef, AL
L_797:
	JMP L_798
L_793:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,62
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,EAX
	JNZ L_799
	MOV EAX,1
	MOV _fForRef, AL
L_799:
L_798:
L_792:
	JMP L_800
L_787:
	MOV EAX,_CrntInst
	CMP EAX,184
	SETE AL
	AND AL,AL
	JNZ L_801
	MOV EAX,_CrntInst
	CMP EAX,189
	SETE AL
	AND AL,AL
L_801:
	JZ L_802
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	AND EAX,ECX
	JZ L_803
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,83
	MOV DWORD PTR [ESI], EAX
	MOVSX EAX,_OpMType
	MOV ECX,64
	OR EAX,ECX
	MOV _OpMType, AL
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpDisp, EAX
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,1
	JZ L_804
	MOV EAX,193
	MOV _nFixUp, AL
	JMP L_805
L_804:
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,2
	JZ L_806
	MOV EAX,192
	MOV _nFixUp, AL
L_806:
L_805:
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,EAX
	JNZ L_807
	MOV EAX,1
	MOV _fForRef, AL
L_807:
L_803:
	JMP L_808
L_802:
	MOV EAX,_CrntInst
	CMP EAX,99
	SETGE AL
	AND AL,AL
	JZ L_809
	MOV EAX,_CrntInst
	CMP EAX,103
	SETLE AL
	AND AL,AL
L_809:
	JZ L_810
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,61
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	ADD EAX,0
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpImm, EAX
	MOV EAX,1
	MOV _fOpImm, AL
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,EAX
	JNZ L_811
	MOV EAX,1
	MOV _fForRef, AL
L_811:
	JMP L_812
L_810:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpDisp, EAX
	MOVSX EAX,_OpMType
	MOV ECX,64
	OR EAX,ECX
	MOV _OpMType, AL
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,1
	JZ L_813
	MOV EAX,193
	MOV _nFixUp, AL
	JMP L_814
L_813:
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,2
	JZ L_815
	MOV EAX,192
	MOV _nFixUp, AL
L_815:
L_814:
	MOV EAX,DWORD PTR [EBP-11]
	AND EAX,EAX
	JNZ L_816
	MOV EAX,1
	MOV _fForRef, AL
L_816:
L_812:
L_808:
L_800:
L_785:
L_768:
L_758:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_731
L_817:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV _OpDisp, EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,-128
	SETGE AL
	AND AL,AL
	JZ L_818
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,127
	SETLE AL
	AND AL,AL
L_818:
	JZ L_819
	MOVSX EAX,_OpMType
	MOV ECX,32
	OR EAX,ECX
	MOV _OpMType, AL
	JMP L_820
L_819:
	MOVSX EAX,_OpMType
	MOV ECX,64
	OR EAX,ECX
	MOV _OpMType, AL
L_820:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_731
L_821:
	MOVSX EAX,BYTE PTR [EBP-6]
	AND EAX,EAX
	JZ L_822
	PUSH 23
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
	JMP L_823
L_822:
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
L_823:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_731
L_824:
	MOVSX EAX,BYTE PTR [EBP-6]
	AND EAX,EAX
	JNZ L_825
	PUSH 24
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
	JMP L_826
L_825:
	XOR EAX,EAX
	MOV BYTE PTR [EBP-6], AL
L_826:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_731
L_827:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_731
L_828:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_731
L_829:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_830
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,1
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,114
	SETE AL
	AND AL,AL
L_830:
	JZ L_831
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,1
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,2
	MOV DWORD PTR [EBP-4], EAX
	JMP L_832
L_831:
	PUSH 25
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
L_832:
	JMP L_731
L_833:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_834
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,1
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,114
	SETE AL
	AND AL,AL
L_834:
	JZ L_835
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,2
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,2
	MOV DWORD PTR [EBP-4], EAX
	JMP L_836
L_835:
	PUSH 25
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
L_836:
	JMP L_731
L_837:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_838
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,1
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,114
	SETE AL
	AND AL,AL
L_838:
	JZ L_839
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,4
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,2
	MOV DWORD PTR [EBP-4], EAX
	JMP L_840
L_839:
	PUSH 25
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
L_840:
	JMP L_731
L_841:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_842
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,1
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,114
	SETE AL
	AND AL,AL
L_842:
	JZ L_843
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,2
	MOV DWORD PTR [EBP-4], EAX
	JMP L_844
L_843:
	PUSH 25
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
L_844:
	JMP L_731
L_845:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_846
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,1
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,114
	SETE AL
	AND AL,AL
L_846:
	JZ L_847
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,16
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,2
	MOV DWORD PTR [EBP-4], EAX
	JMP L_848
L_847:
	PUSH 25
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
L_848:
	JMP L_731
L_849:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_850
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,1
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,114
	SETE AL
	AND AL,AL
L_850:
	JZ L_851
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,32
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-4]
	ADD EAX,2
	MOV DWORD PTR [EBP-4], EAX
	JMP L_852
L_851:
	PUSH 25
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
L_852:
	JMP L_731
L_853:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	JNZ L_854
	MOV EAX,DWORD PTR [EBP+8]
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,64
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_855
L_854:
	PUSH 25
	CALL _line_error
	MOV EAX,1
	MOV BYTE PTR [EBP-7], AL
L_855:
	JMP L_731
L_856:
	PUSH 32
	CALL _line_error
	PUSH _lst_fh
	PUSH OFFSET L_lit+2470
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_731
L_732:
	CMP EAX,117
	JE L_853
	CMP EAX,107
	JE L_849
	CMP EAX,111
	JE L_845
	CMP EAX,108
	JE L_841
	CMP EAX,103
	JE L_837
	CMP EAX,123
	JE L_833
	CMP EAX,95
	JE L_829
	CMP EAX,43
	JE L_828
	CMP EAX,58
	JE L_827
	CMP EAX,93
	JE L_824
	CMP EAX,91
	JE L_821
	CMP EAX,6
	JE L_817
	CMP EAX,9
	JE L_751
	CMP EAX,2
	JE L_733
	JMP L_856
L_731:
	JMP L_727
L_728:
L_713:
	MOVSX EAX,BYTE PTR [EBP-7]
	AND EAX,EAX
	JZ L_857
	XOR EAX,EAX
	JMP L_712
L_857:
	MOVSX EAX,BYTE PTR [EBP-5]
	AND EAX,EAX
	JZ L_858
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgTCnt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,DWORD PTR [ESI]
	SETL AL
	AND AL,AL
L_858:
	JZ L_859
	PUSH 33
	CALL _line_error
	XOR EAX,EAX
	JMP L_712
L_859:
	MOV EAX,1
L_712:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _ForRef:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,4
	MOV EAX,_pRefBuf
	ADD EAX,16384
	CMP EAX,_pRefNext
	SETBE AL
	AND AL,AL
	JZ L_860
	PUSH OFFSET L_lit+2477
	CALL _fatal_error
L_860:
	MOV EAX,_iRefNext
	CMP EAX,2340
	SETGE AL
	AND AL,AL
	JZ L_861
	PUSH OFFSET L_lit+2514
	CALL _fatal_error
L_861:
	PUSH _pRefNext
	PUSH OFFSET _UString
	PUSH _UCBString
	CALL _strncpy
	MOV EAX,_iRefNext
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,_UCBString
	MOV BYTE PTR [ESI+1], AL
	MOV EAX,_iRefNext
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,_pRefNext
	MOV DWORD PTR [ESI+6], EAX
	MOV EAX,_iRefNext
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,_level
	SHL EAX,2
	MOV EBX,ESI
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBX+2], EAX
	MOV EAX,_iRefNext
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+12]
	MOV BYTE PTR [ESI], AL
	MOV EAX,_iRefNext
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV DWORD PTR [ESI+10], EAX
	MOV EAX,_pRefNext
	ADD EAX,_UCBString
	MOV _pRefNext, EAX
	MOV EAX,_iRefNext
	INC _iRefNext
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _FixUp:
	PUSH EBP
	MOV EBP,ESP
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+16]
	CMP EAX,192
	SETE AL
	AND AL,AL
	JZ L_862
	MOV EAX,_nCDFix
	INC _nCDFix
	JMP L_863
L_862:
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+16]
	CMP EAX,194
	SETE AL
	AND AL,AL
	JZ L_864
	MOV EAX,_nDDFix
	INC _nDDFix
	JMP L_865
L_864:
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+16]
	CMP EAX,195
	SETE AL
	AND AL,AL
	JZ L_866
	MOV EAX,_nDCFix
	INC _nDCFix
	JMP L_867
L_866:
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+16]
	CMP EAX,193
	SETE AL
	AND AL,AL
	JZ L_868
	MOV EAX,_nCCFix
	INC _nCCFix
L_868:
L_867:
L_865:
L_863:
	MOV EAX,_iFUNext
	CMP EAX,4681
	SETGE AL
	AND AL,AL
	JZ L_869
	PUSH OFFSET L_lit+2550
	CALL _fatal_error
L_869:
	MOV EAX,_iFUNext
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+16]
	MOV BYTE PTR [ESI], AL
	MOV EAX,_iFUNext
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP+12]
	MOV DWORD PTR [ESI+1], EAX
	MOV EAX,_iFUNext
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV DWORD PTR [ESI+5], EAX
	MOV EAX,_iFUNext
	INC _iFUNext
	POP EBP
	RETN 12
PUBLIC _ExtRef:
	PUSH EBP
	MOV EBP,ESP
	MOV EAX,_iERefNext
	CMP EAX,400
	SETGE AL
	AND AL,AL
	JZ L_870
	PUSH OFFSET L_lit+2574
	CALL _fatal_error
L_870:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_871
	MOV EAX,_iERefNext
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,_oNextData
	MOV DWORD PTR [ESI+5], EAX
	JMP L_872
L_871:
	MOV EAX,_iERefNext
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,_oNextCode
	MOV DWORD PTR [ESI+5], EAX
L_872:
	MOV EAX,_iERefNext
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV DWORD PTR [ESI+1], EAX
	MOV EAX,_iERefNext
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP+12]
	MOV BYTE PTR [ESI], AL
	MOV EAX,_iERefNext
	INC _iERefNext
	POP EBP
	RETN 8
PUBLIC _GetOper:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4], EAX
L_873:
	MOV EAX,1
	AND EAX,EAX
	JZ L_874
	CALL _Parse
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,DWORD PTR [EBP-8]
	JMP L_876
L_877:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgTCnt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP-4]
	AND EAX,EAX
	JZ L_878
	MOV EAX,1
	JMP L_879
L_878:
	XOR EAX,EAX
	JMP L_879
L_880:
L_881:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgTID
	ADD ESI,EAX
	MOV EAX,_TReg
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV DWORD PTR [ESI], EAX
	JMP L_875
L_882:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,1
	SETG AL
	AND AL,AL
	JZ L_883
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SUB EAX,1
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,42
	SETE AL
	AND AL,AL
	JZ L_884
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SUB EAX,2
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,2
	SETE AL
	AND AL,AL
L_884:
L_883:
	JZ L_885
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,_TNumber
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV DWORD PTR [ESI], EAX
	JMP L_875
L_885:
L_886:
L_887:
L_888:
L_889:
L_890:
L_891:
L_892:
	CALL _Expression
	AND EAX,EAX
	JZ L_893
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgVal
	ADD ESI,EAX
	MOV EAX,_TNumber
	MOV DWORD PTR [ESI], EAX
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,_Token
	MOV DWORD PTR [ESI], EAX
	JMP L_894
L_893:
	PUSH 35
	CALL _line_error
	XOR EAX,EAX
	JMP L_879
L_894:
	JMP L_875
L_895:
	MOV EAX,DWORD PTR [EBP-4]
	AND EAX,EAX
	JNZ L_896
	PUSH 36
	CALL _line_error
	XOR EAX,EAX
	JMP L_879
L_896:
	MOV EAX,DWORD PTR [EBP+8]
	SHL EAX,2
	MOV ESI,OFFSET _rgTCnt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV DWORD PTR [ESI], EAX
	CALL _ReturnToken
	MOV EAX,1
	JMP L_879
L_897:
L_898:
L_899:
L_900:
L_901:
L_902:
L_903:
L_904:
L_905:
L_906:
L_907:
L_908:
L_909:
L_910:
	MOV EAX,DWORD PTR [EBP+8]
	MOV ECX,80
	IMUL ECX
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,EBX
	MOV ESI,OFFSET _rgToken
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV DWORD PTR [ESI], EAX
	JMP L_875
L_911:
	PUSH 38
	CALL _line_error
	XOR EAX,EAX
	JMP L_879
L_876:
	CMP EAX,117
	JE L_910
	CMP EAX,114
	JE L_909
	CMP EAX,108
	JE L_908
	CMP EAX,103
	JE L_907
	CMP EAX,123
	JE L_906
	CMP EAX,95
	JE L_905
	CMP EAX,107
	JE L_904
	CMP EAX,58
	JE L_903
	CMP EAX,59
	JE L_902
	CMP EAX,47
	JE L_901
	CMP EAX,43
	JE L_900
	CMP EAX,42
	JE L_899
	CMP EAX,93
	JE L_898
	CMP EAX,91
	JE L_897
	CMP EAX,44
	JE L_895
	CMP EAX,112
	JE L_892
	CMP EAX,8
	JE L_891
	CMP EAX,45
	JE L_890
	CMP EAX,40
	JE L_889
	CMP EAX,36
	JE L_888
	CMP EAX,3
	JE L_887
	CMP EAX,4
	JE L_886
	CMP EAX,6
	JE L_882
	CMP EAX,2
	JE L_881
	CMP EAX,0
	JE L_877
	JMP L_911
L_875:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_873
L_874:
L_879:
	MOV ESP,EBP
	POP EBP
	RETN 4
PUBLIC _INSEntry:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,4
	MOV EAX,DWORD PTR [EBP+12]
	SHL EAX,2
	MOV ESI,OFFSET _rgInsLookUp
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-4], EAX
L_912:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,338
	SETLE AL
	AND AL,AL
	JZ L_913
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,3
	ADD EAX,0
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,DWORD PTR [EBP+12]
	SETNE AL
	AND AL,AL
	JZ L_914
	XOR EAX,EAX
	JMP L_915
L_914:
	PUSH DWORD PTR [EBP-4]
	XOR EAX,EAX
	PUSH EAX
	CALL _is_Comp
	AND EAX,EAX
	JZ L_916
	PUSH DWORD PTR [EBP-4]
	PUSH 1
	CALL _is_Comp
	AND EAX,EAX
	JZ L_917
	PUSH DWORD PTR [EBP-4]
	PUSH 2
	CALL _is_Comp
L_917:
L_916:
	AND EAX,EAX
	JZ L_918
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_915
L_918:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_912
L_913:
L_915:
	MOV ESP,EBP
	POP EBP
	RETN 8
PUBLIC _EmitInst:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,10
	MOV EAX,_InstPfx
	AND EAX,EAX
	JZ L_919
	MOV EAX,_InstPfx
	CMP EAX,94
	SETE AL
	AND AL,AL
	JZ L_920
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_921
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	PUSH 15
	PUSH _lst_fh
	CALL _put_hexb
L_921:
	PUSH 240
	CALL _OutByteX
	JMP L_922
L_920:
	MOV EAX,_InstPfx
	CMP EAX,138
	SETE AL
	AND AL,AL
	JNZ L_923
	MOV EAX,_InstPfx
	CMP EAX,139
	SETE AL
	AND AL,AL
L_923:
	JZ L_924
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_925
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	PUSH 242
	PUSH _lst_fh
	CALL _put_hexb
L_925:
	PUSH 242
	CALL _OutByteX
	JMP L_926
L_924:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_927
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	PUSH 243
	PUSH _lst_fh
	CALL _put_hexb
L_927:
	PUSH 243
	CALL _OutByteX
L_926:
L_922:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_928
	PUSH _lst_fh
	PUSH OFFSET L_lit+2611
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_928:
L_919:
	MOVSX EAX,_OpSizeA
	MOV ECX,2
	AND EAX,ECX
	JZ L_929
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_930
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	PUSH 102
	PUSH _lst_fh
	CALL _put_hexb
	PUSH _lst_fh
	PUSH OFFSET L_lit+2614
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_930:
	PUSH 102
	CALL _OutByteX
L_929:
	MOVSX EAX,_OpPrefix
	JMP L_932
L_933:
	MOV EAX,62
	MOV BYTE PTR [EBP-1], AL
	JMP L_931
L_934:
	MOV EAX,38
	MOV BYTE PTR [EBP-1], AL
	JMP L_931
L_935:
	MOV EAX,54
	MOV BYTE PTR [EBP-1], AL
	JMP L_931
L_936:
	MOV EAX,100
	MOV BYTE PTR [EBP-1], AL
	JMP L_931
L_937:
	MOV EAX,101
	MOV BYTE PTR [EBP-1], AL
	JMP L_931
L_938:
	MOV EAX,46
	MOV BYTE PTR [EBP-1], AL
	JMP L_931
L_939:
	XOR EAX,EAX
	MOV BYTE PTR [EBP-1], AL
	JMP L_931
L_932:
	CMP EAX,32
	JE L_938
	CMP EAX,16
	JE L_937
	CMP EAX,8
	JE L_936
	CMP EAX,4
	JE L_935
	CMP EAX,2
	JE L_934
	CMP EAX,1
	JE L_933
	JMP L_939
L_931:
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-1]
	AND EAX,EAX
	JZ L_940
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_941
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-1]
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	PUSH _lst_fh
	PUSH OFFSET L_lit+2617
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_941:
	XOR EAX,EAX
	MOV AL,BYTE PTR [EBP-1]
	PUSH EAX
	CALL _OutByteX
L_940:
	XOR EAX,EAX
	MOV AL,_bOpc1
	AND EAX,EAX
	JZ L_942
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_943
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	XOR EAX,EAX
	MOV AL,_bOpc1
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	PUSH _lst_fh
	PUSH OFFSET L_lit+2620
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_943:
	XOR EAX,EAX
	MOV AL,_bOpc1
	PUSH EAX
	CALL _OutByteX
L_942:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_944
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	XOR EAX,EAX
	MOV AL,_bOpc2
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	PUSH _lst_fh
	PUSH OFFSET L_lit+2622
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_944:
	XOR EAX,EAX
	MOV AL,_bOpc2
	PUSH EAX
	CALL _OutByteX
	MOVSX EAX,_fModRM
	AND EAX,EAX
	JZ L_945
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_946
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	XOR EAX,EAX
	MOV AL,_bModRM
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	PUSH _lst_fh
	PUSH OFFSET L_lit+2624
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_946:
	XOR EAX,EAX
	MOV AL,_bModRM
	PUSH EAX
	CALL _OutByteX
L_945:
	MOVSX EAX,_fSIB
	AND EAX,EAX
	JZ L_947
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_948
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	XOR EAX,EAX
	MOV AL,_bSIB
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	PUSH _lst_fh
	PUSH OFFSET L_lit+2626
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_948:
	XOR EAX,EAX
	MOV AL,_bSIB
	PUSH EAX
	CALL _OutByteX
L_947:
	MOVSX EAX,_OpMType
	MOV ECX,64
	AND EAX,ECX
	JZ L_949
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_950
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,8
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _OpDisp
	PUSH _lst_fh
	CALL _put_hexd
	MOV EAX,_nExtRef
	AND EAX,EAX
	JNZ L_951
	MOVSX EAX,_fForRef
L_951:
	AND EAX,EAX
	JZ L_952
	PUSH _lst_fh
	PUSH OFFSET L_lit+2628
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	JMP L_953
L_952:
	PUSH _lst_fh
	PUSH OFFSET L_lit+2631
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_953:
L_950:
	MOV EAX,_nExtRef
	AND EAX,EAX
	JZ L_954
	PUSH 2
	PUSH _nExtRef
	CALL _ExtRef
	JMP L_955
L_954:
	MOVSX EAX,_fForRef
	AND EAX,EAX
	JZ L_956
	PUSH 2
	PUSH _oNextCode
	CALL _ForRef
	JMP L_957
L_956:
	XOR EAX,EAX
	MOV AL,_nFixUp
	AND EAX,EAX
	JZ L_958
	XOR EAX,EAX
	MOV AL,_nFixUp
	PUSH EAX
	PUSH _oNextCode
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_958:
L_957:
L_955:
	PUSH _OpDisp
	CALL _OutDWordX
L_949:
	MOVSX EAX,_OpMType
	MOV ECX,32
	AND EAX,ECX
	JZ L_959
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_960
	MOV EAX,_OpDisp
	MOV BYTE PTR [EBP-2], AL
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	MOVSX EAX,BYTE PTR [EBP-2]
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	PUSH _lst_fh
	PUSH OFFSET L_lit+2634
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_960:
	PUSH _OpDisp
	CALL _OutByteX
L_959:
	MOVSX EAX,_fOpImm
	AND EAX,EAX
	JZ L_961
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,1
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,77
	SETE AL
	AND AL,AL
	JNZ L_962
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,2
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,77
	SETE AL
	AND AL,AL
	JNZ L_963
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,3
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,77
	SETE AL
	AND AL,AL
L_963:
L_962:
	JZ L_964
	MOVSX EAX,_OpSizeA
	MOV ECX,1
	AND EAX,ECX
	JZ L_965
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_966
	MOV EAX,_OpImm
	MOV BYTE PTR [EBP-2], AL
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	MOVSX EAX,BYTE PTR [EBP-2]
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	PUSH _lst_fh
	PUSH OFFSET L_lit+2637
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_966:
	PUSH _OpImm
	CALL _OutByteX
	JMP L_967
L_965:
	MOVSX EAX,_OpSizeA
	MOV ECX,2
	AND EAX,ECX
	JZ L_968
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_969
	MOV EAX,_OpImm
	MOV DWORD PTR [EBP-6], EAX
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,4
	ADD EAX,ECX
	MOV _Column, AL
	PUSH DWORD PTR [EBP-6]
	PUSH _lst_fh
	CALL _put_hexw
	PUSH _lst_fh
	PUSH OFFSET L_lit+2640
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_969:
	PUSH _OpImm
	CALL _OutWordX
	JMP L_970
L_968:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_971
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,8
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _OpImm
	PUSH _lst_fh
	CALL _put_hexd
	XOR EAX,EAX
	MOV AL,_nFixUp
	AND EAX,EAX
	JZ L_972
	PUSH _lst_fh
	PUSH OFFSET L_lit+2643
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	JMP L_973
L_972:
	PUSH _lst_fh
	PUSH OFFSET L_lit+2646
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_973:
L_971:
	MOV EAX,_nExtRef
	AND EAX,EAX
	JZ L_974
	PUSH 2
	PUSH _nExtRef
	CALL _ExtRef
	JMP L_975
L_974:
	MOVSX EAX,_fForRef
	AND EAX,EAX
	JZ L_976
	PUSH 2
	PUSH _oNextCode
	CALL _ForRef
	JMP L_977
L_976:
	XOR EAX,EAX
	MOV AL,_nFixUp
	AND EAX,EAX
	JZ L_978
	XOR EAX,EAX
	MOV AL,_nFixUp
	PUSH EAX
	PUSH _oNextCode
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_978:
L_977:
L_975:
	PUSH _OpImm
	CALL _OutDWordX
L_970:
L_967:
L_964:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,1
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,76
	SETE AL
	AND AL,AL
	JNZ L_979
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,2
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,76
	SETE AL
	AND AL,AL
	JNZ L_980
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,3
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,76
	SETE AL
	AND AL,AL
L_980:
L_979:
	JZ L_981
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_982
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,4
	ADD EAX,ECX
	MOV _Column, AL
	MOV EAX,_OpImm
	MOV DWORD PTR [EBP-6], EAX
	PUSH DWORD PTR [EBP-6]
	PUSH _lst_fh
	CALL _put_hexw
	PUSH _lst_fh
	PUSH OFFSET L_lit+2649
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_982:
	PUSH _OpImm
	CALL _OutWordX
	JMP L_983
L_981:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,1
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,74
	SETE AL
	AND AL,AL
	JNZ L_984
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,2
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,74
	SETE AL
	AND AL,AL
	JNZ L_985
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,3
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,74
	SETE AL
	AND AL,AL
	JNZ L_986
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,1
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,75
	SETE AL
	AND AL,AL
	JNZ L_987
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,2
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,75
	SETE AL
	AND AL,AL
	JNZ L_988
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,3
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,75
	SETE AL
	AND AL,AL
L_988:
L_987:
L_986:
L_985:
L_984:
	JZ L_989
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_990
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	MOV EAX,_OpImm
	MOV BYTE PTR [EBP-2], AL
	MOVSX EAX,BYTE PTR [EBP-2]
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	PUSH _lst_fh
	PUSH OFFSET L_lit+2652
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_990:
	PUSH _OpImm
	CALL _OutByteX
L_989:
L_983:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,0
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,35
	SETE AL
	AND AL,AL
	JZ L_991
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_992
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	MOV EAX,_OpImm2
	MOV BYTE PTR [EBP-2], AL
	MOVSX EAX,BYTE PTR [EBP-2]
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	PUSH _lst_fh
	PUSH OFFSET L_lit+2655
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_992:
	PUSH _OpImm2
	CALL _OutByteX
L_991:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,1
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,62
	SETE AL
	AND AL,AL
	JZ L_993
	MOV EAX,_nExtRef
	AND EAX,EAX
	JZ L_994
	XOR EAX,EAX
	MOV _OpImm, EAX
	PUSH 3
	PUSH _nExtRef
	CALL _ExtRef
	JMP L_995
L_994:
	MOVSX EAX,_fForRef
	AND EAX,EAX
	JZ L_996
	XOR EAX,EAX
	MOV _OpImm, EAX
	PUSH 3
	PUSH _oNextCode
	CALL _ForRef
	JMP L_997
L_996:
	MOV EAX,_oNextCode
	ADD EAX,4
	MOV ECX,EAX
	MOV EAX,_OpImm
	SUB EAX,ECX
	MOV _OpImm, EAX
L_997:
L_995:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_998
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,8
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _OpImm
	PUSH _lst_fh
	CALL _put_hexd
	MOVSX EAX,_fForRef
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_999
	MOV EAX,_nExtRef
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_999:
	JZ L_1000
	PUSH _lst_fh
	PUSH OFFSET L_lit+2658
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	JMP L_1001
L_1000:
	PUSH _lst_fh
	PUSH OFFSET L_lit+2661
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1001:
L_998:
	PUSH _OpImm
	CALL _OutDWordX
L_993:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,1
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,61
	SETE AL
	AND AL,AL
	JZ L_1002
	MOVSX EAX,_fForRef
	AND EAX,EAX
	JNZ L_1003
	MOV EAX,_oNextCode
	ADD EAX,1
	MOV ECX,EAX
	MOV EAX,_OpImm
	SUB EAX,ECX
	MOV _OpImm, EAX
	MOV EAX,_OpImm
	CMP EAX,127
	SETG AL
	AND AL,AL
	JNZ L_1004
	MOV EAX,_OpImm
	CMP EAX,-127
	SETL AL
	AND AL,AL
L_1004:
	JZ L_1005
	PUSH 39
	CALL _line_error
L_1005:
	JMP L_1006
L_1003:
	PUSH 4
	PUSH _oNextCode
	CALL _ForRef
	XOR EAX,EAX
	MOV _OpImm, EAX
L_1006:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1007
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	MOV EAX,_OpImm
	MOV BYTE PTR [EBP-2], AL
	MOVSX EAX,BYTE PTR [EBP-2]
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	MOVSX EAX,_fForRef
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_1008
	MOV EAX,_nExtRef
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_1008:
	JZ L_1009
	PUSH _lst_fh
	PUSH OFFSET L_lit+2664
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	JMP L_1010
L_1009:
	PUSH _lst_fh
	PUSH OFFSET L_lit+2667
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1010:
L_1007:
	PUSH _OpImm
	CALL _OutByteX
L_1002:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,1
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,63
	SETE AL
	AND AL,AL
	JZ L_1011
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1012
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,4
	ADD EAX,ECX
	MOV _Column, AL
	MOV EAX,_OpImm
	MOV DWORD PTR [EBP-6], EAX
	PUSH DWORD PTR [EBP-6]
	PUSH _lst_fh
	CALL _put_hexw
	PUSH _lst_fh
	PUSH OFFSET L_lit+2670
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,4
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _OpImm2
	PUSH _lst_fh
	CALL _put_hexd
	PUSH _lst_fh
	PUSH OFFSET L_lit+2672
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1012:
	PUSH _OpImm
	CALL _OutWordX
	PUSH _OpImm2
	CALL _OutDWordX
L_1011:
L_961:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _EncodeInst:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,6
	XOR EAX,EAX
	MOV _fModRM, AL
	XOR EAX,EAX
	MOV _fSIB, AL
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,4
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV ECX,8
	AND EAX,ECX
	JZ L_1013
	MOVSX EAX,_OpSizeA
	MOV ECX,2
	OR EAX,ECX
	MOV _OpSizeA, AL
L_1013:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,4
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV ECX,1
	AND EAX,ECX
	JZ L_1014
	MOV EAX,15
	MOV _bOpc1, AL
	JMP L_1015
L_1014:
	XOR EAX,EAX
	MOV _bOpc1, AL
L_1015:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,5
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV _bOpc2, AL
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,7
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV ECX,2
	AND EAX,ECX
	JZ L_1016
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,6
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV _bModRM, AL
	MOV EAX,1
	MOV _fModRM, AL
	MOV ESI,OFFSET _rgOpType
	PUSH DWORD PTR [ESI]
	CALL _is_Reg
	AND EAX,EAX
	JZ L_1017
	MOV ESI,OFFSET _rgOpReg
	PUSH DWORD PTR [ESI]
	PUSH OFFSET _bModRM
	PUSH 3
	CALL _EncodeRegBits
L_1017:
	MOV EAX,4
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_Reg
	AND EAX,EAX
	JZ L_1018
	MOV EAX,4
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	PUSH OFFSET _bModRM
	XOR EAX,EAX
	PUSH EAX
	CALL _EncodeRegBits
	XOR EAX,EAX
	MOV AL,_bModRM
	MOV ECX,192
	OR EAX,ECX
	MOV _bModRM, AL
L_1018:
	JMP L_1019
L_1016:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,7
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV ECX,4
	AND EAX,ECX
	JZ L_1020
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,6
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV _bModRM, AL
	MOV EAX,1
	MOV _fModRM, AL
	MOV EAX,4
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _is_Reg
	AND EAX,EAX
	JZ L_1021
	MOV EAX,4
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	PUSH OFFSET _bModRM
	PUSH 3
	CALL _EncodeRegBits
L_1021:
	MOV ESI,OFFSET _rgOpType
	PUSH DWORD PTR [ESI]
	CALL _is_Reg
	AND EAX,EAX
	JZ L_1022
	MOV ESI,OFFSET _rgOpReg
	PUSH DWORD PTR [ESI]
	PUSH OFFSET _bModRM
	XOR EAX,EAX
	PUSH EAX
	CALL _EncodeRegBits
	XOR EAX,EAX
	MOV AL,_bModRM
	MOV ECX,192
	OR EAX,ECX
	MOV _bModRM, AL
L_1022:
	JMP L_1023
L_1020:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,7
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV ECX,1
	AND EAX,ECX
	JZ L_1024
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,6
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV _bModRM, AL
	MOV EAX,1
	MOV _fModRM, AL
	MOV ESI,OFFSET _rgOpType
	PUSH DWORD PTR [ESI]
	CALL _is_Reg
	AND EAX,EAX
	JZ L_1025
	MOV ESI,OFFSET _rgOpReg
	PUSH DWORD PTR [ESI]
	PUSH OFFSET _bModRM
	XOR EAX,EAX
	PUSH EAX
	CALL _EncodeRegBits
	XOR EAX,EAX
	MOV AL,_bModRM
	MOV ECX,192
	OR EAX,ECX
	MOV _bModRM, AL
L_1025:
	JMP L_1026
L_1024:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,7
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV ECX,16
	AND EAX,ECX
	JZ L_1027
	XOR EAX,EAX
	MOV BYTE PTR [EBP-6], AL
	MOV ESI,OFFSET _rgOpReg
	PUSH DWORD PTR [ESI]
	LEA EAX,BYTE PTR [EBP-6]
	PUSH EAX
	XOR EAX,EAX
	PUSH EAX
	CALL _EncodeRegBits
	XOR EAX,EAX
	MOV AL,_bOpc2
	XOR ECX,ECX
	MOV CL,BYTE PTR [EBP-6]
	ADD EAX,ECX
	MOV _bOpc2, AL
	JMP L_1028
L_1027:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,7
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV ECX,32
	AND EAX,ECX
	JZ L_1029
	XOR EAX,EAX
	MOV BYTE PTR [EBP-6], AL
	MOV EAX,4
	MOV ESI,OFFSET _rgOpReg
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	LEA EAX,BYTE PTR [EBP-6]
	PUSH EAX
	XOR EAX,EAX
	PUSH EAX
	CALL _EncodeRegBits
	XOR EAX,EAX
	MOV AL,_bOpc2
	XOR ECX,ECX
	MOV CL,BYTE PTR [EBP-6]
	ADD EAX,ECX
	MOV _bOpc2, AL
	JMP L_1030
L_1029:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,7
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV ECX,64
	AND EAX,ECX
	JZ L_1031
	MOV ESI,OFFSET _rgOpType
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETNE AL
	AND AL,AL
L_1031:
	JZ L_1032
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,6
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV _bModRM, AL
	MOV EAX,1
	MOV _fModRM, AL
	MOV ESI,OFFSET _rgOpReg
	PUSH DWORD PTR [ESI]
	PUSH OFFSET _bModRM
	PUSH 3
	CALL _EncodeRegBits
	XOR EAX,EAX
	MOV AL,_bModRM
	MOV ECX,192
	OR EAX,ECX
	MOV _bModRM, AL
L_1032:
L_1030:
L_1028:
L_1026:
L_1023:
L_1019:
	MOV ESI,OFFSET _rgOpType
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETE AL
	AND AL,AL
	JNZ L_1033
	MOV EAX,4
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETE AL
	AND AL,AL
	JNZ L_1034
	MOV ESI,OFFSET _rgOpType
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,83
	SETE AL
	AND AL,AL
L_1034:
L_1033:
	JZ L_1035
	MOVSX EAX,_OpSizeA
	MOV ECX,15
	AND EAX,ECX
	JNZ L_1036
	PUSH 40
	CALL _line_error
	JMP L_1037
L_1036:
L_1035:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,7
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV ECX,8
	AND EAX,ECX
	JZ L_1038
	MOVSX EAX,_OpSizeA
	MOV ECX,6
	AND EAX,ECX
	JZ L_1039
	XOR EAX,EAX
	MOV AL,_bOpc2
	MOV ECX,1
	OR EAX,ECX
	MOV _bOpc2, AL
L_1039:
L_1038:
	XOR EAX,EAX
	MOV _fSIB, AL
	MOV EAX,_iMemEntry
	AND EAX,EAX
	JZ L_1040
	MOV EAX,_iMemEntry
	SHL EAX,2
	ADD EAX,2
	MOV ESI,OFFSET _rgM32
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,_bModRM
	XOR ECX,ECX
	MOV CL,BYTE PTR [ESI]
	OR EAX,ECX
	MOV _bModRM, AL
	MOV EAX,_iMemEntry
	SHL EAX,2
	ADD EAX,1
	MOV ESI,OFFSET _rgM32
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	AND EAX,EAX
	JZ L_1041
	XOR EAX,EAX
	MOV AL,_bModRM
	MOV ECX,56
	AND EAX,ECX
	MOV _bModRM, AL
	MOV EAX,_iMemEntry
	SHL EAX,2
	ADD EAX,2
	MOV ESI,OFFSET _rgM32
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,_bModRM
	XOR ECX,ECX
	MOV CL,BYTE PTR [ESI]
	OR EAX,ECX
	MOV _bModRM, AL
	MOV EAX,_iMemEntry
	SHL EAX,2
	ADD EAX,3
	MOV ESI,OFFSET _rgM32
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV _bSIB, AL
	MOV EAX,1
	MOV _fSIB, AL
L_1041:
	MOVSX EAX,_fSIB
	AND EAX,EAX
	JNZ L_1042
	MOVSX EAX,_OpMType
	MOV ECX,1
	AND EAX,ECX
	JZ L_1043
	PUSH _OpBase
	PUSH OFFSET _bModRM
	XOR EAX,EAX
	PUSH EAX
	CALL _EncodeRegBits
	JMP L_1044
L_1043:
	XOR EAX,EAX
	MOV AL,_bModRM
	MOV ECX,5
	OR EAX,ECX
	MOV _bModRM, AL
L_1044:
	JMP L_1045
L_1042:
	MOVSX EAX,_OpMType
	MOV ECX,1
	AND EAX,ECX
	JZ L_1046
	PUSH _OpBase
	PUSH OFFSET _bSIB
	XOR EAX,EAX
	PUSH EAX
	CALL _EncodeRegBits
	JMP L_1047
L_1046:
	XOR EAX,EAX
	MOV AL,_bModRM
	MOV ECX,32
	OR EAX,ECX
	MOV _bModRM, AL
L_1047:
	MOVSX EAX,_OpMType
	MOV ECX,2
	AND EAX,ECX
	JZ L_1048
	PUSH _OpIndx
	PUSH OFFSET _bSIB
	PUSH 3
	CALL _EncodeRegBits
L_1048:
L_1045:
L_1040:
	CALL _EmitInst
L_1037:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _Instruction:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,6
	XOR EAX,EAX
	MOV BYTE PTR [EBP-5], AL
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1049
	PUSH 41
	CALL _line_error
	JMP L_1050
L_1049:
	MOV EAX,_TInst
	CMP EAX,136
	SETE AL
	AND AL,AL
	JNZ L_1051
	MOV EAX,_TInst
	CMP EAX,137
	SETE AL
	AND AL,AL
	JNZ L_1052
	MOV EAX,_TInst
	CMP EAX,140
	SETE AL
	AND AL,AL
	JNZ L_1053
	MOV EAX,_TInst
	CMP EAX,138
	SETE AL
	AND AL,AL
	JNZ L_1054
	MOV EAX,_TInst
	CMP EAX,139
	SETE AL
	AND AL,AL
	JNZ L_1055
	MOV EAX,_TInst
	CMP EAX,94
	SETE AL
	AND AL,AL
L_1055:
L_1054:
L_1053:
L_1052:
L_1051:
	JZ L_1056
	MOV EAX,_TInst
	MOV _InstPfx, EAX
	CALL _Parse
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,1
	SETNE AL
	AND AL,AL
	JZ L_1057
	PUSH 42
	CALL _line_error
	JMP L_1050
L_1057:
	JMP L_1058
L_1056:
	XOR EAX,EAX
	MOV _InstPfx, EAX
L_1058:
	MOV EAX,_TInst
	MOV _CrntInst, EAX
	XOR EAX,EAX
	MOV _nOperands, EAX
	MOV ESI,OFFSET _rgOpType
	XOR EAX,EAX
	MOV DWORD PTR [ESI], EAX
	MOV EAX,4
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	XOR EAX,EAX
	MOV DWORD PTR [ESI], EAX
	MOV EAX,8
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	XOR EAX,EAX
	MOV DWORD PTR [ESI], EAX
	XOR EAX,EAX
	MOV _OpMType, AL
	MOV ESI,OFFSET _OpSize
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	XOR EAX,EAX
	MOV _OpSizeA, AL
	XOR EAX,EAX
	MOV BYTE PTR [EBP-6], AL
	XOR EAX,EAX
	MOV _OpPrefix, AL
	XOR EAX,EAX
	MOV _OpDisp, EAX
	XOR EAX,EAX
	MOV _OpBase, EAX
	XOR EAX,EAX
	MOV _OpIndx, EAX
	XOR EAX,EAX
	MOV _fOpImm, AL
	XOR EAX,EAX
	MOV _OpImm, EAX
	XOR EAX,EAX
	MOV _fOpImm2, AL
	XOR EAX,EAX
	MOV _OpImm2, EAX
	XOR EAX,EAX
	MOV _nFixUp, AL
	XOR EAX,EAX
	MOV _nExtRef, EAX
	XOR EAX,EAX
	MOV _fForRef, AL
	XOR EAX,EAX
	MOV _ExpType, AL
	XOR EAX,EAX
	MOV _ExpType0, AL
	XOR EAX,EAX
	MOV _iExpSym, EAX
	XOR EAX,EAX
	MOV _iExpSym0, EAX
	XOR EAX,EAX
	PUSH EAX
	CALL _GetOper
	AND EAX,EAX
	JZ L_1059
	MOV EAX,_nOperands
	INC _nOperands
	XOR EAX,EAX
	MOV AL,_ExpType
	MOV _ExpType0, AL
	MOV EAX,_iExpSym
	MOV _iExpSym0, EAX
	CALL _Parse
	CMP EAX,44
	SETE AL
	AND AL,AL
	JZ L_1060
	PUSH 1
	CALL _GetOper
	AND EAX,EAX
	JZ L_1061
	MOV EAX,_nOperands
	INC _nOperands
	CALL _Parse
	CMP EAX,44
	SETE AL
	AND AL,AL
	JZ L_1062
	PUSH 2
	CALL _GetOper
	AND EAX,EAX
	JZ L_1063
	MOV EAX,_nOperands
	INC _nOperands
	CALL _Parse
	AND EAX,EAX
	JZ L_1064
	PUSH 33
	CALL _line_error
	JMP L_1050
L_1064:
L_1063:
L_1062:
L_1061:
L_1060:
L_1059:
	MOV EAX,_nOperands
	AND EAX,EAX
	JZ L_1065
	XOR EAX,EAX
	PUSH EAX
	CALL _EvalOper
	AND EAX,EAX
	JZ L_1066
	MOV EAX,_nOperands
	CMP EAX,1
	SETG AL
	AND AL,AL
	JZ L_1067
	PUSH 1
	CALL _EvalOper
	AND EAX,EAX
	JZ L_1068
	MOV EAX,_nOperands
	CMP EAX,2
	SETG AL
	AND AL,AL
	JZ L_1069
	PUSH 2
	CALL _EvalOper
	AND EAX,EAX
	JNZ L_1070
	MOV EAX,1
	MOV BYTE PTR [EBP-5], AL
L_1070:
L_1069:
	JMP L_1071
L_1068:
	MOV EAX,1
	MOV BYTE PTR [EBP-5], AL
L_1071:
L_1067:
	JMP L_1072
L_1066:
	MOV EAX,1
	MOV BYTE PTR [EBP-5], AL
L_1072:
L_1065:
	MOVSX EAX,BYTE PTR [EBP-5]
	AND EAX,EAX
	JZ L_1073
	JMP L_1050
L_1073:
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,15
	AND EAX,ECX
	JZ L_1074
	JMP L_1075
L_1074:
	MOV ESI,OFFSET _rgOpType
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,66
	SETE AL
	AND AL,AL
	JZ L_1076
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,4
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1077
L_1076:
	MOV ESI,OFFSET _rgOpType
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JZ L_1078
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,2
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1079
L_1078:
	MOV ESI,OFFSET _rgOpType
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,70
	SETE AL
	AND AL,AL
	JZ L_1080
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,2
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1081
L_1080:
	MOV ESI,OFFSET _rgOpType
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,64
	SETE AL
	AND AL,AL
	JZ L_1082
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,1
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1083
L_1082:
	XOR EAX,EAX
	MOV AL,_ExpType0
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_1084
	MOV EAX,_iExpSym0
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,8
	JZ L_1085
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,1
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1086
L_1085:
	MOV EAX,_iExpSym0
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,16
	JZ L_1087
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,2
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1088
L_1087:
	MOV EAX,_iExpSym0
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,32
	JZ L_1089
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,4
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1090
L_1089:
	MOV EAX,_iExpSym0
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,64
	JZ L_1091
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
L_1091:
L_1090:
L_1088:
L_1086:
	JMP L_1092
L_1084:
	XOR EAX,EAX
	MOV AL,_ExpType0
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_1093
	MOV EAX,_iExpSym0
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,8
	JZ L_1094
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,1
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1095
L_1094:
	MOV EAX,_iExpSym0
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,16
	JZ L_1096
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,2
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1097
L_1096:
	MOV EAX,_iExpSym0
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,32
	JZ L_1098
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,4
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1099
L_1098:
	MOV EAX,_iExpSym0
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,64
	JZ L_1100
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
L_1100:
L_1099:
L_1097:
L_1095:
	JMP L_1101
L_1093:
	XOR EAX,EAX
	MOV AL,_ExpType0
	CMP EAX,3
	SETE AL
	AND AL,AL
	JZ L_1102
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,4
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
L_1102:
L_1101:
L_1092:
L_1083:
L_1081:
L_1079:
L_1077:
L_1075:
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,15
	AND EAX,ECX
	JZ L_1103
	JMP L_1104
L_1103:
	MOV EAX,4
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,66
	SETE AL
	AND AL,AL
	JZ L_1105
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,4
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1106
L_1105:
	MOV EAX,4
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,65
	SETE AL
	AND AL,AL
	JZ L_1107
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,2
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1108
L_1107:
	MOV EAX,4
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,70
	SETE AL
	AND AL,AL
	JZ L_1109
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,2
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1110
L_1109:
	MOV EAX,4
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,64
	SETE AL
	AND AL,AL
	JZ L_1111
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,1
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1112
L_1111:
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_1113
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,8
	JZ L_1114
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,1
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1115
L_1114:
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,16
	JZ L_1116
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,2
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1117
L_1116:
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,32
	JZ L_1118
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,4
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1119
L_1118:
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,64
	JZ L_1120
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
L_1120:
L_1119:
L_1117:
L_1115:
	JMP L_1121
L_1113:
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_1122
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,8
	JZ L_1123
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,1
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1124
L_1123:
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,16
	JZ L_1125
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,2
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1126
L_1125:
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,32
	JZ L_1127
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,4
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
	JMP L_1128
L_1127:
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,64
	JZ L_1129
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,8
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
L_1129:
L_1128:
L_1126:
L_1124:
	JMP L_1130
L_1122:
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,3
	SETE AL
	AND AL,AL
	JZ L_1131
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV ECX,4
	OR EAX,ECX
	MOV BYTE PTR [ESI], AL
L_1131:
L_1130:
L_1121:
L_1112:
L_1110:
L_1108:
L_1106:
L_1104:
	MOV EAX,_CrntInst
	CMP EAX,119
	SETE AL
	AND AL,AL
	JZ L_1132
	MOV ESI,OFFSET _OpSize
	MOV EAX,1
	MOV EBX,ESI
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
L_1132:
	PUSH _CrntInst
	PUSH _nOperands
	CALL _INSEntry
	MOV _iInstEntry, EAX
	MOV EAX,_iInstEntry
	AND EAX,EAX
	JNZ L_1133
	PUSH 44
	CALL _line_error
	JMP L_1050
L_1133:
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,7
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV ECX,128
	AND EAX,ECX
	JZ L_1134
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOV EBX,ESI
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
L_1134:
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	JNZ L_1135
	MOV EAX,1
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOV EBX,ESI
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
L_1135:
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	AND EAX,EAX
	JNZ L_1136
	MOV ESI,OFFSET _OpSize
	MOV EAX,1
	MOV EBX,ESI
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
L_1136:
	MOV EAX,_nOperands
	CMP EAX,1
	SETG AL
	AND AL,AL
	JZ L_1137
	MOV ESI,OFFSET _OpSize
	MOV EAX,1
	MOV EBX,ESI
	MOV ESI,OFFSET _OpSize
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [EBX]
	CMP AL,BYTE PTR [ESI]
	SETNE AL
	AND AL,AL
	JZ L_1138
	PUSH 43
	CALL _line_error
	JMP L_1050
L_1138:
L_1137:
	MOV ESI,OFFSET _OpSize
	MOVSX EAX,BYTE PTR [ESI]
	MOV _OpSizeA, AL
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,1
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,84
	SETE AL
	AND AL,AL
	JNZ L_1139
	MOV EAX,_iInstEntry
	SHL EAX,3
	ADD EAX,2
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,84
	SETE AL
	AND AL,AL
L_1139:
	JZ L_1140
	XOR EAX,EAX
	MOV _iMemEntry, EAX
	JMP L_1141
L_1140:
	MOV ESI,OFFSET _rgOpType
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETE AL
	AND AL,AL
	JNZ L_1142
	MOV EAX,4
	MOV ESI,OFFSET _rgOpType
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,82
	SETE AL
	AND AL,AL
	JNZ L_1143
	MOV ESI,OFFSET _rgOpType
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,83
	SETE AL
	AND AL,AL
L_1143:
L_1142:
	JZ L_1144
	MOV EAX,1
	MOV DWORD PTR [EBP-4], EAX
L_1145:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,20
	SETL AL
	AND AL,AL
	JZ L_1146
	JMP SHORT L_1147
L_1148:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP SHORT L_1145
L_1147:
	MOV EAX,DWORD PTR [EBP-4]
	SHL EAX,2
	ADD EAX,0
	MOV ESI,OFFSET _rgM32
	ADD ESI,EAX
	MOVSX EAX,_OpMType
	XOR ECX,ECX
	MOV CL,BYTE PTR [ESI]
	CMP EAX,ECX
	SETE AL
	AND AL,AL
	JNZ L_1146
	JMP L_1148
L_1146:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,20
	SETE AL
	AND AL,AL
	JZ L_1150
	PUSH 45
	CALL _line_error
	JMP L_1050
L_1150:
	MOV EAX,DWORD PTR [EBP-4]
	MOV _iMemEntry, EAX
L_1151:
	JMP L_1152
L_1144:
	XOR EAX,EAX
	MOV _iMemEntry, EAX
L_1152:
L_1141:
	CALL _EncodeInst
L_1050:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _Storage:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,32
	XOR EAX,EAX
	MOV BYTE PTR [EBP-28], AL
	MOV EAX,1
	MOV DWORD PTR [EBP-12], EAX
	XOR EAX,EAX
	MOV BYTE PTR [EBP-27], AL
	XOR EAX,EAX
	MOV BYTE PTR [EBP-25], AL
	XOR EAX,EAX
	MOV BYTE PTR [EBP-26], AL
	MOVSX EAX,_fMoreStorage
	AND EAX,EAX
	JNZ L_1153
	MOV EAX,_Token
	JMP L_1155
L_1156:
	MOV EAX,1
	MOV _StoreSize, EAX
	JMP L_1154
L_1157:
	MOV EAX,2
	MOV _StoreSize, EAX
	JMP L_1154
L_1158:
	MOV EAX,4
	MOV _StoreSize, EAX
	JMP L_1154
L_1159:
	MOV EAX,6
	MOV _StoreSize, EAX
	JMP L_1154
L_1160:
	JMP L_1154
L_1155:
	CMP EAX,100
	JE L_1159
	CMP EAX,99
	JE L_1158
	CMP EAX,102
	JE L_1157
	CMP EAX,98
	JE L_1156
	JMP L_1160
L_1154:
L_1153:
L_1161:
	MOV EAX,1
	AND EAX,EAX
	JZ L_1162
	MOVSX EAX,_fMoreStorage
	AND EAX,EAX
	JZ L_1163
	MOV EAX,_Token
	MOV DWORD PTR [EBP-16], EAX
	XOR EAX,EAX
	MOV _fMoreStorage, AL
	JMP L_1164
L_1163:
	CALL _Parse
	MOV DWORD PTR [EBP-16], EAX
L_1164:
	MOV EAX,DWORD PTR [EBP-16]
	JMP L_1166
L_1167:
	XOR EAX,EAX
	MOV BYTE PTR [EBP-27], AL
	MOV EAX,_StoreSize
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_1168
	XOR EAX,EAX
	MOV DWORD PTR [EBP-20], EAX
L_1169:
	MOV EAX,DWORD PTR [EBP-20]
	CMP EAX,_CBString
	SETL AL
	AND AL,AL
	JZ L_1170
	JMP SHORT L_1171
L_1172:
	MOV EAX,DWORD PTR [EBP-20]
	INC DWORD PTR [EBP-20]
	JMP SHORT L_1169
L_1171:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1173
	MOV EAX,DWORD PTR [EBP-20]
	MOV ESI,OFFSET _TString
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	PUSH _lst_fh
	CALL _put_hexb
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,2
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _lst_fh
	PUSH OFFSET L_lit+2675
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	XOR EAX,EAX
	MOV AL,_Column
	CMP EAX,51
	SETA AL
	AND AL,AL
	JZ L_1174
	PUSH _lst_fh
	PUSH OFFSET L_lit+2678
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	MOV EAX,16
	MOV _Column, AL
L_1174:
L_1173:
	MOV EAX,DWORD PTR [EBP-20]
	MOV ESI,OFFSET _TString
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	PUSH EAX
	CALL _OutByteX
	JMP L_1172
L_1170:
	JMP L_1175
L_1168:
	PUSH 46
	CALL _line_error
	JMP L_1176
L_1175:
	JMP L_1165
L_1177:
	MOV EAX,_StoreSize
	CMP EAX,4
	SETNE AL
	AND AL,AL
	JZ L_1178
	PUSH 50
	CALL _line_error
	JMP L_1176
L_1178:
L_1179:
L_1180:
L_1181:
L_1182:
L_1183:
L_1184:
L_1185:
	XOR EAX,EAX
	MOV BYTE PTR [EBP-27], AL
	CALL _Expression
	AND EAX,EAX
	JNZ L_1186
	JMP L_1176
L_1186:
	XOR EAX,EAX
	MOV DWORD PTR [EBP-32], EAX
	XOR EAX,EAX
	MOV _nExtRef, EAX
	MOV EAX,_Token
	CMP EAX,9
	SETE AL
	AND AL,AL
	JNZ L_1187
	MOV EAX,_Token
	CMP EAX,7
	SETE AL
	AND AL,AL
L_1187:
	JZ L_1188
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_1189
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-32], EAX
	JMP L_1190
L_1189:
	XOR EAX,EAX
	MOV AL,_ExpType
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_1191
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-32], EAX
	MOV EAX,_iExpSym
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,128
	JZ L_1192
	MOV EAX,_iExpSym
	MOV _nExtRef, EAX
L_1192:
L_1191:
L_1190:
L_1188:
	MOVSX EAX,BYTE PTR [EBP-28]
	AND EAX,EAX
	JNZ L_1193
	MOV EAX,_TNumber
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,_Token
	MOV DWORD PTR [EBP-4], EAX
	CALL _Parse
	CMP EAX,101
	SETE AL
	AND AL,AL
	JZ L_1194
	MOV EAX,DWORD PTR [EBP-8]
	MOV DWORD PTR [EBP-12], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-28], AL
	CALL _Parse
	MOV EAX,_Token
	CMP EAX,40
	SETE AL
	AND AL,AL
	JZ L_1195
	CALL _Expression
	AND EAX,EAX
	JNZ L_1196
	JMP L_1176
L_1196:
	JMP L_1197
L_1195:
	PUSH 47
	CALL _line_error
L_1197:
	JMP L_1198
L_1194:
	CALL _ReturnToken
	MOV EAX,DWORD PTR [EBP-8]
	MOV _TNumber, EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV _Token, EAX
L_1198:
L_1193:
	MOV EAX,_StoreSize
	CMP EAX,6
	SETE AL
	AND AL,AL
	JZ L_1199
	MOVSX EAX,BYTE PTR [EBP-25]
	AND EAX,EAX
	JZ L_1200
	XOR EAX,EAX
	MOV BYTE PTR [EBP-25], AL
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1201
	MOV EAX,_TNumber
	MOV DWORD PTR [EBP-24], EAX
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,4
	ADD EAX,ECX
	MOV _Column, AL
	PUSH DWORD PTR [EBP-24]
	PUSH _lst_fh
	CALL _put_hexw
	PUSH _lst_fh
	PUSH OFFSET L_lit+2697
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1201:
	PUSH _TNumber
	CALL _OutWordX
	JMP L_1202
L_1200:
	MOV EAX,1
	MOV BYTE PTR [EBP-26], AL
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1203
	XOR EAX,EAX
	MOV AL,_Column
	MOV ECX,8
	ADD EAX,ECX
	MOV _Column, AL
	PUSH _TNumber
	PUSH _lst_fh
	CALL _put_hexd
	PUSH _lst_fh
	PUSH OFFSET L_lit+2699
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1203:
	PUSH _TNumber
	CALL _OutDWordX
L_1202:
	JMP L_1204
L_1199:
	MOV EAX,_StoreSize
	CMP EAX,4
	SETE AL
	AND AL,AL
	JZ L_1205
	MOVSX EAX,BYTE PTR [EBP-28]
	AND EAX,EAX
	JZ L_1206
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1207
	MOV EAX,_Token
	CMP EAX,9
	SETE AL
	AND AL,AL
	JNZ L_1208
	MOV EAX,_Token
	CMP EAX,7
	SETE AL
	AND AL,AL
L_1208:
	JZ L_1209
	PUSH _lst_fh
	PUSH OFFSET L_lit+2701
	PUSH DWORD PTR [EBP-12]
	PUSH _TNumber
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	JMP L_1210
L_1209:
	PUSH _lst_fh
	PUSH OFFSET L_lit+2718
	PUSH DWORD PTR [EBP-12]
	PUSH _TNumber
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1210:
L_1207:
L_1211:
	MOV EAX,DWORD PTR [EBP-12]
	DEC DWORD PTR [EBP-12]
	AND EAX,EAX
	JZ L_1212
	MOV EAX,_Token
	CMP EAX,9
	SETE AL
	AND AL,AL
	JNZ L_1213
	MOV EAX,_Token
	CMP EAX,7
	SETE AL
	AND AL,AL
L_1213:
	JZ L_1214
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1215
	MOV EAX,_nExtRef
	AND EAX,EAX
	JZ L_1216
	PUSH 1
	PUSH _iExpSym
	CALL _ExtRef
	JMP L_1217
L_1216:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,EAX
	JNZ L_1218
	PUSH 1
	PUSH _oNextData
	CALL _ForRef
	JMP L_1219
L_1218:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,1
	JZ L_1220
	PUSH 195
	PUSH _oNextData
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
	JMP L_1221
L_1220:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,2
	JZ L_1222
	PUSH 194
	PUSH _oNextData
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_1222:
L_1221:
L_1219:
L_1217:
	JMP L_1223
L_1215:
	MOV EAX,_nExtRef
	AND EAX,EAX
	JZ L_1224
	PUSH 2
	PUSH _iExpSym
	CALL _ExtRef
L_1224:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,EAX
	JNZ L_1225
	PUSH 2
	PUSH _oNextCode
	CALL _ForRef
	JMP L_1226
L_1225:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,1
	JZ L_1227
	PUSH 193
	PUSH _oNextCode
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
	JMP L_1228
L_1227:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,2
	JZ L_1229
	PUSH 192
	PUSH _oNextCode
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_1229:
L_1228:
L_1226:
L_1223:
L_1214:
	PUSH _TNumber
	CALL _OutDWordX
	JMP L_1211
L_1212:
	JMP L_1230
L_1206:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1231
	MOV EAX,_Token
	CMP EAX,9
	SETE AL
	AND AL,AL
	JNZ L_1232
	MOV EAX,_Token
	CMP EAX,7
	SETE AL
	AND AL,AL
L_1232:
	JZ L_1233
	PUSH _lst_fh
	PUSH OFFSET L_lit+2734
	PUSH _TNumber
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	JMP L_1234
L_1233:
	PUSH _lst_fh
	PUSH OFFSET L_lit+2742
	PUSH _TNumber
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1234:
L_1231:
	MOV EAX,_Token
	CMP EAX,9
	SETE AL
	AND AL,AL
	JNZ L_1235
	MOV EAX,_Token
	CMP EAX,7
	SETE AL
	AND AL,AL
L_1235:
	JZ L_1236
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1237
	MOV EAX,_nExtRef
	AND EAX,EAX
	JZ L_1238
	PUSH 1
	PUSH _iExpSym
	CALL _ExtRef
	JMP L_1239
L_1238:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,EAX
	JNZ L_1240
	PUSH 1
	PUSH _oNextData
	CALL _ForRef
	JMP L_1241
L_1240:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,1
	JZ L_1242
	PUSH 195
	PUSH _oNextData
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
	JMP L_1243
L_1242:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,2
	JZ L_1244
	PUSH 194
	PUSH _oNextData
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_1244:
L_1243:
L_1241:
L_1239:
	JMP L_1245
L_1237:
	MOV EAX,_nExtRef
	AND EAX,EAX
	JZ L_1246
	PUSH 2
	PUSH _iExpSym
	CALL _ExtRef
	JMP L_1247
L_1246:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,EAX
	JNZ L_1248
	PUSH 2
	PUSH _oNextCode
	CALL _ForRef
	JMP L_1249
L_1248:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,1
	JZ L_1250
	PUSH 193
	PUSH _oNextCode
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
	JMP L_1251
L_1250:
	MOV EAX,DWORD PTR [EBP-32]
	AND EAX,2
	JZ L_1252
	PUSH 192
	PUSH _oNextCode
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_1252:
L_1251:
L_1249:
L_1247:
L_1245:
L_1236:
	PUSH _TNumber
	CALL _OutDWordX
L_1230:
	JMP L_1253
L_1205:
	MOV EAX,_StoreSize
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_1254
	MOVSX EAX,BYTE PTR [EBP-28]
	AND EAX,EAX
	JZ L_1255
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1256
	PUSH _lst_fh
	PUSH OFFSET L_lit+2749
	PUSH DWORD PTR [EBP-12]
	PUSH _TNumber
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1256:
L_1257:
	MOV EAX,DWORD PTR [EBP-12]
	DEC DWORD PTR [EBP-12]
	AND EAX,EAX
	JZ L_1258
	PUSH _TNumber
	CALL _OutWordX
	JMP L_1257
L_1258:
	JMP L_1259
L_1255:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1260
	PUSH _lst_fh
	PUSH OFFSET L_lit+2766
	PUSH _TNumber
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1260:
	PUSH _TNumber
	CALL _OutWordX
L_1259:
	JMP L_1261
L_1254:
	MOVSX EAX,BYTE PTR [EBP-28]
	AND EAX,EAX
	JZ L_1262
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1263
	PUSH _lst_fh
	PUSH OFFSET L_lit+2773
	PUSH DWORD PTR [EBP-12]
	PUSH _TNumber
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1263:
L_1264:
	MOV EAX,DWORD PTR [EBP-12]
	DEC DWORD PTR [EBP-12]
	AND EAX,EAX
	JZ L_1265
	PUSH _TNumber
	CALL _OutByteX
	JMP L_1264
L_1265:
	JMP L_1266
L_1262:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1267
	PUSH _lst_fh
	PUSH OFFSET L_lit+2790
	PUSH _TNumber
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1267:
	PUSH _TNumber
	CALL _OutByteX
L_1266:
L_1261:
L_1253:
L_1204:
	JMP L_1165
L_1268:
	MOVSX EAX,BYTE PTR [EBP-27]
	AND EAX,EAX
	JZ L_1269
	PUSH 48
	CALL _line_error
	JMP L_1176
L_1269:
	MOV EAX,1
	MOV BYTE PTR [EBP-27], AL
	JMP L_1165
L_1270:
	XOR EAX,EAX
	MOV BYTE PTR [EBP-27], AL
	MOV EAX,_StoreSize
	CMP EAX,6
	SETE AL
	AND AL,AL
	JZ L_1271
	MOVSX EAX,BYTE PTR [EBP-26]
L_1271:
	AND EAX,EAX
	JZ L_1272
	MOV EAX,1
	MOV BYTE PTR [EBP-25], AL
	XOR EAX,EAX
	MOV BYTE PTR [EBP-26], AL
	JMP L_1273
L_1272:
	PUSH 49
	CALL _line_error
	JMP L_1176
L_1273:
	JMP L_1165
L_1274:
	MOVSX EAX,BYTE PTR [EBP-27]
	AND EAX,EAX
	JZ L_1275
	MOV EAX,1
	MOV _fMoreStorage, AL
L_1275:
	JMP L_1176
L_1276:
	PUSH 51
	CALL _line_error
	XOR EAX,EAX
	MOV _fMoreStorage, AL
	JMP L_1176
L_1166:
	CMP EAX,0
	JE L_1274
	CMP EAX,58
	JE L_1270
	CMP EAX,44
	JE L_1268
	CMP EAX,8
	JE L_1185
	CMP EAX,4
	JE L_1184
	CMP EAX,3
	JE L_1183
	CMP EAX,45
	JE L_1182
	CMP EAX,40
	JE L_1181
	CMP EAX,36
	JE L_1180
	CMP EAX,6
	JE L_1179
	CMP EAX,112
	JE L_1177
	CMP EAX,5
	JE L_1167
	JMP L_1276
L_1165:
	JMP L_1161
L_1162:
L_1176:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _NewSymbol:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,6
	MOV EAX,_pSymNext
	ADD EAX,_CBString
	MOV EBX,EAX
	MOV EAX,_pSymBuf
	ADD EAX,16384
	CMP EAX,EBX
	SETBE AL
	AND AL,AL
	JZ L_1277
	PUSH OFFSET L_lit+2797
	CALL _fatal_error
L_1277:
	MOV EAX,_iSymNext
	CMP EAX,700
	SETGE AL
	AND AL,AL
	JZ L_1278
	PUSH OFFSET L_lit+2823
	CALL _fatal_error
L_1278:
	PUSH _pSymNext
	PUSH OFFSET _TString
	PUSH _CBString
	CALL _strncpy
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,_CBString
	MOV DWORD PTR [ESI+8], EAX
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	XOR EAX,EAX
	MOV DWORD PTR [ESI], EAX
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,_pSymNext
	MOV DWORD PTR [ESI+12], EAX
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,_level
	SHL EAX,2
	MOV EBX,ESI
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBX+4], EAX
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	XOR EAX,EAX
	MOV DWORD PTR [ESI+16], EAX
	MOVSX EAX,_fExtern
	AND EAX,EAX
	JZ L_1279
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,128
	MOV DWORD PTR [ESI], EAX
	JMP L_1280
L_1279:
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,512
	MOV DWORD PTR [ESI], EAX
L_1280:
	MOVSX EAX,_fFarLabel
	AND EAX,EAX
	JZ L_1281
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,256
	MOV DWORD PTR [ESI], EAX
L_1281:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1282
	MOVSX EAX,_fExtern
	AND EAX,EAX
	JNZ L_1283
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,_oNextData
	MOV DWORD PTR [ESI+16], EAX
L_1283:
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,2
	MOV DWORD PTR [ESI], EAX
	JMP L_1284
L_1282:
	MOVSX EAX,_fExtern
	AND EAX,EAX
	JNZ L_1285
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,_oNextCode
	MOV DWORD PTR [ESI+16], EAX
L_1285:
	MOV EAX,_iSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,1
	MOV DWORD PTR [ESI], EAX
L_1284:
	MOV EAX,_pSymNext
	ADD EAX,_CBString
	MOV _pSymNext, EAX
	MOV EAX,_iSymNext
	INC _iSymNext
	XOR EAX,EAX
	MOV BYTE PTR [EBP-6], AL
	XOR EAX,EAX
	MOV BYTE PTR [EBP-5], AL
	CALL _Parse
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,58
	SETE AL
	AND AL,AL
	JZ L_1286
	MOV EAX,1
	MOV BYTE PTR [EBP-5], AL
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1287
	PUSH 49
	CALL _line_error
	JMP L_1288
L_1287:
	CALL _Parse
	MOV DWORD PTR [EBP-4], EAX
L_1286:
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_1290
L_1291:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1292
	PUSH 41
	CALL _line_error
	JMP L_1288
L_1292:
	MOVSX EAX,BYTE PTR [EBP-5]
	AND EAX,EAX
	JNZ L_1293
	PUSH 54
	CALL _line_error
	JMP L_1288
L_1293:
	CALL _Instruction
	JMP L_1289
L_1294:
	MOV EAX,_iSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,8
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1289
L_1295:
	MOV EAX,_iSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,16
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1289
L_1296:
	MOV EAX,_iSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,32
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1289
L_1297:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_1298
	MOVSX EAX,BYTE PTR [EBP-5]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_1298:
	JZ L_1299
	PUSH 54
	CALL _line_error
	JMP L_1288
L_1299:
	MOV EAX,_iSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,64
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1289
L_1300:
	PUSH 55
	CALL _line_error
	JMP L_1289
L_1301:
	MOVSX EAX,_fExtern
	AND EAX,EAX
	JZ L_1302
	JMP L_1288
L_1302:
L_1303:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1304
	MOVSX EAX,_fExtern
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_1304:
	JZ L_1305
	PUSH 56
	CALL _line_error
L_1305:
	JMP L_1289
L_1306:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1307
	PUSH 56
	CALL _line_error
L_1307:
	JMP L_1289
L_1290:
	CMP EAX,0
	JE L_1303
	CMP EAX,58
	JE L_1301
	CMP EAX,105
	JE L_1300
	CMP EAX,100
	JE L_1297
	CMP EAX,99
	JE L_1296
	CMP EAX,102
	JE L_1295
	CMP EAX,98
	JE L_1294
	CMP EAX,1
	JE L_1291
	JMP L_1306
L_1289:
	MOV EAX,_iSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,128
	JZ L_1308
	XOR EAX,EAX
	MOV BYTE PTR [EBP-6], AL
L_1308:
	MOVSX EAX,BYTE PTR [EBP-6]
	AND EAX,EAX
	JZ L_1309
	CALL _Storage
L_1309:
L_1288:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _MakePublic:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,6
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,512
	JZ L_1310
	PUSH 64
	CALL _line_error
	JMP L_1311
L_1310:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1312
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,2
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_1312:
	JZ L_1313
	PUSH 69
	CALL _line_error
	JMP L_1311
L_1313:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_1314
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,1
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_1314:
	JZ L_1315
	PUSH 69
	CALL _line_error
	JMP L_1311
L_1315:
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,512
	MOV DWORD PTR [ESI], EAX
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,-129
	MOV DWORD PTR [ESI], EAX
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1316
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,_oNextData
	MOV DWORD PTR [ESI+16], EAX
	JMP L_1317
L_1316:
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,_oNextCode
	MOV DWORD PTR [ESI+16], EAX
L_1317:
	XOR EAX,EAX
	MOV BYTE PTR [EBP-6], AL
	XOR EAX,EAX
	MOV BYTE PTR [EBP-5], AL
	CALL _Parse
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,58
	SETE AL
	AND AL,AL
	JZ L_1318
	MOV EAX,1
	MOV BYTE PTR [EBP-5], AL
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1319
	PUSH 49
	CALL _line_error
	JMP L_1311
L_1319:
	CALL _Parse
	MOV DWORD PTR [EBP-4], EAX
L_1318:
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_1321
L_1322:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1323
	PUSH 41
	CALL _line_error
	JMP L_1311
L_1323:
	MOVSX EAX,BYTE PTR [EBP-5]
	AND EAX,EAX
	JNZ L_1324
	PUSH 54
	CALL _line_error
	JMP L_1311
L_1324:
	CALL _Instruction
	JMP L_1320
L_1325:
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,8
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1320
L_1326:
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,16
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1320
L_1327:
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,32
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1320
L_1328:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_1329
	MOVSX EAX,BYTE PTR [EBP-5]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_1329:
	JZ L_1330
	PUSH 54
	CALL _line_error
	JMP L_1311
L_1330:
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,64
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1320
L_1331:
	PUSH 55
	CALL _line_error
	JMP L_1320
L_1332:
	JMP L_1311
L_1333:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1334
	PUSH 56
	CALL _line_error
L_1334:
	JMP L_1320
L_1321:
	CMP EAX,58
	JE L_1332
	CMP EAX,105
	JE L_1331
	CMP EAX,100
	JE L_1328
	CMP EAX,99
	JE L_1327
	CMP EAX,102
	JE L_1326
	CMP EAX,98
	JE L_1325
	CMP EAX,1
	JE L_1322
	JMP L_1333
L_1320:
	MOVSX EAX,BYTE PTR [EBP-6]
	AND EAX,EAX
	JZ L_1335
	CALL _Storage
L_1335:
L_1311:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _CheckExtern:
	PUSH EBP
	MOV EBP,ESP
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1336
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,2
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_1336:
	JZ L_1337
	PUSH 69
	CALL _line_error
	JMP L_1338
L_1337:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_1339
	MOV EAX,_TSymnum
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,1
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_1339:
	JZ L_1340
	PUSH 69
	CALL _line_error
L_1340:
L_1338:
	POP EBP
	RETN
PUBLIC _NewLSymbol:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,6
	MOV EAX,_pLSymNext
	ADD EAX,_CBString
	MOV EBX,EAX
	MOV EAX,_pLSymBuf
	ADD EAX,32768
	CMP EAX,EBX
	SETBE AL
	AND AL,AL
	JZ L_1341
	PUSH OFFSET L_lit+2848
	CALL _fatal_error
L_1341:
	MOV EAX,_iLSymNext
	CMP EAX,1800
	SETGE AL
	AND AL,AL
	JZ L_1342
	PUSH OFFSET L_lit+2880
	CALL _fatal_error
L_1342:
	PUSH _pLSymNext
	PUSH OFFSET _TString
	PUSH _CBString
	CALL _strncpy
	MOV EAX,_iLSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,_CBString
	MOV DWORD PTR [ESI+8], EAX
	MOV EAX,_iLSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	XOR EAX,EAX
	MOV DWORD PTR [ESI], EAX
	MOV EAX,_iLSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,_pLSymNext
	MOV DWORD PTR [ESI+12], EAX
	MOV EAX,_iLSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,_level
	SHL EAX,2
	MOV EBX,ESI
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBX+4], EAX
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1343
	MOV EAX,_iLSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,_oNextData
	MOV DWORD PTR [ESI+16], EAX
	MOV EAX,_iLSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,2
	MOV DWORD PTR [ESI], EAX
	JMP L_1344
L_1343:
	MOV EAX,_iLSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,_oNextCode
	MOV DWORD PTR [ESI+16], EAX
	MOV EAX,_iLSymNext
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,1
	MOV DWORD PTR [ESI], EAX
L_1344:
	MOV EAX,_pLSymNext
	ADD EAX,_CBString
	MOV _pLSymNext, EAX
	MOV EAX,_iLSymNext
	INC _iLSymNext
	XOR EAX,EAX
	MOV BYTE PTR [EBP-6], AL
	XOR EAX,EAX
	MOV BYTE PTR [EBP-5], AL
	CALL _Parse
	MOV DWORD PTR [EBP-4], EAX
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,58
	SETE AL
	AND AL,AL
	JZ L_1345
	MOV EAX,1
	MOV BYTE PTR [EBP-5], AL
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1346
	PUSH 49
	CALL _line_error
	JMP L_1347
L_1346:
	CALL _Parse
	MOV DWORD PTR [EBP-4], EAX
L_1345:
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_1349
L_1350:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1351
	PUSH 41
	CALL _line_error
	JMP L_1347
L_1351:
	MOVSX EAX,BYTE PTR [EBP-5]
	AND EAX,EAX
	JNZ L_1352
	PUSH 54
	CALL _line_error
	JMP L_1347
L_1352:
	CALL _Instruction
	JMP L_1348
L_1353:
	MOV EAX,_iLSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,8
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1348
L_1354:
	MOV EAX,_iLSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,16
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1348
L_1355:
	MOV EAX,_iLSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,32
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1348
L_1356:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	SETZ AL
	AND AL,AL
	JZ L_1357
	MOVSX EAX,BYTE PTR [EBP-5]
	AND EAX,EAX
	SETZ AL
	AND AL,AL
L_1357:
	JZ L_1358
	PUSH 54
	CALL _line_error
	JMP L_1347
L_1358:
	MOV EAX,_iLSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	OR EAX,64
	MOV DWORD PTR [ESI], EAX
	MOV EAX,1
	MOV BYTE PTR [EBP-6], AL
	JMP L_1348
L_1359:
	CALL _AddMacro
	JMP L_1348
L_1360:
	JMP L_1347
L_1361:
	MOVSX EAX,_fDataSeg
	AND EAX,EAX
	JZ L_1362
	PUSH 56
	CALL _line_error
L_1362:
	JMP L_1348
L_1349:
	CMP EAX,58
	JE L_1360
	CMP EAX,105
	JE L_1359
	CMP EAX,100
	JE L_1356
	CMP EAX,99
	JE L_1355
	CMP EAX,102
	JE L_1354
	CMP EAX,98
	JE L_1353
	CMP EAX,1
	JE L_1350
	JMP L_1361
L_1348:
	MOV EAX,_iLSymNext
	SUB EAX,1
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,128
	JZ L_1363
	XOR EAX,EAX
	MOV BYTE PTR [EBP-6], AL
L_1363:
	MOVSX EAX,BYTE PTR [EBP-6]
	AND EAX,EAX
	JZ L_1364
	CALL _Storage
L_1364:
L_1347:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _Resolve:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,20
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4], EAX
L_1365:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,_iRefNext
	SETL AL
	AND AL,AL
	JZ L_1366
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_1367
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+10]
	SUB EAX,_DataOffset
	PUSH EAX
	CALL _seekDS
	LEA EAX,DWORD PTR [EBP-16]
	PUSH EAX
	PUSH 4
	CALL _readDS
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+10]
	SUB EAX,_DataOffset
	PUSH EAX
	CALL _seekDS
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+10]
	SUB EAX,_DataOffset
	MOV DWORD PTR [EBP-20], EAX
	JMP L_1368
L_1367:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+10]
	SUB EAX,_CodeOffset
	PUSH EAX
	CALL _seekCS
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_1369
	LEA EAX,DWORD PTR [EBP-16]
	PUSH EAX
	PUSH 4
	CALL _readCS
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+10]
	SUB EAX,_CodeOffset
	PUSH EAX
	CALL _seekCS
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+10]
	SUB EAX,_CodeOffset
	MOV DWORD PTR [EBP-20], EAX
L_1369:
L_1368:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+6]
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI+1]
	PUSH EAX
	CALL _findLsymbol
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,DWORD PTR [EBP-8]
	AND EAX,EAX
	JZ L_1370
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,4
	SETE AL
	AND AL,AL
	JZ L_1371
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV EBX,ESI
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+10]
	SUB EAX,_CodeOffset
	ADD EAX,1
	MOV ECX,EAX
	MOV EAX,DWORD PTR [EBX+16]
	SUB EAX,ECX
	MOV DWORD PTR [EBP-12], EAX
	PUSH DWORD PTR [EBP-12]
	CALL _OutByteCS
	JMP L_1372
L_1371:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,3
	SETE AL
	AND AL,AL
	JZ L_1373
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+16]
	SUB EAX,_CodeOffset
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+10]
	SUB EAX,_CodeOffset
	ADD EAX,4
	MOV ECX,EAX
	MOV EAX,EBX
	SUB EAX,ECX
	MOV DWORD PTR [EBP-12], EAX
	PUSH DWORD PTR [EBP-12]
	CALL _OutDWordCS
	JMP L_1374
L_1373:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_1375
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,DWORD PTR [ESI+16]
	MOV DWORD PTR [EBP-16], EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,1
	JZ L_1376
	PUSH 193
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
	JMP L_1377
L_1376:
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,2
	JZ L_1378
	PUSH 192
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_1378:
L_1377:
	PUSH DWORD PTR [EBP-16]
	CALL _OutDWordCS
	JMP L_1379
L_1375:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_1380
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,DWORD PTR [ESI+16]
	MOV DWORD PTR [EBP-16], EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,1
	JZ L_1381
	PUSH 195
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
	JMP L_1382
L_1381:
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _lst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,2
	JZ L_1383
	PUSH 194
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_1383:
L_1382:
	PUSH DWORD PTR [EBP-16]
	CALL _OutDWordDS
L_1380:
L_1379:
L_1374:
L_1372:
	JMP L_1384
L_1370:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+6]
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI+1]
	PUSH EAX
	CALL _findGsymbol
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,DWORD PTR [EBP-8]
	AND EAX,EAX
	JZ L_1385
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,4
	SETE AL
	AND AL,AL
	JZ L_1386
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV EBX,ESI
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+10]
	SUB EAX,_CodeOffset
	ADD EAX,1
	MOV ECX,EAX
	MOV EAX,DWORD PTR [EBX+16]
	SUB EAX,ECX
	MOV DWORD PTR [EBP-12], EAX
	PUSH DWORD PTR [EBP-12]
	CALL _OutByteCS
	JMP L_1387
L_1386:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,3
	SETE AL
	AND AL,AL
	JZ L_1388
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV EBX,ESI
	MOV ESI,_pfrt
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+10]
	SUB EAX,_CodeOffset
	ADD EAX,4
	MOV ECX,EAX
	MOV EAX,DWORD PTR [EBX+16]
	SUB EAX,ECX
	MOV DWORD PTR [EBP-12], EAX
	PUSH DWORD PTR [EBP-12]
	CALL _OutDWordCS
	JMP L_1389
L_1388:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_1390
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,DWORD PTR [ESI+16]
	MOV DWORD PTR [EBP-16], EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,1
	JZ L_1391
	PUSH 193
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
	JMP L_1392
L_1391:
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,2
	JZ L_1393
	PUSH 192
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_1393:
L_1392:
	PUSH DWORD PTR [EBP-16]
	CALL _OutDWordCS
	JMP L_1394
L_1390:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_1395
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,DWORD PTR [ESI+16]
	MOV DWORD PTR [EBP-16], EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,1
	JZ L_1396
	PUSH 195
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
	JMP L_1397
L_1396:
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,2
	JZ L_1398
	PUSH 194
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_1398:
L_1397:
	PUSH DWORD PTR [EBP-16]
	CALL _OutDWordDS
L_1395:
L_1394:
L_1389:
L_1387:
	JMP L_1399
L_1385:
	PUSH OFFSET L_lit+2911
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,14
	IMUL ECX
	MOV ESI,_pfrt
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+2]
	CALL _prev_error
L_1399:
L_1384:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_1365
L_1366:
	MOV EAX,_oNextCode
	SUB EAX,_CodeOffset
	MOV _ics, EAX
	MOV EAX,_oNextData
	SUB EAX,_DataOffset
	MOV _ids, EAX
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _ResolveExt:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,51
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4], EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-16], EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-12], EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-20], EAX
L_1400:
	MOV EAX,DWORD PTR [EBP-4]
	CMP EAX,_iERefNext
	SETL AL
	AND AL,AL
	JZ L_1401
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+1]
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,512
	JZ L_1402
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_1403
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+5]
	SUB EAX,_DataOffset
	PUSH EAX
	CALL _seekDS
	LEA EAX,DWORD PTR [EBP-16]
	PUSH EAX
	PUSH 4
	CALL _readDS
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+5]
	SUB EAX,_DataOffset
	PUSH EAX
	CALL _seekDS
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+5]
	SUB EAX,_DataOffset
	MOV DWORD PTR [EBP-20], EAX
	JMP L_1404
L_1403:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+5]
	SUB EAX,_CodeOffset
	PUSH EAX
	CALL _seekCS
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_1405
	LEA EAX,DWORD PTR [EBP-16]
	PUSH EAX
	PUSH 4
	CALL _readCS
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+5]
	SUB EAX,_CodeOffset
	PUSH EAX
	CALL _seekCS
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+5]
	SUB EAX,_CodeOffset
	MOV DWORD PTR [EBP-20], EAX
L_1405:
L_1404:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,3
	SETE AL
	AND AL,AL
	JZ L_1406
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+16]
	SUB EAX,_CodeOffset
	MOV EBX,EAX
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+5]
	SUB EAX,_CodeOffset
	ADD EAX,4
	MOV ECX,EAX
	MOV EAX,EBX
	SUB EAX,ECX
	MOV DWORD PTR [EBP-12], EAX
	PUSH DWORD PTR [EBP-12]
	CALL _OutDWordCS
	JMP L_1407
L_1406:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_1408
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,DWORD PTR [ESI+16]
	MOV DWORD PTR [EBP-16], EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,2
	JZ L_1409
	PUSH 192
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
	JMP L_1410
L_1409:
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,1
	JZ L_1411
	PUSH 193
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_1411:
L_1410:
	PUSH DWORD PTR [EBP-16]
	CALL _OutDWordCS
	JMP L_1412
L_1408:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ECX,9
	IMUL ECX
	MOV ESI,OFFSET _ert
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_1413
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-16]
	ADD EAX,DWORD PTR [ESI+16]
	MOV DWORD PTR [EBP-16], EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,1
	JZ L_1414
	PUSH 195
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
	JMP L_1415
L_1414:
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,2
	JZ L_1416
	PUSH 194
	PUSH DWORD PTR [EBP-20]
	XOR EAX,EAX
	PUSH EAX
	CALL _FixUp
L_1416:
L_1415:
	PUSH DWORD PTR [EBP-16]
	CALL _OutDWordDS
L_1413:
L_1412:
L_1407:
	JMP L_1417
L_1402:
	LEA EAX,DWORD PTR [EBP-51]
	PUSH EAX
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+12]
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	PUSH DWORD PTR [ESI+8]
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP-8]
	MOV ECX,20
	IMUL ECX
	MOV ESI,OFFSET _gst
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI+8]
	LEA ESI,BYTE PTR [EBP-51]
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	PUSH _lst_fh
	PUSH OFFSET L_lit+2947
	LEA EAX,DWORD PTR [EBP-51]
	PUSH EAX
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR EAX,EAX
	MOV _Column, AL
	INC _error_count
	MOV EAX,_error_count
L_1417:
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	JMP L_1400
L_1401:
	MOV EAX,_oNextCode
	SUB EAX,_CodeOffset
	MOV _ics, EAX
	MOV EAX,_oNextData
	SUB EAX,_DataOffset
	MOV _ids, EAX
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _BuildRunFile:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,9
	MOV ESI,OFFSET _tag
	MOV EAX,128
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,1
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	PUSH OFFSET _filetype
	PUSH 1
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV ESI,OFFSET _tag
	MOV EAX,144
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,12
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	PUSH OFFSET _StackTotal
	PUSH 4
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV EAX,_oNextCode
	SUB EAX,_CodeOffset
	MOV DWORD PTR [EBP-9], EAX
	LEA EAX,DWORD PTR [EBP-9]
	PUSH EAX
	PUSH 4
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV EAX,_oNextData
	SUB EAX,_DataOffset
	MOV DWORD PTR [EBP-9], EAX
	LEA EAX,DWORD PTR [EBP-9]
	PUSH EAX
	PUSH 4
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	PUSH OFFSET L_lit+2972
	PUSH _StackTotal
	MOV EDI, 4
	CALL _printf
	ADD ESP,8
	PUSH OFFSET L_lit+2990
	MOV EAX,_oNextCode
	SUB EAX,_CodeOffset
	PUSH EAX
	MOV EDI, 4
	CALL _printf
	ADD ESP,8
	PUSH OFFSET L_lit+3008
	MOV EAX,_oNextData
	SUB EAX,_DataOffset
	PUSH EAX
	MOV EDI, 4
	CALL _printf
	ADD ESP,8
	MOV ESI,OFFSET _tag
	MOV EAX,146
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,4
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	PUSH OFFSET _DataOffset
	PUSH 4
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV ESI,OFFSET _tag
	MOV EAX,148
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,4
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	PUSH OFFSET _CodeOffset
	PUSH 4
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV ESI,OFFSET _tag
	MOV EAX,150
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,4
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	PUSH OFFSET _StartAddr
	PUSH 4
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV ESI,OFFSET _tag
	MOV EAX,176
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,_oNextCode
	SUB EAX,_CodeOffset
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV ESI,OFFSET _tag
	MOV EAX,DWORD PTR [ESI+1]
	MOV DWORD PTR [EBP-9], EAX
	PUSH _pcsbuf
	PUSH 1
	PUSH DWORD PTR [EBP-9]
	PUSH _run_fh
	CALL _fwrite
	MOV ESI,OFFSET _tag
	MOV EAX,178
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,_oNextData
	SUB EAX,_DataOffset
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV ESI,OFFSET _tag
	MOV EAX,DWORD PTR [ESI+1]
	MOV DWORD PTR [EBP-9], EAX
	PUSH _pdsbuf
	PUSH 1
	PUSH DWORD PTR [EBP-9]
	PUSH _run_fh
	CALL _fwrite
	MOV EAX,_nCDFix
	AND EAX,EAX
	JZ L_1418
	MOV ESI,OFFSET _tag
	MOV EAX,192
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,_nCDFix
	SHL EAX,2
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV EAX,_iFUNext
	MOV DWORD PTR [EBP-5], EAX
L_1419:
	MOV EAX,DWORD PTR [EBP-5]
	DEC DWORD PTR [EBP-5]
	AND EAX,EAX
	JZ L_1420
	MOV EAX,DWORD PTR [EBP-5]
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,192
	SETE AL
	AND AL,AL
	JZ L_1421
	MOV EAX,DWORD PTR [EBP-5]
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	MOV EAX,ESI
	ADD EAX,1
	PUSH EAX
	PUSH 1
	PUSH 4
	PUSH _run_fh
	CALL _fwrite
L_1421:
	JMP L_1419
L_1420:
L_1418:
	MOV EAX,_nCCFix
	AND EAX,EAX
	JZ L_1422
	MOV ESI,OFFSET _tag
	MOV EAX,193
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,_nCCFix
	SHL EAX,2
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV EAX,_iFUNext
	MOV DWORD PTR [EBP-5], EAX
L_1423:
	MOV EAX,DWORD PTR [EBP-5]
	DEC DWORD PTR [EBP-5]
	AND EAX,EAX
	JZ L_1424
	MOV EAX,DWORD PTR [EBP-5]
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,193
	SETE AL
	AND AL,AL
	JZ L_1425
	MOV EAX,DWORD PTR [EBP-5]
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	MOV EAX,ESI
	ADD EAX,1
	PUSH EAX
	PUSH 1
	PUSH 4
	PUSH _run_fh
	CALL _fwrite
L_1425:
	JMP L_1423
L_1424:
L_1422:
	MOV EAX,_nDDFix
	AND EAX,EAX
	JZ L_1426
	MOV ESI,OFFSET _tag
	MOV EAX,194
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,_nDDFix
	SHL EAX,2
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV EAX,_iFUNext
	MOV DWORD PTR [EBP-5], EAX
L_1427:
	MOV EAX,DWORD PTR [EBP-5]
	DEC DWORD PTR [EBP-5]
	AND EAX,EAX
	JZ L_1428
	MOV EAX,DWORD PTR [EBP-5]
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,194
	SETE AL
	AND AL,AL
	JZ L_1429
	MOV EAX,DWORD PTR [EBP-5]
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	MOV EAX,ESI
	ADD EAX,1
	PUSH EAX
	PUSH 1
	PUSH 4
	PUSH _run_fh
	CALL _fwrite
L_1429:
	JMP L_1427
L_1428:
L_1426:
	MOV EAX,_nDCFix
	AND EAX,EAX
	JZ L_1430
	MOV ESI,OFFSET _tag
	MOV EAX,195
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,_nDCFix
	SHL EAX,2
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV EAX,_iFUNext
	MOV DWORD PTR [EBP-5], EAX
L_1431:
	MOV EAX,DWORD PTR [EBP-5]
	DEC DWORD PTR [EBP-5]
	AND EAX,EAX
	JZ L_1432
	MOV EAX,DWORD PTR [EBP-5]
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,195
	SETE AL
	AND AL,AL
	JZ L_1433
	MOV EAX,DWORD PTR [EBP-5]
	MOV ECX,9
	IMUL ECX
	MOV ESI,_pfut
	ADD ESI,EAX
	MOV EAX,ESI
	ADD EAX,1
	PUSH EAX
	PUSH 1
	PUSH 4
	PUSH _run_fh
	CALL _fwrite
L_1433:
	JMP L_1431
L_1432:
L_1430:
	MOV ESI,OFFSET _tag
	MOV EAX,255
	MOV BYTE PTR [ESI], AL
	MOV ESI,OFFSET _tag
	MOV EAX,4
	MOV DWORD PTR [ESI+1], EAX
	PUSH OFFSET _tag
	PUSH 5
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	XOR EAX,EAX
	MOV DWORD PTR [EBP-9], EAX
	LEA EAX,DWORD PTR [EBP-9]
	PUSH EAX
	PUSH 4
	PUSH 1
	PUSH _run_fh
	CALL _fwrite
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _readline:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,8
	MOV EAX,OFFSET _line_buf0
	MOV _line_ptr, EAX
	PUSH EAX
	PUSH 100
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _src_fh
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _fgets
	AND EAX,EAX
	JNZ L_1434
	MOV EAX,_level
	AND EAX,EAX
	JZ L_1435
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _src_fh
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _fclose
	DEC _level
	MOV EAX,_level
	CMP EAX,0
	SETE AL
	AND AL,AL
	JZ L_1436
	CALL _Resolve
	XOR EAX,EAX
	MOV AL,_fSymDump
	AND EAX,EAX
	JZ L_1437
	CALL _DumpLSymbols
	CALL _DumpFRT
L_1437:
	MOV EAX,1
	MOV _iLSymNext, EAX
	MOV EAX,_pLSymBuf
	MOV _pLSymNext, EAX
	XOR EAX,EAX
	MOV _iRefNext, EAX
	MOV EAX,_pRefBuf
	MOV _pRefNext, EAX
	XOR EAX,EAX
	MOV _iMacNext, EAX
	MOV EAX,_pMacBuf
	MOV _pMacNext, EAX
L_1436:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1438
	PUSH _lst_fh
	PUSH OFFSET L_lit+3026
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_1438:
	PUSH _lst_fh
	PUSH OFFSET L_lit+3045
	MOV EAX,_level
	MOV ECX,40
	MUL ECX
	MOV ESI,OFFSET _srcname
	ADD ESI,EAX
	PUSH ESI
	PUSH _level
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
	PUSH _lst_fh
	PUSH OFFSET L_lit+3073
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	AND EAX,EAX
	JZ L_1439
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	DEC DWORD PTR [ESI]
	MOV EAX,DWORD PTR [ESI]
L_1439:
	MOV EAX,1
	MOV _fContinue, AL
	JMP L_1440
L_1435:
	CALL _Resolve
	XOR EAX,EAX
	MOV AL,_fSymDump
	AND EAX,EAX
	JZ L_1441
	CALL _DumpGSymbols
	CALL _DumpFRT
L_1441:
	MOVSX EAX,_fStart
	AND EAX,EAX
	JNZ L_1442
	PUSH 12
	CALL _line_error
L_1442:
	MOV EAX,_error_count
	AND EAX,EAX
	JNZ L_1443
	CALL _ResolveExt
L_1443:
	PUSH OFFSET L_lit+3076
	PUSH _error_count
	PUSH _warn_count
	MOV EDI, 8
	CALL _printf
	ADD ESP,12
	XOR EAX,EAX
	MOV AL,_fListA
	XOR ECX,ECX
	MOV CL,_fListE
	OR EAX,ECX
	JZ L_1444
	PUSH _lst_fh
	PUSH OFFSET L_lit+3101
	PUSH _error_count
	PUSH _warn_count
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
L_1444:
	MOV EAX,_error_count
	AND EAX,EAX
	JNZ L_1445
	PUSH OFFSET L_lit+3126
	MOV EDI, 0
	CALL _printf
	ADD ESP,4
	CALL _BuildRunFile
	PUSH OFFSET L_lit+3149
	MOV EDI, 0
	CALL _printf
	ADD ESP,4
L_1445:
	PUSH _lst_fh
	CALL _fclose
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _src_fh
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	CALL _fclose
	PUSH 1
	CALL _exit
L_1440:
L_1434:
	MOV ESI,OFFSET _list_buf
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1446
	MOV EAX,_line_ptr
	MOV DWORD PTR [EBP-8], EAX
	XOR EAX,EAX
	MOV DWORD PTR [EBP-4], EAX
L_1447:
	MOV ESI,DWORD PTR [EBP-8]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	PUSH EAX
	CALL _isspace
	AND EAX,EAX
	JZ L_1448
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,DWORD PTR [ESI]
	JMP L_1447
L_1448:
L_1449:
	MOV ESI,DWORD PTR [EBP-8]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	AND EAX,EAX
	JZ L_1451
	MOV ESI,DWORD PTR [EBP-8]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,59
	SETNE AL
	AND AL,AL
	JZ L_1452
	MOV ESI,DWORD PTR [EBP-8]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,10
	SETNE AL
	AND AL,AL
L_1452:
L_1451:
	JZ L_1450
	MOV EAX,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	MOV ESI,OFFSET _list_buf
	ADD ESI,EAX
	MOV EBX,ESI
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	MOV BYTE PTR [EBX], AL
	JMP L_1449
L_1450:
L_1453:
	MOV EAX,DWORD PTR [EBP-4]
	AND EAX,EAX
	JZ L_1455
	MOV EAX,DWORD PTR [EBP-4]
	SUB EAX,1
	MOV ESI,OFFSET _list_buf
	ADD ESI,EAX
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,32
	SETE AL
	AND AL,AL
L_1455:
	JZ L_1454
	DEC DWORD PTR [EBP-4]
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_1453
L_1454:
	MOV EAX,DWORD PTR [EBP-4]
	MOV ESI,OFFSET _list_buf
	ADD ESI,EAX
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	MOV EAX,DWORD PTR [EBP-4]
	AND EAX,EAX
	JZ L_1456
	MOV EAX,1
	MOV _fLineIn, AL
	JMP L_1457
L_1456:
	XOR EAX,EAX
	MOV _fLineIn, AL
L_1457:
L_1446:
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	INC DWORD PTR [ESI]
	MOV EAX,1
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _Dispatch:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,88
L_1459:
	MOV EAX,1
	AND EAX,EAX
	JZ L_1460
	CALL _readline
	XOR EAX,EAX
	MOV AL,_fContinue
	AND EAX,EAX
	JZ L_1461
	XOR EAX,EAX
	MOV _fContinue, AL
	JMP L_1459
L_1461:
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	CMP EAX,1
	SETE AL
	AND AL,AL
	JZ L_1462
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1463
	PUSH _lst_fh
	PUSH OFFSET L_lit+3158
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_1463:
	PUSH _lst_fh
	PUSH OFFSET L_lit+3177
	MOV EAX,_level
	MOV ECX,40
	MUL ECX
	MOV ESI,OFFSET _srcname
	ADD ESI,EAX
	PUSH ESI
	PUSH _level
	MOV EDI, 8
	CALL _fprintf
	ADD ESP,16
L_1462:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1464
	PUSH _lst_fh
	PUSH OFFSET L_lit+3205
	MOV EAX,_level
	SHL EAX,2
	MOV ESI,OFFSET _lineno
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	MOV _Column, AL
L_1464:
	XOR EAX,EAX
	MOV _fPublic, AL
	XOR EAX,EAX
	MOV _fExtern, AL
	XOR EAX,EAX
	MOV _fFarLabel, AL
	CALL _Parse
	MOV DWORD PTR [EBP-4], EAX
	MOVSX EAX,_fMoreStorage
	AND EAX,EAX
	JZ L_1465
	CALL _Storage
	JMP L_1466
L_1465:
	MOV EAX,DWORD PTR [EBP-4]
	JMP L_1468
L_1469:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1470
	PUSH _lst_fh
	PUSH OFFSET L_lit+3211
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1470:
	CALL _Instruction
	JMP L_1467
L_1471:
	PUSH 63
	CALL _line_error
	JMP L_1467
L_1472:
	PUSH 64
	CALL _line_error
	JMP L_1467
L_1473:
	PUSH 65
	CALL _line_error
	JMP L_1467
L_1474:
L_1475:
	PUSH 66
	CALL _line_error
	JMP L_1467
L_1476:
	MOV EAX,1
	MOV _fPublic, AL
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1477
	PUSH _lst_fh
	PUSH OFFSET L_lit+3218
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1477:
	CALL _Parse
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,DWORD PTR [EBP-8]
	CMP EAX,3
	SETE AL
	AND AL,AL
	JZ L_1478
	CALL _MakePublic
	JMP L_1479
L_1478:
	MOV EAX,DWORD PTR [EBP-8]
	CMP EAX,8
	SETE AL
	AND AL,AL
	JZ L_1480
	CALL _NewSymbol
	JMP L_1481
L_1480:
	PUSH 67
	CALL _line_error
L_1481:
L_1479:
	JMP L_1467
L_1482:
	MOV EAX,1
	MOV _fExtern, AL
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1483
	PUSH _lst_fh
	PUSH OFFSET L_lit+3225
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1483:
	CALL _Parse
	MOV DWORD PTR [EBP-8], EAX
	MOV EAX,DWORD PTR [EBP-8]
	CMP EAX,3
	SETE AL
	AND AL,AL
	JZ L_1484
	CALL _CheckExtern
	JMP L_1485
L_1484:
	MOV EAX,DWORD PTR [EBP-8]
	CMP EAX,8
	SETE AL
	AND AL,AL
	JZ L_1486
	CALL _NewSymbol
	JMP L_1487
L_1486:
	PUSH 67
	CALL _line_error
L_1487:
L_1485:
	JMP L_1467
L_1488:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1489
	PUSH _lst_fh
	PUSH OFFSET L_lit+3232
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1489:
	MOV EAX,_level
	AND EAX,EAX
	JZ L_1490
	CALL _NewLSymbol
	JMP L_1491
L_1490:
	CALL _NewSymbol
L_1491:
	JMP L_1467
L_1492:
	CALL _Command
	JMP L_1467
L_1493:
L_1494:
L_1495:
L_1496:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1497
	PUSH _lst_fh
	PUSH OFFSET L_lit+3239
	MOV ESI,_pNextAddr
	PUSH DWORD PTR [ESI]
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
L_1497:
	CALL _Storage
	JMP L_1467
L_1498:
	JMP L_1467
L_1499:
	PUSH 68
	CALL _line_error
	JMP L_1467
L_1468:
	CMP EAX,0
	JE L_1498
	CMP EAX,100
	JE L_1496
	CMP EAX,102
	JE L_1495
	CMP EAX,99
	JE L_1494
	CMP EAX,98
	JE L_1493
	CMP EAX,46
	JE L_1492
	CMP EAX,8
	JE L_1488
	CMP EAX,106
	JE L_1482
	CMP EAX,115
	JE L_1476
	CMP EAX,6
	JE L_1475
	CMP EAX,5
	JE L_1474
	CMP EAX,4
	JE L_1473
	CMP EAX,3
	JE L_1472
	CMP EAX,2
	JE L_1471
	CMP EAX,1
	JE L_1469
	JMP L_1499
L_1467:
L_1466:
	MOVSX EAX,_fLineIn
	AND EAX,EAX
	JZ L_1500
	XOR EAX,EAX
	MOV AL,_fListA
L_1500:
	AND EAX,EAX
	JZ L_1501
L_1502:
	XOR EAX,EAX
	MOV AL,_Column
	CMP EAX,53
	SETB AL
	AND AL,AL
	JZ L_1503
	PUSH _lst_fh
	PUSH OFFSET L_lit+3246
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
	XOR ECX,ECX
	MOV CL,_Column
	ADD EAX,ECX
	MOV _Column, AL
	JMP L_1502
L_1503:
	PUSH _lst_fh
	PUSH OFFSET L_lit+3248
	PUSH OFFSET _list_buf
	MOV EDI, 4
	CALL _fprintf
	ADD ESP,12
L_1501:
	XOR EAX,EAX
	MOV AL,_Column
	AND EAX,EAX
	JZ L_1504
	PUSH _lst_fh
	PUSH OFFSET L_lit+3251
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_1504:
	JMP L_1459
L_1460:
	MOV ESP,EBP
	POP EBP
	RETN
PUBLIC _main:
	PUSH EBP
	MOV EBP,ESP
	SUB ESP,24
	MOV EAX,2
	MOV _lst_fh, EAX
	MOV EAX,1
	MOV DWORD PTR [EBP-12], EAX
L_1505:
	MOV EAX,DWORD PTR [EBP-12]
	CMP EAX,DWORD PTR [EBP+12]
	SETL AL
	AND AL,AL
	JZ L_1506
	JMP SHORT L_1507
L_1508:
	INC DWORD PTR [EBP-12]
	MOV EAX,DWORD PTR [EBP-12]
	JMP SHORT L_1505
L_1507:
	MOV EAX,DWORD PTR [EBP-12]
	SHL EAX,2
	MOV ESI,DWORD PTR [EBP+8]
	ADD ESI,EAX
	MOV EAX,DWORD PTR [ESI]
	MOV DWORD PTR [EBP-4], EAX
	MOV ESI,DWORD PTR [EBP-4]
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,47
	SETE AL
	AND AL,AL
	JZ L_1509
	MOV ESI,DWORD PTR [EBP-4]
	INC DWORD PTR [EBP-4]
	MOV EAX,DWORD PTR [ESI]
	MOV ESI,DWORD PTR [EBP-4]
	MOVSX EAX,BYTE PTR [ESI]
	JMP L_1511
L_1512:
L_1513:
	MOV EAX,1
	MOV _fListA, AL
	JMP L_1510
L_1514:
L_1515:
	MOV EAX,1
	MOV _fSymDump, AL
	JMP L_1510
L_1516:
L_1517:
	MOV EAX,1
	MOV _fListE, AL
	JMP L_1510
L_1518:
L_1519:
	MOV EAX,2
	MOV _filetype, AL
	JMP L_1510
L_1520:
L_1521:
	MOV EAX,3
	MOV _filetype, AL
	JMP L_1510
L_1522:
	PUSH OFFSET L_lit+3254
	CALL _fatal_error
	JMP L_1510
L_1511:
	CMP EAX,118
	JE L_1521
	CMP EAX,86
	JE L_1520
	CMP EAX,100
	JE L_1519
	CMP EAX,68
	JE L_1518
	CMP EAX,101
	JE L_1517
	CMP EAX,69
	JE L_1516
	CMP EAX,115
	JE L_1515
	CMP EAX,83
	JE L_1514
	CMP EAX,108
	JE L_1513
	CMP EAX,76
	JE L_1512
	JMP L_1522
L_1510:
	JMP L_1523
L_1509:
	MOV ESI,OFFSET _src_fh
	MOV EAX,DWORD PTR [ESI]
	AND EAX,EAX
	JNZ L_1524
	PUSH OFFSET _srcname
	MOV EAX,DWORD PTR [EBP-12]
	SHL EAX,2
	MOV ESI,DWORD PTR [EBP+8]
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	PUSH 39
	CALL _strncpy
	MOV ESI,OFFSET _src_fh
	MOV EBX,ESI
	PUSH EBX
	MOV EAX,DWORD PTR [EBP-12]
	SHL EAX,2
	MOV ESI,DWORD PTR [EBP+8]
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	PUSH OFFSET L_lit+3270
	CALL _fopen
	POP EDX
	MOV DWORD PTR [EDX], EAX
	JMP L_1525
L_1524:
	MOV EAX,_run_fh
	AND EAX,EAX
	JNZ L_1526
	PUSH OFFSET _runname
	MOV EAX,DWORD PTR [EBP-12]
	SHL EAX,2
	MOV ESI,DWORD PTR [EBP+8]
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	PUSH 39
	CALL _strncpy
	MOV EAX,DWORD PTR [EBP-12]
	SHL EAX,2
	MOV ESI,DWORD PTR [EBP+8]
	ADD ESI,EAX
	PUSH DWORD PTR [ESI]
	PUSH OFFSET L_lit+3272
	CALL _fopen
	MOV _run_fh, EAX
	AND EAX,EAX
	JNZ L_1527
	PUSH OFFSET L_lit+3275
	CALL _fatal_error
L_1527:
	JMP L_1528
L_1526:
	PUSH OFFSET L_lit+3296
	CALL _fatal_error
L_1528:
L_1525:
L_1523:
	JMP L_1508
L_1506:
	MOV ESI,OFFSET _src_fh
	MOV EAX,DWORD PTR [ESI]
	AND EAX,EAX
	JNZ L_1529
	PUSH OFFSET L_lit+3314
	MOV EDI, 0
	CALL _printf
	ADD ESP,4
	PUSH OFFSET L_lit+3353
	MOV EDI, 0
	CALL _printf
	ADD ESP,4
	PUSH OFFSET L_lit+3389
	MOV EDI, 0
	CALL _printf
	ADD ESP,4
	PUSH OFFSET L_lit+3441
	MOV EDI, 0
	CALL _printf
	ADD ESP,4
	PUSH OFFSET L_lit+3483
	MOV EDI, 0
	CALL _printf
	ADD ESP,4
	PUSH OFFSET L_lit+3522
	MOV EDI, 0
	CALL _printf
	ADD ESP,4
	PUSH OFFSET L_lit+3554
	CALL _fatal_error
L_1529:
	MOV EAX,_run_fh
	AND EAX,EAX
	JNZ L_1530
	PUSH OFFSET _runname
	PUSH OFFSET _srcname
	PUSH 40
	CALL _strncpy
	MOV EAX,OFFSET _runname
	MOV DWORD PTR [EBP-8], EAX
L_1531:
	MOV ESI,DWORD PTR [EBP-8]
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,46
	SETNE AL
	AND AL,AL
	JZ L_1533
	MOV ESI,DWORD PTR [EBP-8]
	MOVSX EAX,BYTE PTR [ESI]
	XOR ECX,ECX
	CMP EAX,ECX
	SETNE AL
	AND AL,AL
L_1533:
	JZ L_1532
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,DWORD PTR [ESI]
	JMP L_1531
L_1532:
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,46
	MOV BYTE PTR [ESI], AL
	XOR EAX,EAX
	MOV AL,_filetype
	CMP EAX,2
	SETE AL
	AND AL,AL
	JZ L_1534
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,68
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,76
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,76
	MOV BYTE PTR [ESI], AL
	JMP L_1535
L_1534:
	XOR EAX,EAX
	MOV AL,_filetype
	CMP EAX,3
	SETE AL
	AND AL,AL
	JZ L_1536
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,68
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,68
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,82
	MOV BYTE PTR [ESI], AL
	JMP L_1537
L_1536:
	MOV EAX,1
	MOV _filetype, AL
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,82
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,85
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,78
	MOV BYTE PTR [ESI], AL
L_1537:
L_1535:
	MOV ESI,DWORD PTR [EBP-8]
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	PUSH OFFSET _runname
	PUSH OFFSET L_lit+3580
	CALL _fopen
	MOV _run_fh, EAX
	AND EAX,EAX
	JNZ L_1538
	PUSH OFFSET L_lit+3583
	CALL _fatal_error
L_1538:
L_1530:
	XOR EAX,EAX
	MOV AL,_fListA
	XOR ECX,ECX
	MOV CL,_fListE
	OR EAX,ECX
	JZ L_1539
	PUSH OFFSET _lstname
	PUSH OFFSET _srcname
	PUSH 40
	CALL _strncpy
	MOV EAX,OFFSET _lstname
	MOV DWORD PTR [EBP-8], EAX
L_1540:
	MOV ESI,DWORD PTR [EBP-8]
	MOVSX EAX,BYTE PTR [ESI]
	CMP EAX,46
	SETNE AL
	AND AL,AL
	JZ L_1542
	MOV ESI,DWORD PTR [EBP-8]
	MOVSX EAX,BYTE PTR [ESI]
	XOR ECX,ECX
	CMP EAX,ECX
	SETNE AL
	AND AL,AL
L_1542:
	JZ L_1541
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,DWORD PTR [ESI]
	JMP L_1540
L_1541:
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,46
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,76
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,73
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-8]
	INC DWORD PTR [EBP-8]
	MOV EAX,83
	MOV BYTE PTR [ESI], AL
	MOV ESI,DWORD PTR [EBP-8]
	XOR EAX,EAX
	MOV BYTE PTR [ESI], AL
	PUSH OFFSET _lstname
	PUSH OFFSET L_lit+3607
	CALL _fopen
	MOV _lst_fh, EAX
	AND EAX,EAX
	JNZ L_1543
	PUSH OFFSET L_lit+3609
	CALL _fatal_error
L_1543:
	JMP L_1544
L_1539:
	MOV EAX,2
	MOV _lst_fh, EAX
L_1544:
	PUSH OFFSET L_lit+3644
	MOV EDI, 0
	CALL _printf
	ADD ESP,4
	XOR EAX,EAX
	MOV AL,_fListA
	XOR ECX,ECX
	MOV CL,_fListE
	OR EAX,ECX
	JZ L_1545
	PUSH _lst_fh
	PUSH OFFSET L_lit+3699
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_1545:
	XOR EAX,EAX
	MOV AL,_fListA
	AND EAX,EAX
	JZ L_1546
	PUSH _lst_fh
	PUSH OFFSET L_lit+3754
	MOV EDI, 0
	CALL _fprintf
	ADD ESP,8
L_1546:
	PUSH 8
	PUSH OFFSET _pLSymBuf
	CALL FWORD PTR _AllocPage
	MOV DWORD PTR [EBP-24], EAX
	MOV EAX,DWORD PTR [EBP-24]
	AND EAX,EAX
	JZ L_1547
	PUSH OFFSET L_lit+3818
	CALL _fatal_error
L_1547:
	PUSH 4
	PUSH OFFSET _pSymBuf
	CALL FWORD PTR _AllocPage
	MOV DWORD PTR [EBP-24], EAX
	MOV EAX,DWORD PTR [EBP-24]
	AND EAX,EAX
	JZ L_1548
	PUSH OFFSET L_lit+3843
	CALL _fatal_error
L_1548:
	PUSH 1
	PUSH OFFSET _pMacBuf
	CALL FWORD PTR _AllocPage
	MOV DWORD PTR [EBP-24], EAX
	MOV EAX,DWORD PTR [EBP-24]
	AND EAX,EAX
	JZ L_1549
	PUSH OFFSET L_lit+3868
	CALL _fatal_error
L_1549:
	PUSH 4
	PUSH OFFSET _pRefBuf
	CALL FWORD PTR _AllocPage
	MOV DWORD PTR [EBP-24], EAX
	MOV EAX,DWORD PTR [EBP-24]
	AND EAX,EAX
	JZ L_1550
	PUSH OFFSET L_lit+3893
	CALL _fatal_error
L_1550:
	PUSH 8
	PUSH OFFSET _pfrt
	CALL FWORD PTR _AllocPage
	MOV DWORD PTR [EBP-24], EAX
	MOV EAX,DWORD PTR [EBP-24]
	AND EAX,EAX
	JZ L_1551
	PUSH OFFSET L_lit+3918
	CALL _fatal_error
L_1551:
	PUSH 8
	PUSH OFFSET _pfut
	CALL FWORD PTR _AllocPage
	MOV DWORD PTR [EBP-24], EAX
	MOV EAX,DWORD PTR [EBP-24]
	AND EAX,EAX
	JZ L_1552
	PUSH OFFSET L_lit+3943
	CALL _fatal_error
L_1552:
	MOV EAX,_pSymBuf
	MOV _pSymNext, EAX
	MOV EAX,_pLSymBuf
	MOV _pLSymNext, EAX
	MOV EAX,_pMacBuf
	MOV _pMacNext, EAX
	MOV EAX,_pRefBuf
	MOV _pRefNext, EAX
	MOV EAX,OFFSET _oNextData
	MOV _pNextAddr, EAX
	PUSH 125
	PUSH OFFSET _pcsbuf
	CALL FWORD PTR _AllocPage
	MOV DWORD PTR [EBP-24], EAX
	MOV EAX,DWORD PTR [EBP-24]
	AND EAX,EAX
	JZ L_1553
	PUSH OFFSET L_lit+3968
	CALL _fatal_error
L_1553:
	PUSH 125
	PUSH OFFSET _pdsbuf
	CALL FWORD PTR _AllocPage
	MOV DWORD PTR [EBP-24], EAX
	MOV EAX,DWORD PTR [EBP-24]
	AND EAX,EAX
	JZ L_1554
	PUSH OFFSET L_lit+3995
	CALL _fatal_error
L_1554:
	XOR EAX,EAX
	MOV _ics, EAX
	XOR EAX,EAX
	MOV _ids, EAX
	MOV EAX,1
	MOV DWORD PTR [EBP-12], EAX
L_1555:
	MOV EAX,DWORD PTR [EBP-12]
	CMP EAX,209
	SETL AL
	AND AL,AL
	JZ L_1556
	JMP SHORT L_1557
L_1558:
	MOV EAX,DWORD PTR [EBP-12]
	INC DWORD PTR [EBP-12]
	JMP SHORT L_1555
L_1557:
	MOV EAX,1
	MOV DWORD PTR [EBP-16], EAX
L_1559:
	MOV EAX,DWORD PTR [EBP-16]
	CMP EAX,338
	SETL AL
	AND AL,AL
	JZ L_1560
	JMP SHORT L_1561
L_1562:
	MOV EAX,DWORD PTR [EBP-16]
	INC DWORD PTR [EBP-16]
	JMP SHORT L_1559
L_1561:
	MOV EAX,DWORD PTR [EBP-16]
	SHL EAX,3
	ADD EAX,0
	MOV ESI,OFFSET _rgINS
	ADD ESI,EAX
	XOR EAX,EAX
	MOV AL,BYTE PTR [ESI]
	CMP EAX,DWORD PTR [EBP-12]
	SETE AL
	AND AL,AL
	JZ L_1563
	MOV EAX,DWORD PTR [EBP-12]
	SHL EAX,2
	MOV ESI,OFFSET _rgInsLookUp
	ADD ESI,EAX
	MOV EAX,DWORD PTR [EBP-16]
	MOV DWORD PTR [ESI], EAX
	JMP L_1560
L_1563:
	JMP L_1562
L_1560:
	JMP L_1558
L_1556:
	CALL _Dispatch
	XOR EAX,EAX
	PUSH EAX
	CALL _exit
	MOV ESP,EBP
	POP EBP
	RETN 8
