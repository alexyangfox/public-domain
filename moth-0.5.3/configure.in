#
# Process this file with autoconf to produce a configure script.
#



AC_INIT(moth,0.5.3a,[drew@folta.net])
AC_CONFIG_SRCDIR(moth.c)
AC_CONFIG_HEADER(config.h)

AC_DEFINE(_GNU_SOURCE)
AC_LANG_C



#
# Define utility functions/macros.
#

dnl
dnl EXPAND_PATH(path, variable)
dnl
dnl expands path to an absolute path and assigns it to a variable
dnl
AC_DEFUN([EXPAND_PATH],[
  if test -z "$1" || echo "$1" | grep '^/' >/dev/null ; then
    $2=$1
  else
    changequote({,})
    ep_dir="`echo $1|sed 's%/*[^/][^/]*/*$%%'`"
    changequote([,])
    ep_realdir="`(cd \"$ep_dir\" && pwd)`"
    $2="$ep_realdir/`basename \"$1\"`"
  fi
])



#
# Checks for programs.
#

AC_PROG_CC



#
# Checks for standard libraries.
#

AC_CHECK_LIB([m], [ceil])



#
# Checks for header files.
#

AC_HEADER_STDC
AC_CHECK_HEADERS([errno.h locale.h stdlib.h string.h sys/time.h unistd.h])



#
# Checks for typedefs, structures, and compiler characteristics.
#

AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM



#
# Checks for library functions.
#

AC_FUNC_MALLOC
AC_FUNC_MKTIME
AC_CHECK_FUNCS([bzero floor ceil gettimeofday modf pow rint setlocale sqrt])
AC_CHECK_FUNCS([strcasecmp strchr strdup strerror strrchr strstr localtime])



#
# Checks for external libraries.
# (Some are required, some are optional.)
#

# required for reading XML
AC_CHECK_HEADERS([expat.h],,AC_MSG_ERROR(missing required header expat.h))
AC_CHECK_LIB([expat],[XML_ParserCreate],,AC_MSG_ERROR(missing required library libexpat.a/so))


# required for drawing images
AC_MSG_CHECKING(for libart2 support)
AC_ARG_WITH(libart2,
[ --with-libart2[=FILE] location of libart2-config program; defaults to "libart2-config".], [
  if test "$withval" = "yes"; then
    ART=libart2-config
  else
    EXPAND_PATH($withval, ART)
  fi
  $ART --cflags >/dev/null 2>&1
  if test "$?" != "0" ; then
    AC_MSG_RESULT([libart2-config can't be run])
    AC_MSG_RESULT([The output of $ART follows:])
    $ART --cflags
    AC_MSG_ERROR([Aborting])
  fi
  ART_CFLAGS=`$ART --cflags`
  ART_LIBS=`$ART --libs`
  AC_MSG_RESULT(yes)
], [
  ART=libart2-config
  $ART --cflags >/dev/null 2>&1
  if test "$?" != "0" ; then
    AC_MSG_RESULT(no)
    ART_CFLAGS=""
    ART_LIBS=""
  else
    AC_MSG_RESULT(yes)
    ART_CFLAGS=`$ART --cflags`
    ART_LIBS=`$ART --libs`
  fi
])
AC_SUBST(ART_CFLAGS)
AC_SUBST(ART_LIBS)
SAVE_CFLAGS="$CFLAGS"
SAVE_CPPFLAGS="$CPPFLAGS"
CFLAGS="$CFLAGS $ART_CFLAGS"
CPPFLAGS="$CPPFLAGS $ART_CFLAGS"
AC_CHECK_HEADERS([libart_lgpl/libart.h],,AC_MSG_ERROR(missing required header libart_lgpl/libart.h))
CFLAGS="$SAVE_CFLAGS"
CPPFLAGS="$SAVE_CPPFLAGS"
AC_CHECK_LIB([art_lgpl_2],[art_die],,AC_MSG_ERROR(missing required library libart_lgpl_2.a/so),[$ART_LIBS])



# required for drawing text
AC_MSG_CHECKING(for freetype2 support)
AC_ARG_WITH(freetype,
[ --with-freetype[=FILE] location of freetype-config program; defaults to "freetype-config".],[
  if test "$withval" = "yes"; then
    FT=freetype-config
  else
    EXPAND_PATH($withval, FT)
  fi
  $FT --cflags >/dev/null 2>&1
  if test "$?" != "0" ; then
    AC_MSG_RESULT([freetype-config can't be run])
    AC_MSG_RESULT([The output of $FT follows:])
    $FT --cflags
    AC_MSG_ERROR([Aborting])
  fi
  FT_CFLAGS=`$FT --cflags`
  FT_LIBS=`$FT --libs`
  AC_MSG_RESULT(yes)
], [
  FT=freetype-config
  $FT --cflags >/dev/null 2>&1
  if test "$?" != "0" ; then
    AC_MSG_RESULT(no)
    FT_CFLAGS=""
    FT_LIBS=""
  else
    AC_MSG_RESULT(yes)
    FT_CFLAGS=`$FT --cflags`
    FT_LIBS=`$FT --libs`
  fi
])
AC_SUBST(FT_CFLAGS)
AC_SUBST(FT_LIBS)
SAVE_CFLAGS="$CFLAGS"
SAVE_CPPFLAGS="$CPPFLAGS"
CFLAGS="$CFLAGS $FT_CFLAGS"
CPPFLAGS="$CPPFLAGS $FT_CFLAGS"
AC_CHECK_HEADERS([ft2build.h],,AC_MSG_ERROR(missing required header ft2build.h))
CFLAGS="$SAVE_CFLAGS"
CPPFLAGS="$SAVE_CPPFLAGS"
AC_CHECK_LIB([freetype],[FT_Init_FreeType],,AC_MSG_ERROR(missing required library libfreetype.a/so),[$FT_LIBS])



# optional for reading rrd files
AC_MSG_CHECKING(for RRD support)
AC_ARG_WITH(rrd,
[ --with-rrd[=DIRECTORY] location of rrd program; we expect /include and /lib subdirectories],[
  if test "$withval" = "yes"; then
    for dir in /usr/local /usr ; do
      if test -d $dir && test -f $dir/include/rrd.h && test -f $dir/lib/librrd.so; then
        rrd_dir=$dir
        break
      fi
    done
  else
    EXPAND_PATH($withval, rrd_dir)
  fi
  RRD_CFLAGS="-I$rrd_dir/include"
  #
  # statically link the specified library, since it's not guaranteed to be in
  # the ld.so path
  #
  LIBS="$LIBS $rrd_dir/lib/librrd.a"
  AC_DEFINE(HAVE_LIBRRD)
  AC_MSG_RESULT(using overrides)
],[
  RRD_CFLAGS=""
  AC_MSG_RESULT(using default paths)
  AC_CHECK_LIB([rrd],[rrd_fetch])
])
AC_SUBST(RRD_CFLAGS)
SAVE_CFLAGS="$CFLAGS"
SAVE_CPPFLAGS="$CPPFLAGS"
CFLAGS="$CFLAGS $RRD_CFLAGS"
CPPFLAGS="$CPPFLAGS $RRD_CFLAGS"
AC_CHECK_HEADERS([rrd.h])
CFLAGS="$SAVE_CFLAGS"
CPPFLAGS="$SAVE_CPPFLAGS"



# optional for writing jpeg images
AC_CHECK_HEADERS([jpeglib.h])
AC_CHECK_LIB([jpeg],[jpeg_CreateCompress])



# optional for writing png images
AC_CHECK_HEADERS([png.h])
AC_CHECK_LIB([png],[png_create_write_struct])



# optional for reading from MySQL databases
AC_MSG_CHECKING(for mysql support)
AC_ARG_WITH(mysql,
[ --with-mysql[=FILE] location of mysql_config program; defaults to "mysql_config".],[
  if test "$withval" = "yes"; then
    MYSQL=mysql_config
  else
    EXPAND_PATH($withval, MYSQL)
  fi
  $MYSQL --cflags >/dev/null 2>&1
  if test "$?" != "0" ; then
    AC_MSG_RESULT([mysql can't be run])
    AC_MSG_RESULT([The output of $MYSQL follows:])
    $MYSQL --cflags
    AC_MSG_ERROR([Aborting])
  fi
  # Strip single-quotes around directories, since they prevent configure from
  # finding them.
  MYSQL_CFLAGS=`$MYSQL --cflags | sed "s/'//g"`
  MYSQL_LIBS=`$MYSQL --libs | sed "s/'//g"`
  AC_MSG_RESULT(yes)
], [
  MYSQL=mysql_config
  $MYSQL --cflags >/dev/null 2>&1
  if test "$?" != "0" ; then
    AC_MSG_RESULT(no)
    MYSQL_CFLAGS=""
    MYSQL_LIBS=""
  else
    AC_MSG_RESULT(yes)
    # Strip single-quotes around directories, since they prevent configure from
    # finding them.
    MYSQL_CFLAGS=`$MYSQL --cflags | sed "s/'//g"`
    MYSQL_LIBS=`$MYSQL --libs | sed "s/'//g"`
  fi
])
AC_SUBST(MYSQL_CFLAGS)
AC_SUBST(MYSQL_LIBS)
SAVE_CFLAGS="$CFLAGS"
CFLAGS="$CFLAGS $MYSQL_CFLAGS"
AC_CHECK_HEADERS([mysql/mysql.h])
CFLAGS="$SAVE_CFLAGS"
#
# This must be the last one because it causes other AC_CHECK_LIB tests to fail.
#
AC_CHECK_LIB([mysqlclient],[mysql_init],,,[$MYSQL_LIBS])



#
# Use what we've discovered.
#

AC_CONFIG_FILES([Makefile])
AC_OUTPUT

