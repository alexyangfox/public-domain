	.TITLE	INTHOOK - TSR to provide hooks for breakpoints on INTs

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80386

	.SEG	tsr_s, DATA, 16BIT, MOD=16t
	.MSECT	tsr_m, tsr_s, ADDR=0
	.PSECT	tsr_p, tsr_m, MOD=16t
	.PSECT	tsr_p

	.START	start
	.STACK	stack
	.STK16

;This is the hook for INT 21

int21:	PUSHF
	PUSHW	BX			;Free up a register
	MOVB	BL, AH			;Get INT 21 function
	MOVB	BH, #0
	CMPW	BX, #7Fh.B		;Valid?
	JA	i21fin			;No - just do it
	ADDW	BX, BX			;Yes - dispatch through our table
	JMPIW	CS:i21tbl[BX]

$$$=!0
i21tbl:	.REPT	80h
	.IRP	qq, >$$$
	.WORD	i21f'qq
$$$=!$$$+1
	.ENDR
	.ENDR

$$$=!0
	.REPT	80h
	.IRP	qq, >$$$
	.BYTE	$$$
i21f'qq:JMP	i21fin
$$$=!$$$+1
	.ENDR
	.ENDR

i21fin:	POPW	BX
	POPF
i21jmp:	JMPF	0:0

restop:
.PAGE
start:	PUSHW	#!tsr_p
	POPW	DS
	PUSHW	#0.B
	POPW	FS
	MOVL	EAX, FS:84h		;Get INT 21 vector
	MOVL	CS:i21jmp+1, EAX	;Store it here
	MOVW	FS:84h, #int21		;Put our address in the vector
	MOVW	FS:86h, CS
	MOVW	DX, #!tsr_p		;Calculate number of paragraphs to
	MOVW	AX, ES			;  keeep
	SUBW	DX, AX
	MOVW	AX, #restop+0FH
	SHRW	AX, #4t
	ADDW	DX, AX
	MOVW	AX, #3100h
	INT	21h

	.BLKB	256t
stack:	.WORD	0
