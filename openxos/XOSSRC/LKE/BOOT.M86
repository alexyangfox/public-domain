	.TITLE	BOOTBLOCK

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80486
	.INCLUD	XOSINC:\XMAC\XOS.PAR

	.SEG	code_a, CODE, 16BIT
	.MSECT	code_m, code_a, ADDR=0
	.PSECT	code_p, code_m
	.SEG	data_a, DATA, 16BIT
	.MSECT	data_m, data_a, ADDR=0
	.PSECT	data_p, data_m

	.SBTTL	Start of program

	.STK16
	.STACK	stack

	.PSECT	data_p
	.BLKW	200t
stack:	.WORD	0


	.PSECT	code_p
	.START	begin



	JMP	begin.S
	NOP

oemname:.BLKB	8t	;OEM name and version
secsize:.WORD	0	;Sector size in bytes
secpcls:.BYTE	0	;Sectors per cluster
ressec:	.WORD	0	;Total number of reserved sectors
numfats:.BYTE	0	;Number of FATs
rdirent:.WORD	0	;Number of root directory entries
sectors:.WORD	0	;Total number of sectors on disk (16 bit value)
media:	.BYTE	0	;Media description byte
secpfat:.WORD	0	;Number of sectors per FAT table
secptrk:.WORD	0	;Number of sectors per track
heads:	.WORD	0	;Number of heads
hidsec:	.WORD	0	;Number of hidden sectors
	.BLKB	2	;Reserved
ttlsec:	.LONG	0	;Total number of sectors on disk (32 bit value)
drvnum:	.BYTE	0	;Physical drive number
	.BLKB	1	;Reserved
ebbsig:	.BYTE	29h	;Extended boot block signature (always = 29)
volid:	.LONG	0	;Volume ID
label:	.BLKB	11t	;Volume label
	.BLKB	8t	;Reserved

begin:	CLI
	CLRW	AX
	MOVW	SS, AX
	MOVW	SP, #7C00h
	PUSHW	SS
	PUSHW	ES
	MOVW	BX, #78h
	LDSW	SI, SS:[BX]
	PUSHW	DS
	PUSHW	SI
	PUSHW	SS
	PUSHW	BX
	MOVW	DI, #7C3Eh
	MOVW	CX, #0Bh
	CLD
	RMOVSB	[DI], [SI]
	PUSHW	ES
	POPW	DS
	MOVB	-2.B[DI], #0Fh
	MOVW	CX, 7C18h
	MOVB	-7.B[DI], CL
	MOVW	2.B[BX], AX
	MOVW	[BX], #7C3E
	STI
	INT	13h
	JC	error.S
	CLRW	AX
	CMPW	sectors, AX		;Have a 16-bit number of sectors value?
	JE	84$.S			;No
	MOVW	CX, sectors		;Yes - use it
	MOVW	ttlsec, CX
84$:	MOVB	AL, numfats		;Get number of FATs
	MULW	secpfat			;Times size of each FAT
	ADDW	AX, hidsec+0		;Plus number of hidden sectors
	ADCW	DX, hidsec+2
	ADDW	AX, ressec		;Plus number of reserved sectors
	ADCW	DX, #0.B
	MOVW	7C50, AX
	MOVW	7C52, DX
	MOVW	7C49, AX
	MOVW	7C4B, DX
	MOVW	AX, #16t		;Get size of the root directory
	MULW	rdirent
	MOVW	BX, 7C0B
	ADDW	AX, BX
	DECW	AX
	DIVW	BX
	ADDW	7C49, AX
	ADCW	7C4B, #0.B
	MOVW	BX, #500h
	MOVW	DX, 7C52
	MOVW	AX, 7C50
	CALL	160$
	JC	error.S
	MOVB	AL, #1
	CALL	readdsk			;Read first block of the root directory
	JC	error.S
	MOVW	DI, BX			;Point to first entry
	MOVW	CX, #0Bh
	MOVW	SI, #7DE6h		;Is it IO.SYS?
	RECMPSB	[DI], [SI]
	JNE	error.S			;No - fail!
	LEAW	DI, 20.B[BX]		;Point to second entry
	MOVW	CX, #0Bh
	RECMPSB	[DI], [SI]		;Is it MSDOS.SYS?
	JE	havedos.S		;Yes - go on
error:	MOVW	SI, #errmsg		;No - fail
	CALL	msgout			;Display message
	CLRW	AX
	INT	16h			;Wait for keyboard input
	POPW	SI
	POPW	DS
	POPW	[SI]
	POPW	2.B[SI]
	INT	19h			;Reboot!

errp3:	POPW	AX
	POPW	AX
	POPW	AX
	JMP	error.S

;Here if we have DOS on the disk

havedos:MOVW	AX, 1Ah.B[BX]
	DECW	AX
	DECW	AX
	MOVB	BL, secpcls
	CLRB	BH
	MULW	BX
	ADDW	AX, 7C49
	ADCW	DX, 7C4B
	MOVW	BX, #700h
	MOVW	CX, #3
120$:	PUSHW	AX
	PUSHW	DX
	PUSHW	CX
	CALL	160$
	JC	errp3.S
	MOVB	AL, #1
	CALL	readdsk
	POPW	CX
	POPW	DX
	POPW	AX
	JC	error.S
	ADDW	AX, #1.B
	ADCW	DX, #0.B
	ADDW	BX, 7C0Bh
	LOOP	CX, 120$
	MOVB	CH, 7C15
	MOVB	DL, 7C24
	MOVW	BX, 7C49
	MOVW	AX, 7C4B
	JMPF	70:0

;Subroutine to display error message to terminal

msgout:	LODSB	[SI]
	TESTB	AL, AL
	JE	180$.S
	MOVB	AH, #0E
	MOVW	BX, #7
	INT	10h
	JMP	msgout.S

160$:	CMPW	DX, secptrk
	JNC	retcs.S
	DIVW	secptrk
	INCB	DL
	MOVB	7C4F, DL
	CLRW	DX
	DIVW	heads
	MOVB	7C25, DL
	MOVW	7C4D, AX
	CLC
	RET

retcs:	STC
180$:	RET

;Subroutine to read from the disk

readdsk:MOVB	AH, #2
	MOVW	DX, 7C4D
	MOVB	CL, #6
	SHLB	DH, CL
	ORB	DH, 7C4F
	MOVW	CX, DX
	XCHGB	CH, CL
	MOVB	DL, drvnum
	MOVB	DH, 7C25
	INT	13
	RET

errmsg:	.ASCII	{0D,0A}
	.ASCII	"Non-System disk or disk error"{0D,0A}
	.ASCIZ	"Replace and press any key when ready"{0D,0A}

ioname:	.ASCII	"IO      SYS"
dosname:.ASCII	"MSDOS   SYS"
	.BYTE	0, 0, 55, 0AA
