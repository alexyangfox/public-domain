	.TITLE	getreqpid - Function to process requestor PID argument for symbiont
	.SBTTL	Run-time library for XC for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\CTYPE.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_TEXT_p

;Subroutine to process requestor PID argument for symbiont
;	char *args;		/* Offset of base of argument msect */
;	long *reqpid;		/* Offset of long to receive requestor PID */
;	(char *)pntr = getreqpid(args, reqpid);
;  Value returned is offset of character after PID value in the command tail
;    if normal or 0 if error

	.ENTRY	getreqpid
getreqpid:
	PUSHL	ESI
	MOVL	ESI, 8.B[ESP]		;Get offset of argument msect
	ADDL	ESI, arg_cmdofs.B[ESI]	;Get offset of argument string
	CLRL	EAX
2$:	LODSB	[ESI]			;Find first non-whitespace character
	TESTB	_chrtbl#[EAX], #CT$SPACE
	JNE	2$.S
	CMPB	AL, #0
	JE	14$.S
4$:	LODSB	[ESI]			;Now find first whitespace character
	CMPB	AL, #0			;  (this skips the program name)
	JE	14$.S
	TESTB	_chrtbl#[EAX], #CT$SPACE
	JE	4$.S
6$:	LODSB	[ESI]			 ;Find first non-whitespace character
	TESTB	_chrtbl#[EAX], #CT$SPACE ;  (this gets us to the start of the
	JNE	6$.S			 ;  process ID argument)
	CLRL	EDX
8$:	TESTB	_chrtbl#[EAX], #CT$HEXDG|CT$DIGIT ;Is this a hex digit?
	JE	12$.S			;No
	CMPB	AL, #'A'
	JB	10$.S
	ADDB	AL, #9
10$:	ANDB	AL, #0F
	SHLL	EDX, #4t
	ORL	EDX, EAX
	LODSB	[ESI]
	JMP	8$.S

;Here with character which is not a hex digit

12$:	TESTB	_chrtbl#[EAX], #CT$SPACE ;Is this character a whitespace?
	JNE	18$.S			;Yes - go on
	CMPB	AL, #0			;No - end of command?
	JE	16$.S			;Yes
14$:	CLRL	EAX			;No - return 0 to indicate error
	POPL	ESI
	RET

;Here with valid PID value

18$:	DECL	ESI
16$:	MOVL	EAX, 12t.B[ESP]		;Get offset of long for value
	MOVL	[EAX], EDX		;Store value
	MOVL	EAX, ESI		;Get argument offset to return
	POPL	ESI
	RET

	.END
