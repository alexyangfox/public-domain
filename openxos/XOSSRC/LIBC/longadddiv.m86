	.TITLE	longadddiv - Function to multiply, add, and divide
	.SBTTL	Run-time library for XC for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_TEXT_p

	.SBTTL	longadddiv - Function to multiply, add, and divide

;Function to multiply (32-bits X 32-bits giving 64-bits), add (32-bits to
;  64-bits), then divide (64-bits / 32-bits giving 32-bits with 32 bit
;  remainder)
;	void longdiv(
;	    long *result,	// Pointer to 2 element array for result
;	    long  num1,		// (num1 * num2 + num3) / dem
;	    long  num2,
;	    long  num3,
;	    long  dem);

	.ENTRY	longadddiv
longadddiv:
	MOVL	EAX, 8t.B[ESP]		;Get num1
	MULL	12t.B[ESP]		;Times num2
	ADDL	EAX, 16t.B[ESP]		;Plus num3
	ADCL	EAX, #0.B
	DIVL	20t.B[ESP]		;Divided by dem
	MOVL	EBX, 4t.B[ESP]		;Get offset of result array
	MOVL	[EBX], EAX		;Store quo.
	MOVL	4.B[EBX], EDX		;Store remainder
	RET

	.END
