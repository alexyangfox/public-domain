 	.TITLE	_iob - I/O tables for C stream I/O
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;+
; Edit history:
;
;  Date    Who  Description
; -------  ---  -----------
; 28Sep94  FPJ  Added edit history.
;-

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_DATA_p

	.ENTRY	_stdin

_stdin:
	.LONG	DH_STDIN	;iob_handle - Device handle
	.LONG	IOB$ASCII | IOB$READ
				;iob_flag   - Flag bits
	.LONG	0		;iob_error  - Error code
	.LONG	0		;iob_length - Length of the file
	.LONG	0		;iob_ungetc - Unget character
	.LONG	0		;iob_offset - Offset in file for buffer
	.LONG	0		;iob_buffer - Offset of start of buffer
	.LONG	0		;iob_bsize  - Size of the buffer
	.LONG	0		;iob_pnt    - Offset of next byte in buffer
	.LONG	-1		;iob_count  - Number of byte positions left in
				;		the buffer
	.LONG	0		;iob_end    - Value of iob_count for EOF

	.ENTRY	_stdout

_stdout:
	.LONG	DH_STDOUT	;iob_handle
	.LONG	IOB$ASCII | IOB$WRITE
				;iob_flag
	.LONG	0		;iob_error
	.LONG	0		;iob_length
	.LONG	0		;iob_ungetc
	.LONG	0		;iob_offset
	.LONG	0		;iob_buffer
	.LONG	0		;iob_bsize
	.LONG	0		;iob_pnt
	.LONG	-1		;iob_count
	.LONG	0		;iob_end

	.ENTRY	_stderr

_stderr:
	.LONG	DH_STDERR	;iob_handle
	.LONG	IOB$ASCII | IOB$WRITE
				;iob_flag
	.LONG	0		;iob_error
	.LONG	0		;iob_length
	.LONG	0		;iob_ungetc
	.LONG	0		;iob_offset
	.LONG	0		;iob_buffer
	.LONG	0		;iob_bsize
	.LONG	0		;iob_pnt
	.LONG	-1		;iob_count
	.LONG	0		;iob_end

	.ENTRY	_stdtrm

_stdtrm:
	.LONG	DH_STDTRM	;iob_handle
	.LONG	IOB$ASCII | IOB$READ | IOB$WRITE
				;iob_flag
	.LONG	0		;iob_error
	.LONG	0		;iob_length
	.LONG	0		;iob_ungetc
	.LONG	0		;iob_offset
	.LONG	0		;iob_buffer
	.LONG	0		;iob_bsize
	.LONG	0		;iob_pnt
	.LONG	-1		;iob_count
	.LONG	0		;iob_end

	.ENTRY	_iob

_iob:
	.BLKB	iob_SIZE * NFILES

	.END
