	.TITLE	_assert - Internal function for ANSI C assert() macro
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;+
; Edit history:
;
;  Date    Who  Description
; -------  ---  -----------
;  4Sep94  FPJ  Original creation.
; 23Nov94  FPJ  Corrected code to write to stderr instead of stdout, and
;               to pass an error code to _exit.
;-

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.SBTTL _assert - Internal function for ANSI C assert() macro

;+
; Function: _assert()
;
; Call:
;
;	PUSHL	<offset of string to print>
;
;	CALL 	_assert
;
; Return:
;
;	(n/a - it doesn't return)
;-

p1 =! 4t

	.PSECT	_TEXT_p

	.ENTRY	_assert

_assert:
	MOVL	EAX, p1.B[ESP]		;Get offset of string
	PUSHL	_stderr#		;Push handle of stderr
	PUSHL	DS
	PUSHL	EAX			;Specify address of string
	PUSHL	#0.B			;No parameter list
	CALLF	svcIoOutString#		;Now output the string
	PUSHL	#ER_ERROR               ;Say something bad happened
        CALL    _exit#			;And exit
	RET                             ;(we should never get here)

	.END
