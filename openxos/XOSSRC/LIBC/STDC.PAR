	.SBTTL	C library parameter definitions

.IF NDF DEFINES
	.NLIST
	.INCLUD	ALGINC:\XMAC\DEFINES.PAR
	.LIST
.ENDC
	.PARM

_CODEBASE =!1000h		;Offset for code msect
_ODATABASE=!1F0000h		;Offset for once-only data msect (this allows
				;  for 64kb of once-only data)
_STACKBASE=!200000h		;Offset for stack msect (this allows the stack
				;  to expand to 128kb)
_DATABASE =!220000h		;Offset for data msect

	.MACRO	' .STDSEGS
	.PROC	80386
	.SEG	_TEXT_s , 32BIT, CODE, READ
	.MSECT	_TEXT_m , _TEXT_s, READ, ADDR=_CODEBASE
	.PSECT	_TEXT_p , _TEXT_m, MOD=4
	.PSECT	_OTEXT_p, _TEXT_m, MOD=4

	.SEG	DGROUP_s, 32BIT, DATA, READ, WRITE
	.MSECT	DGROUP_m, DGROUP_s, READ, WRITE, ADDR=_DATABASE
	.PSECT	_BEGIN_p, DGROUP_m, MOD=4
	.PSECT	CONST_p , DGROUP_m, MOD=4
	.PSECT	CONST2_p, DGROUP_m, MOD=4
	.PSECT	_DATA_p , DGROUP_m, MOD=4
	.PSECT	_BSS_p  , DGROUP_m, MOD=4
	.PSECT	_HEAP_p , DGROUP_m, MOD=4

	.MSECT	_ODATA_m, DGROUP_s, READ, WRITE, ADDR=_ODATABASE
	.PSECT	_ODATA_p, _ODATA_m, MOD=4
	.ENDM

	.MACRO	' .END
	.PSECT	_DATA_p
	.MOD	4
	.PSECT	_BSS_p
	.MOD	4
	.PSECT	_ODATA_p
	.MOD	4
	.PSECT	_TEXT_p
	.MOD	4
	.PSECT	CONST_p
	.MOD	4
	.PSECT	CONST2_p
	.MOD	4
	.ENDM

$$$=!0
BLK iob_handle, 4t	;Device handle
BLK iob_flag  , 4t	;Flag bits
BLK iob_error , 4t	;Error code
BLK iob_length, 4t	;Length of file (bytes)
BLK iob_ungetc, 4t	;unget character
BLK iob_offset, 4t	;Offset in file for buffer (bytes)
BLK iob_buffer, 4t	;Offset of buffer
BLK iob_bsize , 4t	;Buffer size (bytes)
BLK iob_pnt   , 4t	;Offset of next byte in buffer
BLK iob_count , 4t	;Number of bytes available in buffer
BLK iob_end   , 4t	;Value of iob_count for EOF
iob_SIZE=!$$$

NFILES     =!20t	;Number of files
BUFSIZE    =!512t	;Standard buffer size
FILESPCSIZE=!256t	;Maximum length for file specification
TRUE       =!1t
FALSE      =!0t
EOF	   =!-1		;End of file marker

;Bits for iob_flag

IOB$NBUF=!00000200h	;Set if no buffering in effect
  IOB%NBUF=!9t

IOB$LBUF=!00000100h	;Set if line buffering in effect
  IOB%LBUF=!8t

IOB$CHNG =!00000080h	;Buffer has been changed
  IOB%CHNG =!7t

IOB$UNBUF=!00000040h	;Device is unbuffered
  IOB%UNBUF=!6t

IOB$DISK =!00000020h	;Disk file
  IOB%DISK =!5t

IOB$ASCII=!00000010h	;Text file if set, binary file if clear
  IOB%ASCII=!4t

IOB$ERROR=!00000008h	;Error occurred in I/O operation
  IOB%ERROR=!3t

IOB$EOF  =!00000004h	;EOF occurred when reading file
  IOB%EOF  =!2t

IOB$WRITE=!00000002h	;File is open for output
  IOB%WRITE=!1t

IOB$READ =!00000001h	;File is open for input
  IOB%READ =!0t

;Define buffering types used by setvbuf

_IOFBF	=!0
_IOLBF	=!1
_IONBF	=!2

;Define values for fseek

SEEK_SET=!0		;From beginning of file
SEEK_CUR=!1		;From current position
SEEK_END=!2		;From end of file
