	.TITLE	getfarg - Function to find first argument
	.SBTTL	Run-time library for XC for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\CTYPE.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_TEXT_p

;Function find first argument.  This function is intended for use when the
;  alternate environment setup routine (_MAINX) is used to locate the first
;  actual argument for calling progarg.
;	char *args;		/* Offset of base of argument msect */
;	(char *)pntr = getfarg(args);
;  Value returned is offset of first actual argument character if normal or
;    0 if error

	.ENTRY	getfarg
getfarg:PUSHL	ESI
	MOVL	ESI, 8.B[ESP]		;Get offset of argument msect
	MOVL	ESI, arg_cmdofs.B[ESI]	;Get offset of argument string
	CLD
	CLRL	EAX
2$:	LODSB	[ESI]			;Find first non-whitespace character
	TESTB	_chrtbl#[EAX], #CT$SPACE
	JNE	2$.S
	CMPB	AL, #0
	JE	8$.S
4$:	LODSB	[ESI]			;Now find first whitespace character
	CMPB	AL, #0			;  (this skips the program name)
	JE	8$.S
	TESTB	_chrtbl#[EAX], #CT$SPACE
	JE	4$.S
6$:	LODSB	[ESI]			 ;Find first non-whitespace character
	TESTB	_chrtbl#[EAX], #CT$SPACE ;  (this gets us to the start of the
	JNE	6$.S			 ;  process ID argument)
8$:	LEAL	EAX, -1.B[ESI]		;Return pointer to first argument
	POPL	ESI			;  character
	RET

	.END
