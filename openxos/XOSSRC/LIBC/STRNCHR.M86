	.TITLE	strnchr - Function to find character in a string
	.SBTTL	Run-time library for XC for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_TEXT_p

	.SBTTL	strnchr - Function to find character in a string

;Function to find character in a string
;	const char *str;	// Pointer to string
;	const char  chr;	// Character to find
;	const int   len;	// Maximum number of charactesrs to check
;	(char *)fnd = strnchr(str, chr)
;  Value returned is a pointer to the first occurance of the character or NULL
;    if the character is not found

	.ENTRY	strnchr
strnchr:PUSHL	ESI
	MOVL	ESI, 8t.B[ESP]		;Get offset of string
	MOVB	AH, 12t.B[ESP]		;Get character to search for
	MOVL	ECX, 16t.B[ESP]		;Get maximum number of charcters to
	CLD				;  check
2$:	LODSB	[ESI]			;Get character
	CMPB	AL, AH			;This one?
	JE	4$.S			;Yes
	CMPB	AL, #0			;No - end of string
	LOOPNE	ECX, 2$			;Continue if not end and more to check
	CLRL	EAX			;Not found - return NULL
	POPL	ESI
	RET

;Here with character found

4$:	LEAL	EAX, -1.B[ESI]		;Retrun offset of character
	POPL	ESI
	RET

	.END
