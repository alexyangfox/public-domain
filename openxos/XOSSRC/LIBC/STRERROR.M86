	.TITLE	strerror - ANSI C error functions
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;+
; Edit history:
;
;  Date    Who  Description
; -------  ---  -----------
;  2Sep94  FPJ  Original creation.
;-

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_DATA_p

MAXTEXT = 80t + 2			;(+2 for <CR><LF>)

errtext:
	.BLKB	MAXTEXT

	.SBTTL	strerror - ANSI C function to return error text

;+
; Function: strerror()
;
; Call:
;
;       PUSHL	<error code>
;
;	CALL 	strerror
;
; Return:
;
;       EAX =  Offset of error text
;-

p1 =! 4t

	.PSECT	_TEXT_p

	.ENTRY	strerror

strerror:
	MOVL	EAX, p1.B[ESP]		;Get the error code
	LEAL	EBX, errtext		;Point to text buffer
	MOVL	ECX, DS			;Include segment
	CALL	_geterror
	LEAL	EAX, errtext		;Return pointer to text	
	RET

	.ENTRY	_geterror

_geterror:
	NEGL	EAX			;Make it negative for system call
	PUSHL	EAX			;Save error code
	PUSHL	#1.B			;Include error text, but not code
	PUSHL	ECX			;Push segment
	PUSHL	EBX			; and offset
	CALLF	svcSysErrMsg#		;Get the information

	RET

	.END
