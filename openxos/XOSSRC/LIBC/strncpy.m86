	.TITLE	strncpy - ANSI C function to copy strings
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.SBTTL	strncpy - ANSI C function to copy strings

;Calling sequence:
;	char *strncpy(
;	    char *dst,		// Address of source string
;	    char *src,		// Address of destination string
;	    int   length);	// Maximum length to copy

;NOTE: If the maximum length stops the copy, the destination string is NOT
;      NUL terminated!

arg_dst=!12t
arg_src=!16t
arg_len=!20t

	.PSECT	_TEXT_p

	.ENTRY	strncpy
strncpy:PUSHL	ESI
	PUSHL	EDI
	PUSHL	DS
	POPL	ES
	CLD

;First get length of the source string

	MOVL	EDI, arg_src.B[ESP]	;Get address of source string
	MOVL	ESI, EDI
	MOVL	ECX, arg_len.B[ESP]	;Get maximum string size
	TESTL	ECX, ECX		;Nothing to do if maximum is 0
	JE	4$.S
	CLRL	EAX			;Scan for trailing NUL
	RNSCASB	[EDI]			;Scan to end of string
	SUBL	EDI, arg_src.B[ESP]	;Get length of source string (this
					;  includes the final null unless the
					;  string was the maximum length)
	MOVL	ECX, EDI		;Get in right register

;Now copy the string

	MOVL	EDI, arg_dst.B[ESP]	;Get address of destination string
	RMOVSB	[EDI], [ESI]		;Copy the string
4$:	MOVL	EAX, arg_dst.B[ESP]	;Return address of destination string
	POPL	EDI
	POPL	ESI
	RET

	.END
