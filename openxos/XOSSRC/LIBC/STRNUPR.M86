	.TITLE	strupr - Function to convert string to upper case
	.SBTTL	Run-time library for XC for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_TEXT_p

	.SBTTL	strupr - Function to convert string to upper case

;Function to convert string to upper case
;	const char *str;	// Pointer to string
;	int         length;	// Maximum length of string
;	(int)val = strnupr(str, length)
;  Value returned is the original offset of the string

	.ENTRY	strnupper, strnupr
strnupper:
strnupr:PUSHL	ESI
	MOVL	ESI, 8.B[ESP]		;Get offset of string
	MOVL	ECX, 12t.B[ESP]		;Get maximum length of string
	CLD
2$:	LODSB	[ESI]			;Get character
	CMPB	AL, #0			;End of string?
	JE	4$.S			;Yes - finished
	CMPB	AL, #'a'		;No - lower case?
	JB	2$.S			;No
	CMPB	AL, #'z'		;Maybe
	JA	2$.S			;No
	SUBB	-1.B[ESI], #'a'-'A'	;Yes - convert to upper case
	LOOP	ECX, 2$			;Continue if more
4$:	POPL	ESI			;Here at end of string
	MOVL	EAX, 4.B[ESP]		;Return offset of the string
	RET

	.END
