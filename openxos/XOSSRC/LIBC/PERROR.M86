	.TITLE	perror - ANSI C function to print error message
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;+
; Edit history:
;
;  Date    Who  Description
; -------  ---  -----------
;  2Sep94  FPJ  Original creation.
;-

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_DATA_p

MAXTEXT = 80t + 2			;(+2 for <CR><LF>)

errsep:	.ASCII	": "

errtext:
	.BLKB	MAXTEXT

	.SBTTL	perror - ANSI C function to return error text

;+
; Function: perror()
;
; Call:
;
;	PUSHL	<offset of string to print, or NULL>
;
;	CALL 	perror
;
; Return:
;
;       EAX =  Random
;       EBX =  Random
;	ECX =  Random
;	EDX =  Random
;	ES  =  Random
;-

errsize =! { 80 }.B

p1 =! errsize + 4t

	.PSECT	_TEXT_p

	.ENTRY	perror

perror:
	SUBL	ESP, #errsize		;Make room for error text

	MOVL	EDX, ESP		;Assume no user text
	MOVL	EAX, p1[ESP]		;Get offset of initial string
	TESTL	EAX, EAX		;NULL pointer?
	JZ	10$.S			;Yes, nothing to print

; Output user's text message

	PUSHL	_stdout#		;Push handle of stdout
	PUSHL	DS
	PUSHL	EAX
	PUSHL	#0.B			;Output until <NUL>
	CALLF	svcIoOutString#		;Now output the string

	PUSHL	_stdout#		;Push handle of stdout
	PUSHL	#':'			;Output a colon
	CALLF	svcIoOutSingle#		;Now output the character

	PUSHL	_stdout#		;Push handle of stdout
	PUSHL	#' '			;Output a space
	CALLF	svcIoOutSingle#		;Now output the character

10$:	MOVL	EAX, errno#		;Get error code
	MOVL	EBX, ESP		;Point to text buffer
	MOVL	ECX, SS			;Include segment
	CALL	_geterror#		;Get error text

	PUSHL	_stdout#		;Push handle of stdout
	PUSHL	DS
	PUSHL	EBX
	PUSHL	#0.B			;Output until <NUL>
	CALLF	svcIoOutString#		;Now output the string

	PUSHL	_stdout#		;Push handle of stdout
	PUSHL	#13t			;Output a carriage return
	CALLF	svcIoOutSingle#		;Now output the character

	PUSHL	_stdout#		;Push handle of stdout
	PUSHL	#10t			;Output a line feed
	CALLF	svcIoOutSingle#		;Now output the character

	ADDL	ESP, #errsize		;Pop off error text

	RET

	.END
