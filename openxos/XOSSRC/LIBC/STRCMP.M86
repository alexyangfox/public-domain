	.TITLE	strcmp - ANSI C function to compare two strings
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;+
; Edit history:
;
;  Date    Who  Description
; -------  ---  -----------
;  1Sep94  FPJ  Optimized code.
;-

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

.MACRO	MOVSEG	dst, src, reg
.IF	NB	{reg}
	MOVL	reg, src
	MOVL	dst, reg
.IFF
	PUSHL	src
	POPL	dst
.ENDC
.ENDM

	.SBTTL	strcmp - ANSI C function to compare two strings

;+
; Function: strcmp()
;
; Call:
;
;       PUSHL	<offset of 2nd string>
;	PUSHL	<offset of 1st string>
;
;	CALL 	strcmp
;
; Return:
;
;       EAX =  Difference of 1st non-equal character (0 if match)
;-

p1 =! 12t
p2 =! 16t

	.PSECT	_TEXT_p

	.ENTRY	strcmp

strcmp:
	PUSHL	ESI
	PUSHL	EDI
	MOVSEG	ES, DS			;Copy DS to ES
	CLD

	MOVL	ESI, p1.B[ESP]		;Get offset of first string
	MOVL	EDI, p2.B[ESP]		;Get offset of second string
10$:	LODSB	[ESI]			;Get character from first string
	SCASB	[EDI]			;Compare to second string
	JNE	20$.S			;If different
	TESTB	AL, AL			;Same - end of string?
	JNZ	10$.S			;No - continue
	CLRL	EAX			;Yes - return 0
	JMP	30$.S			;Join up with common code

; Here if strings are different, or one is shorter than the other

20$:	MOVXBL	EAX, AL			;Sign extend both characters
	MOVXBL	EDX, -1.B[EDI]
	SUBL	EAX, EDX		;Return the difference

30$:	POPL	EDI
	POPL	ESI
	RET

	.END
