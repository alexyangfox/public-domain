	.TITLE	$dumpblk - Internal function to output buffer if necessary
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.PSECT	_TEXT_p

	.SBTTL	$dumpblk - Internal function to output buffer if necessary

;Internal function to output buffer if necessary
;	c{ESI} = Offset of IOB
;	CALL	$dumpblk
;	C:set = Error
;	  c{EAX} = -1, errno is set
;	C:clr = Normal
;	  c{EAX} = 0

	.ENTRY	$dumpblk
$dumpblk:
	BTL	iob_flag.B[ESI], #IOB%WRITE ;Output file?
	JNC	14$.S			;No
	BTL	iob_flag.B[ESI], #IOB%CHNG ;Yes - has buffer been changed?
	JNC	14$.S			;No
	MOVL	ECX, iob_bsize.B[ESI]	;Yes - calculate amount to write
	MOVL	EDX, iob_count.B[ESI]
	BTL	iob_flag.B[ESI], #IOB%DISK ;Is this a disk?
	JNC	6$.S			;No
	PUSHL	iob_handle.B[ESI]	;Yes
	MOVL	EAX, iob_offset.B[ESI]
	PUSHL	EAX
	PUSHL	#0.B
	CALLF	svcIoSetPos#
	TESTL	EAX, EAX
	JS	8$.S
	CMPL	EDX, iob_end.B[ESI]
	JLE	6$.S
	MOVL	EDX, iob_end.B[ESI]
6$:	SUBL	ECX, EDX
	PUSHL	iob_handle.B[ESI]
	PUSHL	DS
	PUSHL	iob_buffer.B[ESI]
	PUSHL	ECX
	CALLF	svcIoOutBlock#
	CMPL	EAX, ECX		;Did we write it all?
	JE	10$.S			;Yes
	TESTL	EAX, EAX		;No - incomplete write?
	JS	8$.S			;No
	MOVL	EAX, #ER_INCMO		;Yes
8$:	NEGL	EAX			;Make positive for errno
	MOVL	errno#, EAX	
	MOVL	iob_error.b[ESI], EAX
	STC
	RET

;Here with good output

10$:	ADDL	ECX, iob_offset.B[ESI]	;Calculate new file length
	CMPL	iob_length.B[ESI], ECX	;Have we lengthed the file?
	JAE	12$.S			;No
	MOVL	iob_length.B[ESI], ECX	;Yes - update length
12$:	BTZL	iob_flag.B[ESI], #IOB%CHNG ;Block matches disk now
14$:	CLRL	EAX			;Return 0
	RET

	.END
