	.TITLE	fflush - ANSI C function to flush output streams
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;+
; Edit history:
;
;  Date    Who  Description
; -------  ---  -----------
;  2Nov94  FPJ  Fixed some bugs.
;-

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

;+
; Function: fflush
;
; Call:
;
;	PUSHL	<ptr to stream to flush, or NULL for all>
;
;	CALL 	fflush
;
; Return:
;
;       EAX =  EOF if any error occurred, else 0
;	ECX =  Random
;-


p1 =! 8t

	.PSECT	_TEXT_p

	.ENTRY	fflush

fflush:
	PUSHL	ESI
	CLRL	EAX			;Assume no error
	MOVL	ESI, p1.B[ESP]		;Get offset of IOB for stream
	TESTL	ESI, ESI		;Did we get a NULL pointer?
	JE	flushall.S		;Yes, flush everything
	CALL	doflush			;No, just flush the one stream
	JMP	20$.S			;And exit

; Here if we have to flush all streams

flushall:
	MOVL	ECX, #NFILES		;Search for a free IOB
	LEAL	ESI, _iob#
10$:	PUSHL	ECX			;Save counter
	CALL	doflush			;Flush this stream
	POPL	ECX			;Restore counter
	ADDL	ESI, #iob_SIZE.B	;Go to next IOB
	LOOP	ECX, 10$ 		;Continue if more to check

; Here when done scanning all streams

20$:	TESTL	EAX, EAX		;Did we see an error anywhere?
	JE	30$.S			;No
	MOVL	errno#, #-ER_NOOUT	;Store the error code
30$:	POPL	ESI
	RET
	
; Here to flush a single stream

doflush:
	BTL	iob_flag.B[ESI], #IOB%WRITE ;Is a file open for output?
	JC	40$.S			;Yes, so continue
	ORL	EAX, #EOF		;No, so indicate error
	JMP	50$.S			;And exit

; Here to actually flush the data

40$:	PUSHL	EAX			;Save error indication
	CALL	$dumpblk#		;Output the current block and return
	POPL	EAX			;Restore error indication
50$:	RET

	.END
