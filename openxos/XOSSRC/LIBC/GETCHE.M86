	.TITLE	getche - Function to input single character from stdin with echo
	.SBTTL	Run-time library for XC for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSTRM.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.EXTERN	fgetc

	.STDSEGS

	.PSECT	_DATA_p

parm1:	.BYTE	PAR$GET|REP_HEXV, 4
	.WORD	IOPAR_TRMCINPMODE
pval1:	.LONG	0
	.BYTE	PAR$SET|REP_HEXV, 4
	.WORD	IOPAR_TRMCINPMODE
	.LONG	0FFFFFFFFh
	.BYTE	PAR$SET|REP_HEXV, 4
	.WORD	IOPAR_TRMSINPMODE
	.LONG	TIM$CHAR|TIM$ECHO
	.BYTE	0

	.MOD	4
parm2:	.BYTE	PAR$SET|REP_HEXV, 4
	.WORD	IOPAR_TRMCINPMODE
	.LONG	0FFFFFFFFh
	.BYTE	PAR$SET|REP_HEXV, 4
	.WORD	IOPAR_TRMSINPMODE
pval2:	.LONG	0
	.BYTE	0

	.PSECT	_TEXT_p

	.SBTTL	getche - Function to input single character from stdin with echo

;Function to input single character from stdin with echo
;	(int)val = getche();
;  Value returned if -1 if error (errno is set) or character (0 filled to 32
;    bits) if normal

	.ENTRY	getche
getche:	PUSHL	ESI
	MOVL	ESI, #_stdin#		;Get stream pointer
	BTL	iob_flag.B[ESI], #IOB%UNBUF ;Unbuffered device?
	JNC	$fgetc#			;No - just like fgetc(stdin)
	PUSHL	iob_handle.B[ESI]	;Yes - get a character directly
	PUSHL	DS
	PUSHL	#parm1
	CALLF	svcIoInSingleP#
	TESTL	EAX, EAX
	JNS	4$.S
	NEGL	EAX			;Make positive for errno
	MOVL	errno#, EAX
	MOVL	iob_error.B[ESI], EAX
	MOVL	EAX, #-1
4$:	PUSHL	EAX			;Save value to return
	MOVL	EAX, pval1		;Restore terminal input modes
	MOVL	pval2, EAX
	PUSHL	iob_handle.B[ESI]
	PUSHL	#0.B
	PUSHL	#0.B
	PUSHL	#0.B
	PUSHL	DS
	PUSHL	#parm2
	CALLF	svcIoInBlockP#
	POPL	EAX
	POPL	ESI
	RET

	.END
