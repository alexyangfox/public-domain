Subject: 
             Re: Brief fix
        Date: 
             Tue, 28 Sep 1999 23:38:35 -0500
       From: 
             "Charles E. Yahn" <chabes@nexiliscom.com>
    Reply-To: 
             "Charles E. Yahn" <cyahn@nexiliscom.com>
 Organization: 
             Catalyst Communication Technologies
         To: 
             "John Goltz" <jrg@nexiliscom.com>
  References: 
             1 , 2 , 3




John,

> Can you clarify a bit on the sd_kind problem with svcMemDescRead? I'm not
sure I
> understand what you mean here.

There is a code sequence in svcMemDescRead

    test    sd_kind[EBP+...], 03h
    je        $8                    ; Invalid selector.
    ....

    This is failing although there is a valid LDT entry (in [pdaLdtPtr]).
    I have not looked at all the places where these values are updated, but
breakpointing at
    this routine, the sd_kind is typically 0x80 or 0x88. I presume the 0x03
is checking for
    PG$READ|PG$WRITE. The LDT entry does have valid BASE, Limit, type and
attributes.
    Is this a carry-over from the DPMI interface?
    The "Quick" fix was to COMMENT out the "je $8". The only selector passed
is DS (0x0F) so
    for my immediate needs, this is OK. However long term, a more robust
check needs to be performed.

    I will look at the code again tomorrow and provide more details (if
needed).

    Thanks for you help/quick response.
    The map/share library and test programs are working GREAT!

    Charlie


----- Original Message -----
From: John Goltz <jrg@nexiliscom.com>
To: Charles E. Yahn <cyahn@nexiliscom.com>; <bnevins@nexiliscom.com>
Sent: Tuesday, September 28, 1999 10:53 PM
Subject: Re: Brief fix


> Charlie,
>
> I have had some major problems fixing all of the references to pdaLdt that
have
> been changed to pdaLdtPnt.  I did a fairly quick pass and changed all of
the
> references, but I was a little too quick and didn't get everything right.
> 3.1.30 does fix a number of these problems.  As for not updating both
pdaLdtPnt
> and pdaLdtSeg, I don't think this is a problem. The LDT is the second item
in
> the PDA dynamic area. This means that the ONLY time it can move is when
the size
> of the IO bitmap (which is the first item) is changed. The PDA memory
block
> allocated for the LDT is actally twice the size of the LDT. The second
half of
> the block contains the "LDT segment" table, which is pointed to by
pdaLdtSeg.
> This is not a full blown PDA pointer. It is adjusted manually whenever the
size
> of the LDT is changed.  This is probably not the best way to handle this,
but it
> is a holdover from the original situation when the LDT was the first item
and
> thus was in a fixed location.  This seemed like a better way to handle the
> pointer to the segment table.  Looking back on that, it was probably a
mistake
> to begin with!  Someday, I probably should change this to make the LDT and
the
> segment table seperate PDA blocks and use the automatic PDA pointer fix-up
to
> handle the pointers (Except for the hardware LDT pointer, of course. This
will
> always require special fix-up.). So far all of the problems I have found
relate
> to not using the pdaLdtPnt pointer correctly. There are some cases where
the
> current SS does not address the PDA of interest, and this has been the
source of
> most of the bugs I have fixed so far. Several of these problems were in
the DPMI
> specific routines (mostly in MEMORY4.M86). Remember that the original
pdaLdt
> value was a literal which referenced the beginning of the LDT. The new
pdaLdtPnt
> value is a pointer which references the PDA memory block containing the
LDT.
> This is a difference of 16 bytes, which is usually referenced using the
symbol
> mb_data (which is the offset of the start of the data area in a PDA memory
block
> and has a value of 16). There were also a couple of places where I was
clever
> and carried the difference between the two pointers in a regsiter to save
a
> couple of instructions. I think I have removed all of these.
>
> Please let me know if you find any remaining pdaLdtPnt problems in 3.1.30.
>
> Can you clarify a bit on the sd_kind problem with svcMemDescRead? I'm not
sure I
> understand what you mean here.
>
> John
>
