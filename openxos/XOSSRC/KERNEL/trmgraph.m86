	.TITLE	TRMFNC - Terminal function routines for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80486
	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSX.PAR
	.INCLUD	XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\XOSTRM.PAR
	.INCLUD	XOSINC:\XMAC\XOSXTRM.PAR

	CODE

	.SBTTL	svcTrmGSetCurPat - Set graphics cursor pattern

;Here for the svcTrmGSetCurPat SVC - Set graphics cursor pattern
;	long handle;		// Device handle
;	long type;		// Cursor type
;	long width;		// Width of cursor pattern
;	long height;		// Height of cursor pattern
;	long xhot;		// X position of hot spot
;	long yhot;		// Y position of hot spot
;	uchar far *pattern;	// Pattern map
;	uchar far *mask;	// Mask map
;	rtn = svcTrmGSetCurPat(handle, type, width, eight, xhot, yhot,
;		pattern, mask);
;  Value returned is 0 if normal or negative error code if error

psvcTrmGSetCurPat::
	SVCENTR	CNTTrmGSetCurPat#
	ORB	SS:pdaArg7#, #03
	ORB	SS:pdaArg9#, #03
	CALL	knlGetDcbTdb#		;Get DCB and TDB
	JC	2$.S
	CMPL	SS:pdaArg2#, #1t.B	;Make sure type is right
	JNE	knlBadValue#
	IFFAULT	knlRtnAdrEr#
	LFSL	EBX, SS:pdaArg8#	;Get address of the pattern map
	IFFAULT	knlRtnAdrEr#
	LGSL	EDX, SS:pdaArg10#	;Get address of the mask map
	MOVB	AL, SS:pdaArg3#		;Get width
	MOVB	AH, SS:pdaArg4#		;Get height
	MOVB	CL, SS:pdaArg5#		;Get X position of hot spot
	MOVB	CH, SS:pdaArg6#		;Get Y position of hot spot
	MOVL	EBP, tdb_ddisp.B[ESI]	;Dispatch to driver for this function
	JMPIL	CS:tf_gsetcurpat.B[EBP]

	.SBTTL	svcTrmGSetCurCol - Set graphics cursor colors

;Here for the svcTrmGSetCurCol SVC - Set graphics cursor colors
;	long      handle;	// Device handle
;	long      number;	// Number of colors
;	long far *colors;	// Color values
;	rtn = svcTrmGSetCurCol(handle, number, colors);
;  Value returned is 0 if normal or negative error code if error

psvcTrmGSetCurCol::
	SVCENTR	CNTTrmGSetCurCol#
	ORB	SS:pdaArg3#, #03
	CALL	knlGetDcbTdb#		;Get DCB and TDB
2$:	JC	4$.S
	MOVL	ECX, SS:pdaArg2#	;Get number of colors
	IFFAULT	knlRtnAdrEr#
	LESL	EBX, SS:pdaArg4#	;Get address of the color array
	MOVL	EAX, tdb_ddisp.B[ESI]	;Dispatch to driver for this function
	JMPIL	CS:tf_gsetcurcol.B[EAX]

4$:	RET

	.SBTTL	svcTrmGSetCurPos - Set graphics cursor position

;Here for the svcTrmGSetCurPos SVC - Set graphics cursor position
;	long handle;		// Device handle
;	long func;		// Function:
;				//   Bit 0: 0 = Disable, cursor
;				//          1 = Enable cursor
;				//   Bit 1: 0 = Do not change position
;				//          1 = Set new postion
;	long xpos;		// X position
;	long ypos;		// Y position
;	rtn = svcTrmGSetCurPos(handle, func, xpos, ypos);
;  Value returned is 0 if normal or negative error code if error

psvcTrmGSetCurPos::
	SVCENTR	CNTTrmGSetCurPos#
	CALL	knlGetDcbTdb#		;Get DCB and TDB
	JC	4$.S
	MOVL	EAX, SS:pdaArg2#	;Get function bits
	MOVL	ECX, SS:pdaArg3#	;Get X position
	MOVL	EDX, SS:pdaArg4#	;Get Y position
	MOVL	EBX, tdb_ddisp.B[ESI]	;Dispatch to driver for this function
	JMPIL	CS:tf_gsetcurpos.B[EBX]

	.SBTTL	svcTrmGGetCurPos - Get graphics cursor position

;Here for the svcTrmGGetCurPos SVC - Get graphics cursor position
;	long     handle;	// Device handle
;	long far values[2];	// Array to receive values
;	rtn = svcTrmGGetCurPos(handle, values);
;  Value returned is 0 if cursor disabled, 1 if cursor enabled, or negative
;    error code if error

psvcTrmGGetCurPos::
	SVCENTR	CNTTrmGGetCurPos#
	ORB	SS:pdaArg3#, #02
	CALL	knlGetDcbTdb#		;Get DCB and TDB
	JC	4$.S
	MOVL	ECX, SS:pdaArg2#	;Get number of colors
	IFFAULT	knlRtnAdrEr#
	LESL	EBX, SS:pdaArg3#	;Get address of the values array
	MOVL	EAX, tdb_ddisp.B[ESI]	;Dispatch to driver for this function
	JMPIL	CS:tf_ggetcurpos.B[EAX]

	END
