	.TITLE	PDADEF - PDA and SDA offset definitions for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80486
	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSX.PAR
	.INCLUD	XOSINC:\XMAC\PCAT.PAR
	.INCLUD	SVCDEF.INC

;Define offsets in the PDA - the PDA is an allocated memory block which
;  contains the following per process data areas:
;	Process exec stack
;	Task state segment for process
;	Local segment descriptor table for process
;	Process local data

;The PDA is mapped using three selectors in the GDT.  The first is a normal
;  data segment selector which maps the entire memory block allocated
;  for the PDA.  The second is the task state segment selector for the TSS.
;  The third is the LDT selector.

pda_SZ_STK==!1000h		;Size of stack area
$$$=!pda_SZ_STK-84t
GBK pdaXStk     , 0
GBK pdaURegGS   , 4t		;Saved user GS on SVC
GBK pdaURegFS   , 4t		;Saved user FS on SVC
GBK pdaURegES   , 4t		;Saved user ES on SVC
GBK pdaURegDS   , 4t		;Saved user DS on SVC
GBK pdaURegEDI  , 4t		;Saved user EDI on SVC
GBK pdaURegESI  , 4t		;Saved user ESI on SVC
GBK pdaURegEBP  , 4t		;Saved user EBP on SVC
GBK             , 4t		;Saved user dummy ESP on SVC
GBK pdaURegEBX  , 4t		;Saved user EBX on SVC
GBK pdaURegEDX  , 4t		;Saved user EDX on SVC
GBK pdaURegECX  , 4t		;Saved user ECX on SVC
GBK pdaURegEAX  , 4t		;Saved user EAX on SVC
GBK pdaURegEIP  , 4t		;Saved user EIP on SVC
GBK pdaURegCS   , 4t		;Saved user CS on SVC
GBK pdaURegEFR  , 4t		;Saved user EFR on SVC
$$$=!pda_SZ_STK-64t
GBK pdaArg10    , 4t		;Tenth SVC argument
GBK pdaArg9     , 4t		;Ninth SVC argument
GBK pdaArg8     , 4t		;Eight SVC argument
GBK pdaArg7     , 4t		;Seventh SVC argument
GBK pdaArg6     , 4t		;Sixth SVC argument
GBK pdaArg5     , 4t		;Fifth SVC argument
GBK pdaArg4     , 4t		;Fourth SVC argument
GBK pdaArg3     , 4t		;Third SVC argument
GBK pdaArg2     , 4t		;Second SVC argument
GBK pdaArg1     , 4t		;First SVC argument
GBK pdaURegESP  , 4t		;Saved user ESP on SVC
GBK pdaURegSS   , 4t		;Saved user SS on SVC
GBK pdaXStackP  , 0		;Process exec stack top for protected mode
GBK pdaVRegES   , 4t		;Saved user ES on SVC (real mode only)
GBK pdaVRegDS   , 4t		;Saved user DS on SVC (real mode only)
GBK pdaVRegFS   , 4t		;Saved user FS on SVC (real mode only)
GBK pdaVRegGS   , 4t		;Saved user GS on SVC (real mode only)e
GBK pdaXStackV  , 0		;Process exec stack top for real mode
GBK pdaMagic    , 4t		;Magic number which identifies a PDA
GBK pdaPid      , 4t		;Process PID and sequence number
GBK pdaTss      , 104t		;Task state segment for process

;;;;; GBK pdaBitMap   , 128t		;IO bit map
;;;;; pda_SZ_tss==!$$$-pdaTss
GBK pdaData     , 0		;Start of data area
GBK pdaName     , 32t		;Name of process
GBK pdaQueX     , 1t		;Index for current scheduler queue
GBK pdaPLevel   , 1t		;Process level
GBK pdaRealIO   , 1t
GBK             , 1t
GBK pdaLAddr    , 4t		;Linear address for this PDA
GBK pdaQueNext  , 2t		;Pointer to next PDA in scheduler queue
GBK pdaQuePrev  , 2t		;Pointer to previous PDA in scheduler queue
GBK pdaHndlTbl  , 4t		;Offset to start of handle table
GBK pdaHndlNum  , 4t		;Number of entries in handle table
GBK pdaRunTime  , 8t		;Total run-time (high speed clock ticks)
GBK pdaXffTime  , 8t		;Total extended fork context time (high speed
				;  clock ticks)
GBK pdaCTime    , 4t		;Time process was created
GBK pdaCDate    , 4t		;Date process was created
GBK pdaSesProc  , 2t		;Process number of senior process in session
GBK pdaParProc  , 2t		;Process number of parent of this process
GBK pdaSibProc  , 2t		;Process number of next sibling of this
				;  process
GBK pdaChildProc, 2t		;Process number of last child of this process
GBK pdaWSPages  , 4t		;No. of user memory pages allocated in memory
GBK pdaPMPages  , 4t		;No. of protected mode memory pages allocated
GBK pdaRMPages  , 4t		;No. of real mode memory pages allocated
GBK pdaOMPages  , 4t		;No. of overhead memory pages allocted by
				;  process
				;WARNING: The following 10 items must be ordered
;				;	  as 5 pairs of limit/allow items
GBK pdaWSLimit  , 4t		;Working set size limit
GBK pdaWSAllow  , 4t		;Working set size allowed
GBK pdaTMLimit  , 4t		;Total user memory limit
GBK pdaTMAllow  , 4t		;Total user memory allowed
GBK pdaPMLimit  , 4t		;Protected mode memory limit
GBK pdaPMAllow  , 4t		;Protected mode memory allowed
GBK pdaRMLimit  , 4t		;Real mode memory limit
GBK pdaRMAllow  , 4t		;Real mode memory allowed
GBK pdaOMLimit  , 4t		;Overhead memory limit
GBK pdaOMAllow  , 4t		;Overhead memory allowed
GBK pdaLAInUse  , 4t		;Linear address space in use (bytes)
GBK pdaLABlks   , 4t		;No. of linear address blocks in use
GBK pdaFree     , 4t		;Offset to first available space for system
				;  memory block
GBK pdaSection  , 4t		;Offset of section list data block
GBK pdaDosProc  , 2t		;Process number of DOS process for session
				;  (only used for session processes)
GBK pdaCountry  , 2t		;Country code
GBK pdaLogName  , 4t		;Offset to first local logical name block
GBK pdaPath     , 4t		;Offset to first path name block
GBK pdaEnvPnt   , 4t		;Offset to first environment string block
GBK pdaStatus1  , 1t		;First process status byte
GBK pdaStatus2  , 1t		;Second process status byte
GBK pdaStatus3  , 1t		;Third process status byte
GBK pdaSSigType , 1t		;System signal type bits
GBK pdaActPriv  , 8t		;Active privilege bits
GBK pdaAvlPriv  , 8t		;Available privilage bits
GBK pdaFileProt , 4t		;Default file protection value
GBK pdaDirProt  , 4t		;Default directory protection value
GBK pdaL1HeadP  , 4t		;Level 1 software interrupt list head pointer
GBK pdaL2HeadP  , 4t		;Level 2 software interrupt list head pointer
GBK pdaL3HeadP  , 4t		;Level 3 software interrupt list head pointer
GBK pdaL4HeadP  , 4t		;Level 4 software interrupt list head pointer
GBK pdaL5HeadP  , 4t		;Level 5 software interrupt list head pointer
GBK pdaL6HeadP  , 4t		;Level 6 software interrupt list head pointer
GBK pdaL7HeadP  , 4t		;Level 7 software interrupt list head pointer
GBK pdaL8HeadP  , 4t		;Level 8 software interrupt list head pointer
GBK pdaL1TailP  , 4t		;Level 1 software interrupt list tail pointer
GBK pdaL2TailP  , 4t		;Level 2 software interrupt list tail pointer
GBK pdaL3TailP  , 4t		;Level 3 software interrupt list tail pointer
GBK pdaL4TailP  , 4t		;Level 4 software interrupt list tail pointer
GBK pdaL5TailP  , 4t		;Level 5 software interrupt list tail pointer
GBK pdaL6TailP  , 4t		;Level 6 software interrupt list tail pointer
GBK pdaL7TailP  , 4t		;Level 7 software interrupt list tail pointer
GBK pdaL8TailP  , 4t		;Level 8 software interrupt list tail pointer
pdaxxTP==!pdaL1TailP-pdaL1HeadP
GBK pdaSigReq   , 1t		;Software interrupt request bits
GBK pdaSigMask  , 1t		;Software interrupt request mask
GBK pdaSigLvl   , 1t		;Current software interrupt level
GBK pdaVMode    , 1t		;Real mode video mode
GBK pdaCCSrvCnt , 4t		;Cntl-C signal service count
GBK pdaSpndBlk  , 4t		;Offset of wake block for suspend request
GBK pdaAlrmFWkB , 4t		;Offset of first alarm wake block
GBK pdaAlrmHndl , 4t		;Current alarm handle value
GBK pdaAlrmNum  , 4t		;Number of active alarms
GBK pdaRunQTime , 4t		;Run-time quantum time remaining
GBK pdaWaitIndex, 4t		;Process wait index
GBK pdaWaitHash , 2t		;Process wait hash list pointer
GBK pdaWaitList , 2t		;PDA for next process waiting on same queue
GBK             , 2t
GBK pdaFNSeqNum , 2t		;File name sequence number
GBK             , 4t
GBK pdaEvents   , 4t		;Offset of 1st event cluster definition block

GBK pdaWPHits   , 4t		;Watchpoint hit bits
GBK pdaWPEnable , 4t		;Enable mask for local watchpoints
GBK pdaURegDR0  , 4t		;Virtual DR0
GBK pdaURegDR1  , 4t		;Virtual DR1
GBK pdaURegDR2  , 4t		;Virtual DR2
GBK pdaURegDR3  , 4t		;Virtual DR3
GBK pdaURegDR6  , 4t		;Virtual DR6
GBK pdaURegDR7  , 4t		;Virtual DR7
GBK pdaURegCR2  , 4t
GBK pdaTrapErr  , 4t

GBK pdaXRegEIP  , 4t
GBK pdaXRegCS   , 4t
GBK pdaXRegEFR  , 4t
GBK pdaVRegEFR  , 4t		;Virtual EFR value for real mode

GBK pdaArgCnt   , 4t		;Arguement count for SVC
GBK pdaSigRegEAX, 4t
GBK pdaSigRegECX, 4t
GBK pdaSigRegEDX, 4t
GBK pdaSigRegESI, 4t
GBK pdaSigRegEDI, 4t
GBK pdaTrapVect , 4t
GBK pdaTrapData , 4t
GBK pdaTrapCode , 4t
GBK pdaTrmEvent , 1t		;Event number for process termination
GBK             , 1t
GBK pdaCritNext , 2t		;PDA selector for next process in critical
				;  section wait list
GBK pdaTssSel   , 4t		;Selector for TSS
GBK pdaLdtPnt   , 4t		;Offset of LDT block
GBK pdaMLckCnt  , 4t		;Number of memory pages locked for IO
GBK pdaXffFirst , 4t		;Pointer to first XFF for process
GBK pdaXffNum   , 4t		;Number of XFFs for process
GBK pdaTrmSts   , 4t		;Termination status value
GBK pdaTrmAddr  , 8t		;Termination address value
GBK pdaTrmEIP   , 4t		;Termination EIP value
GBK pdaTrmCS    , 4t		;Termination CS value
GBK pdaTrmEFR   , 4t		;Termination EFR value
GBK pdaTrmData  , 4t		;Termination data value

GBK             , 2t
GBK pdaIoWait   , 2t
GBK pdaSegTbl   , 4t
GBK pdaSegMax   , 4t		;Maximum valid local segment selector
GBK pdaDosSize  , 4t		;Total size for a DOS image
GBK pdaDosBase  , 4t		;Lowest offset to use for DOS image
GBK pdaRMIndex  , 4t		;Index for waiting for current real mode call
GBK pdaRMPrevClk, 4t		;Previous real mode clock value (INT 1A)
GBK pdaRMTimer  , 2t		;Selector for next PDA in real mode timer list
GBK             , 2t
GBK pdaDosFcbN  , 1t		;Size of the FCB table
GBK pdaDosFcbP  , 1t		;Number of protected FCB table entires
GBK             , 2t
GBK pdaRMIMskReg, 2t		;Real mode interrupt mask register
GBK pdaRMIReqReg, 2t		;Real mode interrupt request register
GBK pdaRMISrvReg, 2t		;Real mode interrupt in service register
GBK pdaRMIStatus, 1t		;Real mode interrupt status
GBK             , 1t
GBK pdaRMLTmrCnt, 12t		;Real mode latched timer count data
GBK pdaJunk     , 4t
GBK pdaShrRetry , 2t		;File sharing retry limit
GBK pdaShrDelay , 2t		;File sharing delay time (scheduler ticks)
GBK pdaResponse , 4t		;Response value
GBK pdaErrCode  , 4t		;Hardware error code value
GBK pdaDpmiFMdb , 4t		;Offset of first DPMI MDB
GBK pdaCR3      , 4t		;Value for CR3 for process
GBK pdaFpuState , 108t		;FPU state save area
GBK pdaIdtrVal  , 8t		;Value for loading the IDTR
				;Following 5 items must be together in this
				;  order!
GBK pdaIdt      , 256t*8t	;Interrupt descriptor table
GBK pdaPMExcept , 32t*8t	;Protected mode CPU exception vector table
GBK pdaRMExcept , 32t*8t	;Real mode CPU exception vector table
GBK pdaKnlInts  , 32t*8t	;XOS signal vector table
GBK pdaIdt00    , 32t*8t	;Signal vectors for 0 - 1Fh
GBK pdaIdt80    , 16t*8t	;Signal vectors for 80h - 8Fh
GBK pdaSesData  , 4t		;Offset of session data block
GBK pdaLATable  , 4t		;Offset of linear address table
GBK pdaLAFree   , 4t		;Linear address table free list pointer
GBK pdaTop      , 0		;Start of allocatable space
GBK pdaIOBmHdr  , mb_data	;IO permission bitmap block header
GBK pdaIOBitmap , 0		;IO permission bitmap (first allocated block)

;;;;GBK pdaLdtHdr   , 16t		;PDA memory block header for LDT and seg table
;;;;GBK pdaLdt      , 32t*8t+33t*8	;LDT and segment table for the process

pdaRMPage0==!pda_TSIZE-2000h	;Real mode page 0 (secondary mapping)
pdaPageDir==!pda_TSIZE-1000h	;Page directory for process
pdaRMSeg  ==!pdaPageDir+0000h	;Real mode segment
pdaPda    ==!pdaPageDir+0FE4h	;PDAs
pdaDskBufr==!pdaPageDir+0FECh	;Disk buffers
pdaSystem ==!pdaPageDir+0FF4h	;Common system extent
pdaPageTbl==!pdaPageDir+0FF8h	;Page tables
.PAGE
	.SBTTL	SDA offset definitions

$$$=!1000h
GBK sdaMagic    , 4t		;Magic number which identifies an SDA
GBK sdaSid      , 4t		;Segment ID
GBK sdaNext     , 4t		;Selector for next SDA
GBK sdaType     , 1t		;Segment type
GBK             , 3t
GBK sdaUseCnt   , 4t		;Use count
GBK sdaLevel    , 4t		;Compatibility level
GBK sdaName     , 48t		;Name of this segment
GBK sdaMdbHead  , 4t		;Offset of first MDA for this segment
GBK sdaMdbTail  , 4t		;Offset of last MDA for this segment
GBK sdaTotalSize, 4t		;Total length of the segment (pages)
GBK sdaSdaSize  , 4t		;Length of this SDA (pages)
GBK sdaProt     , 4t		;Protection value
GBK sdaACList   , 4t		;Offset of start of access control list
GBK sdaFPnt     , 0t		;First memory pointer for segment
.PAGE
	.SBTTL	Extended fork frame (XFF) definitions

;Define offsets in an extended fork context frame

.IF DEF xffBegin
  $$$=!xffBegin
.IFF
  $$$=!0
.ENDC
GBK xffStack    , 0t		;Start of fork context stack
GBK xffTss      , 104t		;Base of task state segment for process
GBK xffTmOutSub , 4t		;Offset of subroutine to call on time-out
GBK xffCmd      , 4t		;Device command bits
GBK xffDelay    , 4t		;IO delay value (fractional days)
GBK xffTimeOut  , 4t		;IO time-out value (fractional days)
GBK xffIoQHead  , 4t		;IO queue head pointer
GBK xffIoQTail  , 4t		;IO queue tail pointer
GBK xffIoQCnt   , 1t		;IO queue count
GBK xffRtdFlag  , 1t		;Rooted name flag
GBK xffSpoolUnit, 2t
GBK xffLockCnt  , 4t		;Number of locked disk cache buffers
GBK xffDcb      , 4t		;Offset of DCB for device
GBK xffBgnCopy  , 0t		;First item to copy from IORB
GBK xffMLckCnt  , 4t		;Number of locked memory pages
GBK xffQab      , 6t		;Address of user's QAB
GBK xffQueue    , 1t		;Offset of dcb_inpframe or dcb_outframe relative
				;  to DCB
GBK xffStatus1  , 1t		;Status bits
GBK xffBuffer1  , 6t		;Address of user's first buffer
GBK xffPda      , 2t		;Selector for PDA for process doing IO
GBK xffBuffer2  , 6t		;Address of user's second buffer
GBK xffFunc     , 2t		;Function bits
GBK xffParm     , 6t		;Address of user's parameter list
GBK xffHandle   , 2t		;Device handle
GBK xffLock     , 8t		;Memory lock table entry or table pointer
GBK xffOption   , 4t		;Options or command
GBK xffCount    , 4t		;Buffer 1 size
GBK xffPVFilOpt , 4t		;File option bits
GBK xffPPFilSpc , 8t		;File specification buffer address
GBK xffPLFilSpc , 8t		;File specification length word address
GBK xffPCFilSpc , 4t		;File specification byte count
GBK xffPXFilSpc , 4t		;File specification saved byte count
GBK xffPSFilSpc , 4t		;File specification buffer size
GBK xffHvValue1 , 4t		;Value flag bits
GBK xffHvValue2 , 4t
GBK xffNdValue1 , 4t
GBK xffNdValue2 , 4t
GBK xffRtdName  , 16t		;Rooted device name
GBK xffWaitList , 4t		;Selector of next XFF waiting for resource
GBK xffWaitBufr , 4t		;Selector of buffer we are waiting for
GBK xffWakeBlk  , 4t		;Offset of IO time-out timer wake block
GBK xffCallAddr , 8t		;Address for task switch to this frame
xffTssSel==!xffCallAddr+4
GBK xffReqNext  , 4t		;Selector of next extended fork frame in
				;  request list
GBK xffProcPrev , 4t		;Selector of previous XFF for process
GBK xffProcNext , 4t		;Selector of next XFF for process
GBK xffMagic    , 4t		;Magic number which identifies an XFF
GBK xffSysPrev  , 4t		;Selector of previous XFF in system
GBK xffSysNext  , 4t		;Selector of next XFF in system
xffBegin=!2000h-$$$
