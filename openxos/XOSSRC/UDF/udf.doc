                       UDFSRV Protocol Specification


All UDP messages sent to or from UDFSRV have the following general format.
Note that all multiple byte values are stored with the high order byte first.

     Name Offset Size       Description
   Type      0     1    Message type (always MT_UDF = 0x61)
   SubType   1     1    Message sub-type
   SeqNum    2     2    Sequence number
   ClientID  4     4    Client ID (usually the client's PID)
   Data      8     n    Message data

Following are the valid values for the SubType field:

     Name       Value     Description
   UDFM_DATAREQ   1    Data request (sent to server, may include data records)
   UDFM_OK        2    Normal response (sent by server, may include data
                          records)
   UDFM_NOTFND    3    Record not found response (sent by server)
   UDFM_EXISTS    4    Record exists response (sent by server)
   UDFM_BADPWD    5    Incorrect password response (sent by server)
   UDFM_INUSE     6    New user name or user ID is already in use (sent by
                         server)
   UDFM_NOINX     7    No indexable field specified for new entry (sent by
                         server)
   UDFM_ERROR     8    IO or other kernel reported error (sent by server,
                         includes error code only)
   UDFM_MSGFMT    9    Message format error response (sent by server)
   UDFM_UDFFMT   10    UDF format error response (Sent by server)
   UDFM_SERVER   11    Server logic error (sent by server, includes error
                         code only)
   UDFM_BUSY     12    Requested function is busy (sent by server)

   UDFM_BILLREQ  32    Billing request (sent to server)
   UDFM_BILLSTP  33    Stop billing (sent to server)
   UDFM_BILLACK  34    Bill user acknowledgement (sent to server)
   UDFM_BILLUDN  35    Bill user done (sent to server)
   UDFM_BILLUPD  36    Billing update (sent to server)

   UDFM_BILLACP  48    Billing request accepted (sent by server)
   UDFM_BILLUSR  49    Bill user (sent by server)
   UDFM_BILLUDA  50    Bill user done acknowledgement (sent by server)
   UDFM_BILLEND  51    Bill user end (send by server)

Data request messages (UDFM_DATAREQ) are sent to UDFSRV to obtain or modify
information about a user.  Information is requested by setting bits in the
Request field.  Information is modified by including a record for the item
to be modified which contains the new value.  UDFSRV responds to a data
request message by sending a normal data response message (UDFM_OK).  If this
response is not received in a reasonable time (generally about 3 seconds),
the data request message should be resent, up to 3 times.  The data request
message has the following format:

     Name   Offset  Size       Description
   Type       0       1    Message type (always MT_UDF = 0x61)
   SubType    1       1    Message sub-type (always UDFM_DATAREQ = 0x01)
   SeqNum     2       2    Sequence number
   ClientID   4       4    Client ID (usually the client's PID)
   Request    8       8    Request bits (see below)
   GroupLen  16       1    Length of the Group field
   Group     17       g    Group name
   KeyLen    17+g     1    Length of the Key field
   Key       18+g     k    Key value (User name or user ID)
   PsWdLen   18+g+k   1    Length of the PsWd field (not present unless
                             CHKPSWD bit is set in Request)
   PsWd      19+s+s   p    Password (not present unless CHKPSWD bit is set
                             in Request)
   ReqData   19+g+k+p r    Request data 

The ReqData field consists of 0 or more data records.  Each data record has
the following format:

    Name   Offset Size     Description
   RecType    0     1    Record type (see below)
   RecSize    1     1    Record data length (does not include the RecType and
                           RecSize bytes
   RecData    2     n    Record data

The Request field is bit encoded and can contain a combination of the following
  bits:

     Name       Value        Description
   PHONE     0x20000000  Return phone number
   COUNTRY   0x10000000  Return country
   ADDRESS   0x08000000  Return mailing address
   COMPANY   0x04000000  Return company name
   MAILNAME  0x02000000  Return mailing name
   USERID    0x01000000  Return user ID
   HISTORY   0x00400000  Return login history
   USEREXP   0x00200000  Return user expiration date/time
   PSWDEXP   0x00100000  Return password expiration date/time
   AVLCPU    0x00080000  Return available CPU limits
   INLCPU    0x00040000  Return initial CPU limits
   AVLMEM    0x00020000  Return available memory limits
   INLMEM    0x00010000  Return initial memory limits
   AVLPRIV   0x00008000  Return available priviledges
   INLPRIV   0x00004000  Return initial priviledges
   HOMEDIR   0x00001000  Return user directory
   PROGRAM   0x00000800  Return initial program specification
   USERDESC  0x00000400  Return user description
   PASSWORD  0x00000200  Return password
   USERNAME  0x00000100  Return user name
   DELETE    0x00000040  Delete record
   CREATE    0x00000020  Create record
   UPDATE    0x00000010  Update record
   UNLOCK    0x00000008  Unlock record
   LOCK      0x00000004  Lock record
   CHKPSWD   0x00000002  Check password
   KEYUID    0x00000001  Key is user ID (otherwise key is user name)

;The following are valid record types for the records in the ReqData field.
;  LIST items consist of a sequence of tightly packed ASCII items with the
;  high order bit set in the last character of each item.


     Name    Value  Type     Description
   USERNAME    1   ASCII   User name
   PASSWORD    2   ASCII   Password
   USERDESC    3   ASCII   User description
   PROGRAM     4   ASCII   Initial program
   HOMEDIR     5   ASCII   Home directory
   AVLPRIV     6   LIST    Available privileges
   INLPRIV     7   LIST    Initial active privileges
   AVLMEM      8   BINARY  Available memory limits (not implemented now)
   INLMEM      9   BINARY  Initial active memory limits (not implemented now)
   AVLCPU     10   BINARY  Available CPU limits (not implemented now)
   INLCPU     11   BINARY  Initial active CPU limits (not implemented now)
   PSWDEXP    12   BINARY  Password expiration (see below for format)
   USEREXP    13   BINARY  User expiration (see below for format0
   FLAGS      14   BINARY  User flags (not implemented now)
   HISTORY    15   BINARY  Login history (see below for format)
   DIRLIST    16   BINARY  User directory listing status (see below for format)
   ACCESS     17   LIST    Access class list
   AVLSECT    18   LIST    Available sections
   INLSECT    19   LIST    Initial sections
   ALGPROG    20   ASCII   Initial Allegro program
   ALGDIR     21   ASCII   Allegro home directory
   BILLING    24   BINARY  Billing data (see below for format)
   CRDTCARD   25   BINARY  Credit card information (see below format)
   USERID     32   ASCII   User ID
   MAILNAME   33   ASCII   Mailing name
   COMPANY    34   ASCII   Company name
   ADDR1      35   ASCII   Address - line 1
   ADDR2      36   ASCII   Address - line 2
   ADDR3      37   ASCII   Address - line 3
   ADDR4      38   ASCII   Address - line 4
   CITY       39   ASCII   City
   STATE      40   ASCII   State
   ZIP        41   ASCII   Postal (ZIP) code
   COUNTRY    42   ASCII   Country
   PHONE      43   ASCII   Phone number

The PSWDEXP and USEREXP records must contain 8 bytes which specify an XOS
standard date-time value.

The HISTORY record must contain 2, 4 or 20 bytes which are formated as follows:

     Name   Offset Size       Description
   LogInCnt    0     2    Number of successful logins
   FailCnt     2     2    Number of failed login attempts
   LogInDT     4     8    Date-time of last successful login (Allegro standard
                            date-time format)
   FailDT     12     8    Date-time of last failed login attempt (Allegro
                            standard date-time format)

The DIRLIST record must contain a single byte.  The value of the byte is
bit encoded and may contain a combination of the following values.

     Name    Value    Description
   INCLUDE   0x01  Include user in the user directory
   USERDESC  0x02  Include user description in directory entry
   ADDRESS   0x04  Include address in directory entry
   PHONE     0x08  Include phone number in directory entry

The BILLING record has the following format:

     Name   Offset Size      Description
   BillSts     0     1    Billing status:
                            0 = Never billed
                            1 = Normal
                            2 = One reject
                            3 = More than one reject
   BillDay     1     1    Billing day (1-31)
   BillType    2     1    Billing type
   Flags       3     1    Flag bits:
			    01 = Detailed billing request
   FreeTime    4     4    Total free connect time (seconds)
   BilledTime  8     4    Total billed connect time (seconds)
   ConnChrg   12     4    Total connect charges (cents)
   OtherChrg  16     4    Total other charges (cents)
   PayAmnt    20     4    Amount of last payment
   PayDate    24     4    Date of last payment (Allegro standard date format)

The CRDTCARD record has the following format:

     Name  Offset Size       Description
   CardType    0     1    Credit card type:
                            1 = Visa
                            2 = MasterCard
                            3 = American Express
                            4 = Discover
                            5 = JCB
                            6 = JAL
                            7 = Diners Club
                            8 = Carte Blanche
               1     1    Not used
   CardMonth   2     1    Expiration month (1-12)
   CardYear    3     1    Expiration year (year - 1900)
   CardLimit   4     4    Limit amount (cents)
   CardZip     8     4    Zip code (binary value, 9 digits, 5 digit codes
                            are right 0 filled)
   CardNum    12     v    Card number (ASCII - extends to end of record)

Normal response messages (UDFM_OK) sent from UDFSRV have the following format:

     Name   Offset  Size       Description
   Type        0      1    Message type (always MT_UDF = 0x61)
   SubType     1      1    Message sub-type (always UDFM_OK = 0x02)
   SeqNum      2      2    Sequence number (from UDFM_DATAREQ message)
   ClientID    4      4    Client ID (from UDFM_DATAREQ message)
   Response    8      8    Response bits (see below)
   RspData    16      v    Response data 

The Response Field is bit encoded and can contain a combination of the
  following bits:

     Name       Value        Description
   PHONE     0x20000000  Phone number returned
   COUNTRY   0x10000000  Country returned
   ADDRESS   0x08000000  Mailing address returned
   COMPANY   0x04000000  Company name returned
   MAILNAME  0x02000000  Mailing name returned
   USERID    0x01000000  User ID returned
   HISTORY   0x00400000  Login history returned
   USEREXP   0x00200000  User expiration date/time returned
   PSWDEXP   0x00100000  Password expiration date/time returned
   AVLCPU    0x00080000  Available CPU limits returned
   INLCPU    0x00040000  Initial CPU limits returned
   AVLMEM    0x00020000  Available memory limits returned
   INLMEM    0x00010000  Initial memory limits returned
   AVLPRIV   0x00008000  Available priviledges returned
   INLPRIV   0x00004000  Initial priviledges returned
   HOMEDIR   0x00001000  User directory returned
   PROGRAM   0x00000800  Initial program specification returned
   USERDESC  0x00000400  User description returned
   PASSWORD  0x00000200  Password returned
   USERNAME  0x00000100  User name returned
   DELETE    0x00000040  Record has been deleted
   CREATE    0x00000020  Record has been created
   UPDATE    0x00000010  Record has been updated
   LOCKED    0x00000004  Record is locked
   CKDPSWD   0x00000002  Password checked

The RspData field has the same format as the ReqData field in the MT_DATAREQ
message.  The same record types are valid.

The billing messages provide the interface between UDFSRV and the billing
system.  To start a billing cycle, the billing program (in this case, the
client) sends a billing request message (UDFM_BILLREQ) to UDFSRV.  UDFSRV
responds immediately with a UDFM_BILLACP message which is a simple
acknowledgement the the request was received.  If a billing cycle is
already in progress for the requested group, a UDFM_BUSY response is
returned instead.

UDFSRV will then send to the client as many UDFM_BILLUSR messages as the
client indicated he could handle at once (in the Window field in the
UDFM_BILLREQ message).  The client sends a UDFM_ACK message when each
UDFM_BILLUSR message is received.  It is not necessary to send a seperate
UDFM_BILLACK message for each UDFM_BILLUSR message.  Each UDFM_BILLACK
message acknowledges all preceeding UDFM_BILLUSR messages.  To reduce network
traffic, the client can delay sending UDFM_BILLACK message for about one
second (assuming a 3 second retransmit time-out).

Once the billing processing has been done for the user, the client sends a
UDFM_BILLUDN message.  This message will also acknowledge receiving the
UDFM_BILLUSR message if a UDFM_BILLACK message has not been received.  When
UDFSRV receives the UDFM_BILLUDN message it sends a UDFM_BILLUDA message.
This message can also be delayed and its acknowledgment is successive.

Note that only a single sequence number is used for messages in both directions.
When the server receives the UDFM_BILLUDN message it will send another
UDFM_BILLUSR message (assuming there are more users to bill).

When all of the UDFM_BILLUSR messages have been sent, UDFSRV sends a
UDFM_BILLEND message to indicate the end of the billing cycle.  The client
must also respond to this message with a UDFM_BILLACK message.

The client may request that the billing cycle be interrupted before it is
complete by sending a UDFM_BILLSTP message instead of a UDFM_BILLUDN.  UDFSRV
will respond by terminating the billing cycle and immediately sending a
UDFM_BILLEND message.

Also, any program can at any time (except during an active billing cycle)
send a UDFM_BILLUPD message to update the billing information for a user.
UDFSRV will respond to this message with a UDFM_BILLACP message.

Retransmission of the UDFM_BILLREQ, UDFM_BILLUDN, UDFM_BILLSTP, and
UDFM_BILLUPD messages are the responsibility of the client.  Retransmission
of the UDFM_BILLUSR and UDFM_BILLEND messages are the responsibiliby of UDFSRV.

This sequence is summerized below: (this simplified diagram does not show
retransmission and assumes a window size of 1

    Billing program         UDFSRV

    UDFM_BILLREQ   ------->

                   <-------   UDFM_BILLACP

                   <-------   UDFM_BILLUSR  ---
                                               |
    UDFM_BILLACK * ------->                    |
                                               |--- repeated as needed
    UDFM_BILLUDN   ------->                    |
                                               |
                   <------- * UDFM_BILLUDA  ---

                   <-------   UDFM_BILLEND

    UDFM_BILLACK   ------->

Messages marked with * may be delayed or eliminated if another message can
be used as the acknowledgement.  The UDFM_BILLACK packet should not be sent if
the UDFM_BILLUDN packet can be sent within 1 second.  The UDFM_BILLUDA packet
should not be sent if the next UDFM_BILLUSR or the UDFM_BILLEND packet can be
sent with 1 second.

Retransmission time-outs should be on the order of 2 to 3 seconds.  The
UDFM_BILLACK and UDFM_BILLUDA packets should be delayed for at most 1 second.


The billing request (UDFM_BILLREQ) message has the following format:

     Name   Offset  Size      Description
   Type        0      1    Message type (always MT_UDF = 97)
   SubType     1      1    Message sub-type (always UDFM_BILLREQ = 32)
   SeqNum      2      2    Sequence number
   ClientID    4      4    Client ID (usually client's PID)
   Handle      8      4    0
   BillDay    12      1    Billing day
   BillMonth  13      1    Billing month
   Window     14      1    Window size
              15      1    Reserved, must be 0
   Options    16      8    To be defined
   GroupLen   24      1    Length of the group name
   Group      25      g    Group name

The billing request accepted (UDFM_BILLACP) message has the following format:

     Name   Offset  Size      Description
   Type        0      1    Message type (always MT_UDF = 97)
   SubType     1      1    Message sub-type (always UDFM_BILLACP = 33)
   SeqNum      2      2    Sequence number (from UDFM_BILLREQ message)
   ClientID    4      4    Client ID (from UDFM_BILLREQ message)
   Handle      8      4    Billing cycle handle
   Window     12      1    Window size
              13      3    Reserved, must be 0
   Options    16      8    To be defined

The bill user (UDFM_BILLUSR) message has the following format:

     Name    Offset Size      Description
   Type         0     1    Message type (always MT_UDF = 97)
   SubType      1     1    Message sub-type (always UDFM_BILLUSR = 35)
   SeqNum       2     2    Sequence number (must be 1 more than value from
                             UDFM_BILLREQ or previous UDFM_BILLUSR message)
   ClientID     4     4    Client ID (must be same as in UDFM_BILLREQ message)
   Handle       8     4    Billing cycle handle (as returned by UDFM_BILLACP
                             message)
   Options     12     1    Billing options
               13     7    Reserved, must be 0
   UserLen     20     1    Length of the user name
   User        21     u    User name
   LastDay     21+u   1    Previous billing day
   LastMonth   22+u   1    Previous billing month
   CardType    23+u   1    Credit card type
   CardMonth   24+u   1    Credit card expiration month
   CardYear    25+u   1    Credit card expiration year
   CardZipLen  26+u   1    Credit card Zip code length
   CardZip     27+u   z    Credit card Zip code (ASCII)
   CardLimit   27+u+z 4    Credit card limit (cents)
   CardNumLen  31+u+z 1    Length of the credit card number
   CardNum     32+u+z n    Credit card number (ASCII)

The billing options field is bit encoded and may contain a combination of the
following bits:

     Name    Value      Description
   SUMMARY   0x01    Return billing summary data
   MONTHLY   0x02    Do monthly billing
   DETAIL    0x04    Generate detail billing report and E-mail to user

The bill user done (UDFM_BILLACK) message has the following format:

     Name   Offset Size      Description
   Type        0     1    Message type (always MT_UDF = 97)
   SubType     1     1    Message sub-type (always UDFM_BILLACK = 36)
   SeqNum      2     2    Sequence number (must be value from the matching
                            UDFM_BILLUSR message)
   ClientID    4     4    Client ID (must be same as in UDFM_BILLREQ message)
   Handle      8     4    Billing cycle handle (as returned by UDFM_BILLACP
                            message)

The bill user done (UDFM_BILLUDN message has the following format:

     Name   Offset Size      Description
   Type        0     1    Message type (always MT_UDF = 97)
   SubType     1     1    Message sub-type (always UDFM_BILLUDN = 37)
   SeqNum      2     2    Sequence number (must be value from the matching
                            UDFM_BILLUSR message)
                            sequence number for billing cycle)
   ClientID    4     4    Client ID (must be same as in UDFM_BILLREQ message)
   Handle      8     4    Billing cycle handle (as returned by UDFM_BILLACP
                              message)
   BillSts    12     1    Billing status:
                            0 = Never billed
                            1 = Normal
                            2 = One reject
                            3 = More than one reject
              13     3    Not used
   FreeTime   16     4    Total free connect time (seconds)
   BilledTime 20     4    Total billed connect time (seconds)
   ConnChrg   24     4    Total connect charges (cents)
   OtherChrg  28     4    Total other charges (cents)
   PayAmnt    32     4    Amount of last payment
   PayDate    36     4    Date of last payment (Allegro standard date format)

The bill user done (UDFM_BILLUDA) message has the following format:

     Name   Offset Size      Description
   Type        0     1    Message type (always MT_UDF = 97)
   SubType     1     1    Message sub-type (always UDFM_BILLUDA = 38)

   SeqNum      2     2    Sequence number (must be value from the matching
                            UDFM_BILLUSR message)
   ClientID    4     4    Client ID (must be same as in UDFM_BILLREQ message)
   Handle      8     4    Billing cycle handle (as returned by UDFM_BILLACP
                            message)

Message types greater than 2 but less than 32 are sent by UDFSRV as an error
response.  These messages have the following format:

     Name   Offset  Size      Description
   Type        0      1    Message type (always MT_UDF = 0x61)
   SubType     1      1    Message sub-type
   SeqNum      2      2    Sequence number (from client's message)
   ClientID    4      4    Client ID (from client's message)
   ErrorCode   8      4    Error code
              12      4    Reserved, always 0

The error code value is either a negative Allegro error code or a positive
server error code as follows:

     Name    Value     Description
   NoInfo      0    No additional error information available
   IndexErr    1    Internal index error
