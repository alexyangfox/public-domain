;Define register offsets relative to the start of our 256 byte register block -
;  these offsets can be used for both IO and memory mapped register access

RTR_NETADDR =!000h		;( 6) Network address
				;( 2) Reserved
RTR_MULTIMAP=!008h		;( 8) Multicast map
RTR_TSD0    =!010h		;( 4) Transmit status of descriptor 0
RTR_TSD1    =!014h		;( 4) Transmit status of descriptor 1
RTR_TSD2    =!018h		;( 4) Transmit status of descriptor 2
RTR_TSD3    =!01Ch		;( 4) Transmit status of descriptor 3
RTR_TSAD0   =!020h		;( 4) Transmit start address of descriptor 0
RTR_TSAD1   =!024h		;( 4) Transmit start address of descriptor 1
RTR_TSAD2   =!028h		;( 4) Transmit start address of descriptor 2
RTR_TSAD3   =!02Ch		;( 4) Transmit start address of descriptor 3
RTR_RBADDR  =!030h		;( 4) Receive buffer address
RTR_ERBC    =!034h		;( 2) Early receive byte count register
RTR_ERS     =!036h		;( 1) Early receive status register
RTR_CMD     =!037h		;( 1) Command register
RTR_RBTAKE  =!038h		;( 2) Receive buffer taker pointer
RTR_RBPUT   =!03Ah		;( 2) Receive buffer putter pointer
RTR_INTMASK =!03Ch		;( 2) Interrupt mask register
RTR_INTSTS  =!03Eh		;( 2) Interrupt status register
RTR_TXCFG   =!040h		;( 4) Transmit configuration register
RTR_RXCFG   =!044h		;( 4) Receive configuration register
RTR_TIMECNT =!048h		;( 4) Timer count register
RTR_MPC     =!04Ch		;( 4) Missed packet count register
RTR_EEPCFG  =!050h		;( 1) EEPROM command register
RTR_CONFIG0 =!051h		;( 1) Configuration register 0
RTR_CONFIG1 =!052h		;( 1) Configuration register 1
				;( 1) Reserved
RTR_TIMEINT =!054h		;( 4) Timer interrupt register
RTR_MEDIASTS=!058h		;( 1) Media status register
RTR_CONFIG3 =!059h		;( 1) Configuration register 3
RTR_CONFIG4 =!05Ah		;( 1) Configuration register 4
RTR_MULTINT =!05Ch		;( 2) Multiple interupt select
RTR_PCIREV  =!05Eh		;( 1) PCI revision ID
				;( 1) Reserved
RTR_TSAD    =!060h		;( 2) Transmit status of all descriptors
RTR_BMCTL   =!062h		;( 2) Base mode control register
RTR_BMSTS   =!064h		;( 2) Base mode status register
RTR_ANADV   =!066h		;( 2) Auto-negotiation advertisement register
RTR_ANLPAR  =!068h		;( 2) Auto-negotiation link partner register
RTR_ANEXP   =!06Ah		;( 2) Auto-negotiation expansion register
RTR_DISCNT  =!06Ch		;( 2) Discount count register
RTR_FSCCNT  =!06Eh		;( 2) False carrier sense count register
RTR_NWAYTST =!070h		;( 2) N-way test register
RTR_RXERCNT =!072h		;( 2) RX_ER count register
RTR_CSCFG   =!074h		;( 2) CS configuration register
				;( 2) Reserved
RTR_PHY1PARM=!078h		;( 4) PHY parameter 1 register
RTR_TWISTER =!07Ch		;( 4) Twister parameter register
RTR_PHY2PARM=!080h		;( 4) PHY parameter 2 register
				;( 3) Reserved
RTR_PMCRC0  =!084h		;( 1) Power management CRC for wakeup frame 0
RTR_PMCRC1  =!085h		;( 1) Power management CRC for wakeup frame 1
RTR_PMCRC2  =!086h		;( 1) Power management CRC for wakeup frame 2
RTR_PMCRC3  =!087h		;( 1) Power management CRC for wakeup frame 3
RTR_PMCRC4  =!088h		;( 1) Power management CRC for wakeup frame 4
RTR_PMCRC5  =!089h		;( 1) Power management CRC for wakeup frame 5
RTR_PMCRC7  =!08Ah		;( 1) Power management CRC for wakeup frame 6
RTR_PMCRC7  =!08Bh		;( 1) Power management CRC for wakeup frame 7
RTR_PMWAKE0 =!08Ch		;( 8) Power management wakeup frame 0
RTR_PMWAKE1 =!094h		;( 8) Power management wakeup frame 1
RTR_PMWAKE2 =!09Ch		;( 8) Power management wakeup frame 2
RTR_PMWAKE3 =!0A4h		;( 8) Power management wakeup frame 3
RTR_PMWAKE4 =!0ACh		;( 8) Power management wakeup frame 4
RTR_PMWAKE5 =!0B4h		;( 8) Power management wakeup frame 5
RTR_PMWAKE6 =!0BCh		;( 8) Power management wakeup frame 6
RTR_PMWAKE7 =!0C4h		;( 8) Power management wakeup frame 7
RTR_PMLSB0  =!0CCh		;( 1) Power management LSB of mask in frame 0
RTR_PMLSB1  =!0CDh		;( 1) Power management LSB of mask in frame 1
RTR_PMLSB2  =!0CEh		;( 1) Power management LSB of mask in frame 2
RTR_PMLSB3  =!0CFh		;( 1) Power management LSB of mask in frame 3
RTR_PMLSB4  =!0D0h		;( 1) Power management LSB of mask in frame 4
RTR_PMLSB5  =!0D1h		;( 1) Power management LSB of mask in frame 5
RTR_PMLSB6  =!0D2h		;( 1) Power management LSB of mask in frame 6
RTR_PMLSB7  =!0D3h		;( 1) Power management LSB of mask in frame 7
RTR_FLASH   =!0D4h		;( 4) Flash memory read/write register
RTR_CONFIG5 =!0D8h		;( 1) Configuration register 5
				;(23) Reserved
RTR_CBFE    =!0F0h		;( 4) Cardbus function event register
RTR_CBEM    =!0F4h		;( 4) Cardbus event mask register
RTR_CBPS    =!0F8h		;( 4) Cardbus present state register
RTR_CBFE    =!0FCh		;( 4) Cardbus force event register

;Define bits in the receive status register in the received packet header

RTR_RSR$MAR =!8000h		;Multicase address received
RTR_RSR$PAM =!4000h		;Physical address received
RTR_RSR$BAR =!2000h		;Broadcast address received
RTR_RSR$ISE =!0020h		;Invalid symbol error
RTR_RSR$RUNT=!0010h		;Runt packet
RTR_RSR$LONG=!0008h		;Long packet
RTR_RSR$CRC =!0004h		;CRC error in packet
RTR_RSR$FAE =!0002h		;Frame alignment error
RTR_RSR$ROK =!0001h		;Receive OK

;Define bits for RTR_CMD

RTR_CMD$RESET=!10h		;Reset
RTR_CMD$RXE  =!08h		;Receiver enable
RTR_CMD$TXE  =!04h		;Transfer enable
RTR_CMD$BFRE =!01h		;Receive buffer empty

;Define bits in the transmit descriptor status registers

RTR_TSD$CRS   =!80000000h	;Carrier sense lost
  RTR_TSD%CRS   =!31t
RTR_TSD$TABT  =!40000000h	;Transmit abort
  RTR_TSD%TABT  =!30t
RTR_TSD$OWC   =!20000000h	;Out of window collision
  RTR_TSD%OWC   =!29t
RTR_TSD$CDH   =!10000000h	;CD heart beat
  RTR_TSD%CDH   =!28t
RTR_TSD$NCC   =!0F000000h	;Number of collisions count
RTR_TSD$ERTXTH=!003F0000h	;Early transmit threshold
RTR_TSD$TOK   =!00008000h	;Transmit OK
RTR_TSD$TUN   =!00004000h	;Transmit FIFO underrun
  RTR_TSD%TUN   =!14t
RTR_TSD$OWN   =!00002000h	;Driver owns descriptor
RTR_TSD$SIZE  =!00001FFFh	;Buffer size

;Define bits for RTR_INTMASK and RTR_INTSTS

RTR_INT$SER=!8000		;System error interrupt
RTR_INT$TO =!4000		;Time-out interrupt
RTR_INT$CLC=!2000		;Cable length change interrupt
RTR_INT$RFO=!0040		;Receive FIFO overflow interrupt
RTR_INT$ULC=!0020		;Packet underrun/link change interrupt
RTR_INT$RBO=!0010		;Receive buffer overflow interrupt
RTR_INT$TER=!0008		;Transmit error interrupt
RTR_INT$TOK=!0004		;Transmit OK interrupt
RTR_INT$RER=!0002		;Receive error interrupt
RTR_INT$ROK=!0001		;Receive OK interrupt

;Define bits for RTR_RXCFG

RTR_RXC$ERTH    =!0F0000000h	;Early Rx threshold bits
RTR_RXC$MULERINT=!000020000h	;Mutilple early interrupt select
RTR_RXC$RER8    =!000010000h	;????
RTR_RXC$RXFTH   =!00000E000h	;Receive FIFO threshold
RTR_RXC$RBLEN   =!000001800h	;Receive buffer length
RTR_RXC$MXDMA   =!000000700h	;Maximum DMA burst size
RTR_RXC$WRAP    =!000000080h	;Disable packet wrap in buffer
RTR_RXC$EEPTYPE =!000000040h	;EEPROM type
RTR_RXC$AER     =!000000020h	;Accept error packets
RTR_RXC$AR      =!000000010h	;Accept runt packets
RTR_RXC$AB      =!000000008h	;Accept broadcast packets
RTR_RXC$AM      =!000000004h	;Accept multicast packets
RTR_RXC$APM     =!000000002h	;Accept physical address match packets
RTR_RXC$AAP     =!000000001h	;Accept all packets (promiscuous mode)

;Define bits for RTR_MEDIASTS

RTR_MEDIASTS$TXFCE  =!80h	;Tx flow control enable
RTR_MEDIASTS$RXFCE  =!40h	;Rx flow control enable
RTR_MEDIASTS$AUXSTS =!10h	;Aux. power present status
RTR_MEDIASTS$SPEED10=!08h	;Speed is 10MHz
RTR_MEDIASTS$LINKDWN=!04h	;Link is down
RTR_MEDIASTS$TXPF   =!02h	;Pause packet sent (input is paused)
RTR_MEDIASTS$RXPF   =!01h	;Pause packet received (output is paused)

;Define bits for RTR_BMCTL

RTR_BMCTL$RESET  =!8000h	;Reset PHY
RTR_BMCTL$SPEED  =!2000h	;Speed set (1 = 100MHz, 0 = 10MHz)
RTR_BMCTL$AUTO   =!1000h	;Auto negotiation enable
RTR_BMCTL$RESTART=!0200h	;Restart auto-negotiation
RTR_BMCTL$DUPLEX =!0100h	;Duplex mode (1 = FD, 0 = HD)

;Define bits for RTR_BMSTS

RTR_BMSTS$AUTOCMP=!0020h	;Auto-negotiation is complete
RTR_BMSTS$RMTFLT =!0010h	;Remote fault
RTR_BMSTS$LINK   =!0004h	;Link status
RTR_BMSTS$JABBER =!0002h	;Jabber condition detected
