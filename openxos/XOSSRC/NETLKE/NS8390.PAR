	.SBTTL	System level parameter file NS8390.PAR
	.SBTTL	Definitions for National Semiconductor 8390 Ethernet controller

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

.IF NDF DEFINES
	.NLIST
	.INCLUD	XOSINC:\XMAC\DEFINES.PAR
	.LIST
.ENDC
	.PARM

;Following are the 8390 LAN controller page 0 registers

P_CMDREG =!P_8390+00h	;(both)  Command register
P_CLDA0  =!P_8390+01h	;(read)  Current local DMA address register 0 (low byte)
P_PSTART =!P_8390+01h	;(write) Page start register
P_CLDA1  =!P_8390+02h	;(read)  Current local DMA address register 1 (high
			;	   byte)
P_PSTOP  =!P_8390+02h	;(write) Page stop register
P_BNRY   =!P_8390+03h	;(both)  Boundary pointer register
P_TSR    =!P_8390+04h	;(read)  Transmit status register
P_TPSR   =!P_8390+04h	;(write) Transmit page start address register
P_NCR    =!P_8390+05h	;(read)  Number of collisions register
P_TBCR0  =!P_8390+05h	;(write) Transmit byte count register 0 (low byte)
P_FIFO   =!P_8390+06h	;(read)  FIFO data register
P_TBCR1  =!P_8390+06h	;(write) Transmit byte count register 1 (high byte)
P_ISR    =!P_8390+07h	;(both)  Interrupt status register
P_CRDA0  =!P_8390+08h	;(read)  Current remote DMA address register 0 (low
			;	   byte)
P_RSAR0  =!P_8390+08h	;(write) Remote start address register 0 (low byte)
P_CRDA1  =!P_8390+09h	;(read)  Current remote dma address register 1 (high
			;	   byte)
P_RSAR1  =!P_8390+09h	;(write) Remote start address register 1 (high byte)
P_RBCR0  =!P_8390+0Ah	;(write) Remote byte count register 0 (low byte)
P_RBCR1  =!P_8390+0Bh	;(write) Remote byte count reg 1 (high byte)
P_RSR    =!P_8390+0Ch	;(read)  Receive status register
P_RCR    =!P_8390+0Ch	;(write) Receive configuration reg
P_CNTR0  =!P_8390+0Dh	;(read)  Tally counter 0 register (frame alignment
			;	   errors)
P_TCR    =!P_8390+0Dh	;(write) Transmit configuration register
P_CNTR1  =!P_8390+0Eh	;(read)  Tally counter 1 register (CRC errors)
P_DCR    =!P_8390+0Eh	;(write) Data configuration register
P_CNTR2  =!P_8390+0Fh	;(read)  Tally counter 2 register (missed packet errors)
P_IMR    =!P_8390+0Fh	;(write) Interrupt mask register

;Following are the 8390 LAN controller page 1 registers

P_NETADR =!P_8390+01h 	;(both)  Network address registers (6 registers)
P_CURR   =!P_8390+07h	;(both)  Current page register
P_MLTADR =!P_8390+08h	;(both)  Multicast address registers (8 registers)

;Define bits for the 8003 control register (P_CTLREG)

CTL$RESET=!80h	        ;Reset LAN controller
CTL$ENASH=!40h		;Enable PC access to shared memory
CTL$DECOD=!3Fh 		;Memory address bits, corresponding to SA18-13, SA19
			;  is assumed to be 1

;Define bits for the 8390 CR register (P_CMDREG)

CMD$PG2  =!80h		;Select register page 2
CMD$PG1  =!40h		;Select register page 1
CMD$NODMA=!20h		;Disable remote DMA
CMD$SEND =!18h		;Remote DMA send packet command
CMD$WRITE=!10h		;Remote DMA write command
CMD$READ =!08h		;Remote DMA read command
CMD$TXP  =!04h		;Transmit packet command
CMD$START=!02h		;Start command
CMD$STOP =!01h		;Software reset command

;Define bits for the 8390 ISR and IMR registers (P_ISR and P_IMR)

INT$RST  =!80h		;Reset status indicator (P_ISR only)
INT$RDC  =!40h		;Remote DMA complete interrupt
INT$CNT  =!20h		;Counter overflow interrupt
INT$OVW  =!10h		;Overwrite warning interrupt
INT$TXE  =!08h		;Transmit error interrupt
INT$RXE  =!04h		;Receive error interrupt
INT$PTX  =!02h		;Packet transmitted interrupt
INT$PRX  =!01h		;Packet received interrupt

;Define bits for the 8390 data configuration register (P_DCR)

DCR$FT12 =!60h		;Set fifo threshhold at 12 bytes
DCR$FT8  =!40h		;Set fifo threshhold at 8 bytes
DCR$FT4  =!20h		;Set fifo threshhold at 4 bytes
DCR$FT2  =!00h		;Set fifo threshhold at 2 bytes
DCR$ARM  =!10h		;Autoinitialize remote
DCR$LBD  =!08h		;Loop-back disable
DCR$LAS  =!04h		;Long addr select
DCR$BOS  =!02h		;Byte order select
DCR$WTS  =!01h		;Word transfer mode select

;Define bits for the 8390 receive configuration register (P_RCR)

RCR$MON  =!20h		;Monitor mode
RCR$PRO  =!10h		;Promiscuous physical receive mode
RCR$AM   =!08h		;Accept multicast packets
RCR$AB   =!04h		;Accept broadcast packets
RCR$AR   =!02h		;Accept runt packets
RCR$SEP  =!01h		;Save error packets

;Define bits for the 8390 transmit configuration register (P_TCR)

TCR$OFST =!10h		;Collision offset enable
TCR$ATD  =!08h		;Auto transmit disable
TCR$LBM3 =!06h		;Loop-back mode 3
TCR$LBM2 =!04h		;Loop-back mode 2
TCR$LBM1 =!02h		;Loop-back mode 1
TCR$NOCRC=!01h		;Inhibit CRC generation on transmit

;Define bits for 8390 receive status register (P_RSR)

RSR$DEF  =!80h		;Deferring
RSR$DIS  =!40h		;receiver disabled
RSR$PHY  =!20h		;Physical/multicase address
RSR$MPA  =!10h		;Missed packet
RSR$FO   =!08h		;FIFO overrun
RSR$FAE  =!04h		;Frame alignment error
RSR$CRC  =!02h		;CRC error
RSR$PRX  =!01h		;Packet received intact

;Define bits for the 8390 transmit status register (P_TSR)

TSR$OWC  =!80h		;Out of window collision
TSR$CDH  =!40h		;Collision detect heartbeat
TSR$FU   =!20h		;FIFO underrun
TSR$CRS  =!10h		;Carrier sense lost
TSR$ABT  =!08h		;Transmit aborted
TSR$COL  =!04h		;Transmit collided
TSR$PTX  =!01h		;Packet transmited
