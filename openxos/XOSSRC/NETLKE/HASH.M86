;Subroutine to calculate bit in the multi-cast hash table
;	c{ESI} = Offset of node address string
;	CALL	calhash
;	c{EBX} = Hash index (0 - 63t)

POLYL=!1DB6h
POLYH=!04C1h

calhash:MOVL	EAX, #0FFFFh		;Initialize CRC value
	MOVL	EDX, EAX
	MOVB	CH, #3t	  		;Do 3 words of address
2$:	MOVB	CL, #16t  		;Set innerloop count
	MOVW	BP, [ESI]  		;Get a word of address
	ADDL	ESI, #2.B		;Bump pointer
4$:	MOVL	EBX, EDX		;Get crch
	ROLW	BX, #1			;Bit31 to LSB
	XORL	EBX, EBP		;Combine with incoming
	SALW	AX, #1			;Shift left entire crc
	RCLW	DX, #1
	ANDL	EBX, #1.B		;Get control bit
	JE	6$.S			;Zero = no xor
	XORL	EAX, #POLYL		;XOR CRC with polynomial
	XORL	EDX, #POLYH
6$:	ORL	EAX, EBX		;Or in control bit
	RORW	BP, #1			;Rotate incoming word right 1
	DECB	CL			;Decrement bit counter
	JNE	4$.S			;Loop a word
	DECB	CH			;Decrement word counter
	JNE	2$.S			;Loop 3 words

;When get here have CRC in AX-DX, now reverse bit order

	MOVL	ECX, #10t
8$:	SALB	AL, #1 			;Shift out of al left
	RCRB	AH, #1 			;Right thru carry into ah
	LOOP	ECX, 8$			;Do 9 times to get last bit thru carry
	MOVZBL	EBX, AH			;Get the hash index
	RET


	SHRL	EBX, #3			;Get register number
	ANDB 	AH, #7
	MOVB	CL, AH
	MOVB	AH, #1
	SHLB	AH, CL
	MOVL	EDX, idb_bioreg.B[ESI]
	LEAL	EDX, P_1HASH.B[EDX, EBX]
	INB	[DX]
	ORB	AL, AH
	ORB	[DX]
	RET
