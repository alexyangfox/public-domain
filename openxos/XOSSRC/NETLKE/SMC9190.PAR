	.SBTTL	System level parameter file SMC9190.PAR
	.SBTTL	Definitions for Standard Microsystems Corp. SMC91C90 Ethernet controller

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

.IF NDF DEFINES
	.NLIST
	.INCLUD	XOSINC:\XMAC\DEFINES.PAR
	.LIST
.ENDC
	.PARM

;Define the SMC91C90 LAN controller bank 0 registers

P_B0TCR  =!00h			;RW Transmit control register
P_B0EPHSR=!02h			;R  EPH status register
P_B0RCR  =!04h			;RW Receive control register
P_B0ECR  =!06h			;R  Error counts register
P_B0MSR  =!08h			;R  Memory size register
P_B0FMR  =!09h			;R  Free memory available register
P_B0MCR  =!0Ah			;RW Memory configuration register
P_B0BSR  =!0Eh			;RW Bank select register

;Define the SMC91C90 LAN controller bank 1 registers

P_B1CFG  =!00h			;RW Configuration register
P_B1BASEP=!02h			;RW Base address register
P_B1ENA  =!04h			;RW Ethernet address registers (6 bytes)
P_B1GEN  =!0Ah			;RW General purpose register
P_B1CON  =!0Ch			;RW Control register
P_B1BSR  =!0Eh			;RW Bank select register

;Define the SMC91C90 LAN controller bank 2 registers

P_B2MMUCR=!00h			; W MMU command register
P_B2MMUSR=!00h			;R  MMU status register
P_B2TPNR =!02h			;RW Transmit packet number register
P_B2APNR =!03h			;R  Allocated packet number register
P_B2TFIFO=!04h			;R  Transmit FIFO register
P_B2RFIFO=!05h			;R  Receive FIFO register
P_B2DPNTR=!06h			;RW Data pointer register
P_B2DATA =!08h			;RW Data register (4 bytes)
P_B2INTSR=!0Ch			;R  Interrupt status register
P_B2INTAR=!0Ch			; W Interrupt acknowledge register
P_B2INTMR=!0Dh			;RW Interrupt mask register
P_B2BSR  =!0Eh			;RW Bank select register

;Define the SMC91C90 LAN controller bank 3 registers

P_B3MCHTR=!00h			;RW Multicast hash table registers
P_B3BSR  =!0Eh			;RW Band select register

;Define bits for P_B0TCR

TCR$EPHLB =!2000h		;EPH loopback
TCR$SSQETE=!1000h		;Stop transmit on SQET error
TCR$FDUPLX=!0800h		;Full duplex
TCR$MONCSN=!0400h		;Monitor carrier while transmitting
TCR$NOCRC =!0100h		;Disable transmit CRC
TCR$PADEN =!0080h		;Short packet padding enable
TCR$FORCOL=!0004h		;Force collision
TCR$LCLLB =!0002h		;Local loopback
TCR$TXENA =!0001h		;Transmit enable

;Define bits for P_B0EPHSR

EPHSR$TUNRRN=!8000h		;Transmit under-run
EPHSR$LINKOK=!4000h		;TP link OK
EPHSR$ROVRRN=!2000h		;Receive overrun
EPHSR$CNTROL=!1000h		;Counter roll-over
EPHSR$ECXDEF=!0800h		;Excessive deferral
EPHSR$LSTCAR=!0400h		;Lost carrier sense
EPHSR$LATCOL=!0200h		;Late collision detected
EPHSR$TDEFR =!0080h		;Transmit deferred
EPHSR$LTBC  =!0040h		;Last transmitted frame was a broadcast
EPHSR$SQET  =!0020h		;Signal quality error test error
EPHSR$16COL =!0010h		;16 collisions reached
EPHSR$LTMC  =!0008h		;Last transmitted frame was a multicast
EPHSR$MULCOL=!0004h		;Multiple collisions for last transmit frame
EPHSR$SNGCOL=!0002h		;Single collision for last transmit frame
EPHSR$TGOOD =!0001h		;Successful transmit

;Define bits for P_B0RCR

RCR$EPHRST =!8000h		;Software reset
RCR$FILCAR =!4000h		;Filter carrier
RCR$PLLGAIN=!0C00h		;PLL gain (test purposes only)
RCR$STRPCRC=!0200h		;Strip received CRC
RCR$RXEN   =!0100h		;Receiver enable
RCR$ALLMC  =!0004h		;Accept all multicast frames
RCR$PRMSMD =!0002h		;Promiscuous receive mode
RCR$RXABORT=!0001h		;Receive abort (long packet)

;Define bits for P_B1CFG

CFG$NOWS  =!1000h		;No additional wait states
CFG$FULSTP=!0400h		;Full step AUI signaling (AUI only)
CFG$SQLLVL=!0200h		;Squelch level (0 = 400mV, 1 = 240mV)
CFG$AUISEL=!0100h		;AUI interface select
CFG$16BIT =!0080h		;Selects 16-bit system bus
CFG$DISLT =!0040h		;Disable link test functions (TP only)
CFG$RAMSZ =!0020h		;RAM size (0 = 16KB, 1 = 64KB)
CFG$FSTRAM=!0008h		;RAM speed (0 = 85ns, 1 = 35ns)
CFG$INTSEL=!0006h		;Interrupt select

;Define bits for P_B1CON

CON$BYPASS=!8000h		;Bypass MMU (future)
CON$RCVBAD=!4000h		;Accept receive packets with CRC errors
CON$AUTORL=!0800h		;Release trasmit memory automatically
CON$UDOE  =!0100h		;Receive LED function
CON$LEENB =!0080h		;Link error reporting enable
CON$CRENB =!0040h		;Counter roll-over reporting enable
CON$TEENB =!0020h		;Transmit error reporting enable
CON$EEPSEL=!0004h		;EEPROM protection select
CON$RELOAD=!0002h		;Reload registers from EEPROM
CON$STORE =!0001h		;Store registers to EEPROM

;Define bits for P_B2MMUCR

MMUCR$MMUCMD=00E0h		;MMU command
  MMUCMD_NOOP =!0<5		;  No operation
  MMUCMD_ALLOC=!1<5		;  Allocate memory for transmit packet
  MMUCMD_RESET=!2<5		;  Reset MMU
  MMUCMD_RMVRF=!3<5		;  Remove frame from top of receive FIFO, keep
				;    memory
  MMUCMD_RLSRF=!4<5		;  Remove frame from top of receive FIFO,
				;    release memory
  MMUCMD_RLSSP=!5<5		;  Release memory for specific spacket
  MMUCMD_QPFT =!6<5		;  Queue packet for transmission
  MMUCMD_RSTTF=!7<5		;  Reset transmit FIFOs
MMUCR$SIZE  =0007h		;Packet size for CMD_ALLOC command (size/256,
				;  rounded down)

;Define bits for P_B2MMUSR

MMUCR$BUSY=0001h		;MMU is busy releasing memory

;Define bits for P_B2DPNTR

DPNTR$RCV   =!8000h		;Access current receive packet
DPNTR$INCR  =!4000h		;Auto-increment enable
DPNTR$READ  =!2000h		;Reading data from packet
DPNTR$OFFSET=!03FFh		;Offset in packet

;Define bits for P_B2INTSR

INTSR$EPH  =!20h		;Ethernet protocol handler interrupt pending
INTSR$ROVRN=!10h		;Receive over-run interrupt pending
INTSR$ALLOC=!08h		;Memory allocation complete interrupt pending
INTSR$TEMP =!04h		;Transmit empty interrupt pending
INTSR$TDONE=!02h		;Transmit done interrupt pending
INTSR$RDONE=!01h		;Receive done interrupt pending

;Define bits for P_B2INTAR

INTAR$ROVRN=!10h		;Clear receive over-run interrupt
INTAR$TEMP =!04h		;Clear transmit empty interrupt
INTAR$TDONE=!02h		;Clear transmit done interrupt

;Define bits for P_B2INTMR

INTMR$EPH  =!20h		;Enable Ethernet protocol handler interrupt
INTMR$ROVRN=!10h		;Enable receive over-run interrupt
INTMR$ALLOC=!08h		;Enable memory allocation complete interrupt
INTMR$TEMP =!04h		;Enable transmit empty interrupt
INTMR$TDONE=!02h		;Enable transmit done interrupt
INTMR$RDONE=!01h		;Enable receive done interrupt
