	.TITLE	HEADER - XOS disk bootstrap header block

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;This file generates the header information for the bootstrap image.  It also
;  specifies the order of loading of all Psects.

	.PROC	80386
	.STK16

;v1.6 - ??
;	Fixed bug, was using BIOS timer wrong, destroyed current time of day
;	as seen by DOS.
;v1.7 - 16-Oct-91
;	Fixed bug, was not clearing memory in auto mode.
;v1.8 - 21-Mar-92
;	Fixed bug, was not correctly modifying floppy parameter table, also
;	added some debug code under $$DEBUG conditional.
;v1.9 - 21-Oct-92
;	Added display of error code and disk address on disk errors, fixed
;	bug in determining if have 12 bit FATs.
;v1.10 - 29-Oct-93
;	Added support for loading from any directory.
;v1.11 - 9-May-93
;	Added support for version 2 IMG files.
;v2.0 - 1-Jun-93
;	Added ability to use with XDTB, removed internal debugging stuff;
;	Changed file system support to be separate module which executes at
;	top of memory and is usable with the kernel once-only code; Added
;	support for DOS disk names; added time-out message; Expanded error
;	reporting.
;v2.1 - 28-Jun-94
;	Fixed bug in file read routine, was not checking for end of file right
;v2.2 - 29-Jun-94
;	Changed the SEARCH function to return file length in EAX (used by
;	ONCER)
;v2.3 - 5-Jul-94
;	Another attempt at fixing the EOF check problem (first fixed in 2.1).
;v2.4 - 15-Jul-94
;	Moved function to get error message text to the file system module so
;	it would be available to the kernel.
;v3.0 - 30-Aug-94
;	Modified to support FORTE directory names and conventions; fixed bug
;	which cleared a border character when clearing the time-out message.
;v3.1 - 6-Sep-94
;	Changed image file extension to .RUN
;v4.0 - 10-Oct-94
;	Modified to support Allegro directory names and conventions.
;v4.1 - 3-Dec-94
;	Changed default default file to ALLEGRO (was KERNEL); fixed bug which
;	prevented using 8 character names, changed to set up file routines
;	first (needed so can process errors which occur before file access).
;v4.2 - 19-Dec-94
;	Fixed bug, was not clearing high 16 bits of cluster size long; added
;	error message for divide errors.
;v4.3 - 31-Oct-95
;	Fixed bug which caused divide error if sector number was greater than
;	2**15.
;v5.0 - 9-Sep-97
;	First XOS version.
;v5.1 - 9-Nov-97
;	Added initial minimal support for FAT32 file systems.
;v5.2 - 25-Sep-98
;	Changed to use selector of first segment (if specified) to specify
;	load address. (Kernel does not use this, its intended to allow loading
;	of the BIOS for debugging.)
;v5.4 - 23-Nov-98
;	Added support for booting from 32-bit FAT file structures (still cannot
;	put bootstrap on a 32-bit FAT FS); fixed serious bug in handling of
;	extended partitions - only first two volumns were accessable!
;v5.5 - Corrected confusion with version numbering with versions 5.3 and 5.4
;	(There were two different incompatable versions 5.3, on of which should
;	have been 5.4!).

;The version number is defined in BOOT.PAR.  If it is changed, this file and
;  BOOT.M86 must be assembled.

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSX.PAR
	.INCLUD	XOSINC:\XMAC\XOSRUN.PAR
	.INCLUD XOSINC:\XMAC\XOSDISK.PAR
	.INCLUD	XOSINC:\XMAC\XOSXDISK.PAR
	.INCLUD XOSINC:\XMAC\XOSXDFS.PAR
	.INCLUD	BOOT.PAR

;The only function performed by this module is to define the order of the
;  segments and msect.  No code is generated.

	.SEG	boot_s  , DATA, READ, WRITE, 16BIT
	.MSECT	level3_m, boot_s, ADDR=8400h
	.MSECT	fat16_m , boot_s, ADDR=7C00h
	.MSECT	fat32_m , boot_s, ADDR=7C00h
	.MSECT	xfs1_m  , boot_s, ADDR=7C00h
	.MSECT	xfs2_m  , boot_s, ADDR=6000h
	.SEG	fat_s   , DATA, READ, WRITE, 16BIT
	.MSECT	fat_m   , fat_s, ADDR=0h
	.SEG	xfs_s   , DATA, READ, WRITE, 16BIT
	.MSECT	xfs_m   , xfs_s, ADDR=0h

;Note that this bootstrap can boot XOS from any disk (or partition) on the
;  system, independent of the device it is loaded from.  It can boot DOS only
;  from the device and partition it is loaded from. The level 3 routine
;  contains code for all supported file systems.  Thus XOS can be loaded from
;  any type of supported partition type, independent of where the bootstrap
;  is loaded from.

;The boot block, containing the level 1 bootstrap, is loaded into memory at
;  0:7C00.  The memory map during loading is as follows:

;	0:0000 - 0:05FF  Vectors
;	0:0600 - 0:0613  Saved floppy parameter table
;	0:0614 - 0:3FFF	 Not used
;	0:4000 - 0:5FFF  Bootstrap data
;	0:6000 - 0:7BFF  Level 2 bootstrap code for XOS file systems
;	0:7C00 - 0:7DFF  Level 1 bootstrap code for all file systems
;	0:7E00 - 0:7FFF  Level 2 bootstrap code for FAT12/FAT16 file systems
;	0:8000 - 0:81FF  Configuration data block
;	0:8200 - 0:83FF  Saved original boot block
;	0:8400 -         Level 3 bootstrap code + debugger code and data if
;			   loaded

;If no debugger code is included with the bootstrap, the target program is
;  loaded at 1000:0 or above.  If a debugger is included, the target program
;  is loaded at 2000:0 or above.
