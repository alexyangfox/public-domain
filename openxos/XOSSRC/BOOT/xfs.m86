	.TITLE	XFS - XOS disk bootstrap level 1 for XOS FS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80386
	.STK16

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSX.PAR
	.INCLUD	XOSINC:\XMAC\XOSRUN.PAR
	.INCLUD XOSINC:\XMAC\XOSDISK.PAR
	.INCLUD	XOSINC:\XMAC\XOSXDISK.PAR
	.INCLUD XOSINC:\XMAC\XOSXXFS.PAR
	.INCLUD	BOOT.PAR

	.SEG	boot_s, DATA, READ, WRITE, 16BIT
	.MSECT	xfs1_m, boot_s, ADDR=7C00h
	.MSECT	xfs2_m, boot_s, ADDR=6000h

;The XOS file system uses a 3 level bootstrap.  Level 1 is contained in
;  the standard boot block.  It is very simple and only loads the level 2
;  routines from the reserved bootstrap area of the XOS partition, which is
;  up to 10 blocks in length. The level 2 routines contain code to search the
;  root directory and load the XOS.BSF file into memory.

;  several blocks and is stored in the reserved bootstrap area of the disk or
;  partition.  Level 2 is the common bootstrap code.  The level 1 bootstrap
;  contains enough code to read a file and to search the root directory and
;  find the XOS.BSF file and read it into memory.  Since there is a reasonable
;  space for storing this code on an XOS file system partition, there is no
;  need for a second level of code.  The common bootstrap code is a completely
;  separate program that does not use any code from the level 1 bootstrap.  A
;  copy of the original boot block is kept in XOS.BSF at offset 0.  It is copied
;  to its normal place in memory and used to boot DOS
;  when this is requested.

;The following code is the level 1 bootstrap.  It is copied to the disk's
;  boot block by mkboot.  It is loaded into memory at 0:7C00 by the hard disk
;  partition table code or by the ROM BIOS.  (This code will work for any
;  segment selector value, but the offset must be 7C00h.)  This is the first
;  stage of the XOS bootstrap.  It first saves all registers, and then loads
;  the level 2 bootstrap from the reserved bootstrap area.

	.PSECT	xfsl1_p, xfs1_m

;Allocate space for the boot block header stuff

bb:	JMP	begin.S
	NOP
	.BLKB	32h

;Start of level 1 bootstrap

begin:	CLI
	MOVW	CS:bb+xb_jump-2, SS	;Save registers we need to begin with
	MOVW	CS:bb+xb_jump-4, SP
	MOVL	CS:bb+xb_jump-8, EAX
	CLRW	AX
	MOVW	SS, AX			;Set up our stack just below our code
	MOVW	SP, #bb+xb_jump-10h	;  segment
	PUSHAL				;Save the rest of the registers
	PUSHW	DS
	PUSHW	ES
	MOVW	ES, AX
	MOVW	DS, AX
.PAGE


	.PSECT	xfs2_p, xfs2_m

level2:
	.LONG	1, 2, 3, 4, 5, 6

