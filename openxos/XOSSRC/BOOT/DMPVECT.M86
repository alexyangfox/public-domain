	.TITLE	DMPVECT - Program to dump ROM vectors


	.PROC	80386
	.STK16

VERSION=!1t			;Major version number
EDITNUM=!9t			;Edit number

$$DEBUG=!0			;Set non-zero for debugging stuff

	.INCLUD	DEFINES.PAR

	.SEG	boot_s, DATA, READ, WRITE, 16BIT
	.MSECT	boot_m, boot_s, ADDR=7C00h
	.PSECT	boot_p, boot_m

	.START	level1

;Define offsets of data in first part of the boot block

b_begin:JMP	level1.S
	NOP
b_curfatgp:.ASCII "XOS 3.0"	;03    - OEM name and version string
b_sectsz:  .WORD  512t		;0B    - Sector size
b_clustsz: .BYTE  1		;0D    - Cluster size (in sectors)
b_resvsz:  .WORD  1		;0E    - Reserved area size (in sectors)
b_numfats: .BYTE  2		;10    - Number of FATs
b_rootsz:  .WORD  224t		;11    - Number of root directory entries
b_disksz:  .WORD  2400t		;13    - Number of sectors on disk or partition
b_media:   .BYTE  0F9h		;15    - Media descriptor byte
b_fatsz:   .WORD  7t		;16    - Number of sectors per FAT
b_numsect: .WORD  15t		;18    - Number of sectors per track
b_numhead: .WORD  2t		;1A    - Number of heads
b_hidnsz:  .LONG  0		;1C    - Number of hidden sectors
b_diskszl: .LONG  2400t		;20    - Number of sectors on disk or partition
				;	   (32 bit value - used if disksz is 0)
b_drvnum:  .BYTE  0		;24    - (DOS 4.0) Physical drive number
	   .BYTE  0		;25    - (DOS 4.0) Reserved
b_extbsig: .BYTE  29h		;26    - (DOS 4.0) Extended boot block sigature
b_volid:   .LONG  0		;27-2A - (DOS 4.0) Volume ID
b_vollabel:.BLKB  11t		;2B-35 - (DOS 4.0) Volume label
	   .BLKB  10t		;36-3F - (DOS 4.0) Reserved

;The following item is stored here by mkboot when the bootstrap is installed
;  on the disk

b_devunit: .BYTE  0		;40    - Device unit (0 = floppy, 80 = hard
				;	   disk)

;Start of level 1 bootstrap

level1:	CLI
	MOVB	AH, #02h		;Set cursor to upper left corner
	MOVB	BH, #0
	MOVW	DX, #0000
	MOVW	DS, DX
	INT	10h
	MOVW	CX, #128t
	CLRW	SI
	CLD
4$:	LODSW	[SI]
	CALL	digit
	CALL	digit
	CALL	digit
	CALL	digit
	MOVB	AL, #':'
	CALL	outchr
	LODSW	[SI]
	CALL	digit
	CALL	digit
	CALL	digit
	CALL	digit
	MOVB	AL, #' '
	CALL	outchr
	LOOP	CX, 4$
	STI
6$:	JMP	6$.S

digit:	ROLW	AX, #1
	ROLW	AX, #1
	ROLW	AX, #1
	ROLW	AX, #1
	PUSHW	AX
	ANDB	AL, #0Fh
	CMPB	AL, #9
	JBE	10$.S
	ADDB	AL, #'A'-'0'-10t
10$:	ADDB	AL, #'0'
	CALL	outchr
	POPW	AX
	RET

outchr:	MOVB	AH, #0Eh
	MOVW	BX, #0007h
	INT	10h
	RET

;Store the boot block signature

$=1FEh
	.BYTE	55h, 0AAh
.PAGE
	.SBTTL	Space for the original DOS boot block

;The DOS bootstrap from the boot block is copied here by the mkboot program

$=400h
dosboot:.WORD	VERSION			;The version number is stored here so
	.WORD	EDITNUM			;  mkboot can find it to display - it
					;  is overwritten by the boot block
.PAGE
;Configuration data is stored at offset 400h in the XOSBOOT.MEM file (which
;  is offset 600h in XOSBOOT.IMG):

$=600h

timeout:.WORD	0		;600h - Time-out value - 2 bytes, number of
				;	  clock ticks (18.2 per second)
dftname:.ASCII	"XOS"		;602h - Default name
$=630h
f1name: .BLKB	48t		;630h - Name for F1
f2name: .BLKB	48t		;660h - Name for F2
f3name: .BLKB	48t		;690h - Name for F3
f4name: .BLKB	48t		;6C0h - Name for F4
f5name: .BLKB	48t		;6F0h - Name for F5
f6name: .BLKB	48t		;620h - Name for F6
f7name: .BLKB	48t		;650h - Name for F7
f8name: .BLKB	48t		;680h - Name for F8
f9name: .BLKB	48t		;6B0h - Name for F9
f10name:.BLKB	48t		;6E0h - Name for F10
$=7FEh
numline:.WORD	3		;6FEh - Number of menu lines

;Start of level 3 bootstrap

$=800h
level3:	JMP	level3
