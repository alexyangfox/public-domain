;Subroutine to fill a rectangle with a specified color independent of the
;  current GC
;	long color;		// Color value
;	long xpos;		// X position
;	long ypos;		// Y position
;	long xsize;		// X size (width)
;	long ysize;		// Y size (height)
;	rdb *cliprgn;		// Offset of RDB for clipping region
;	fillrectangle(color, xpos, ypos, xsize, ysize, cliprgn);

arg_cliprgn=!36t
arg_ysize  =!32t
arg_xsize  =!28t
arg_ypos   =!24t
arg_xpos   =!20t
arg_color  =!16t

fillrectangle::
	PUSHL	EDI
	PUSHL	ESI
	ENTER	0, 0
	MOVL	EAX, arg_xpos.B[EBP]	;Get the X position
	TESTL	EAX, EAX		;Negative?
	JNS	4$.S			;No
	ADDL	arg_xsize.B[EBP], EAX	;Yes - adjust size
	MOVL	arg_xpos.B[EBP], #0
4$:	MOVL	EAX, arg_ypos.B[EBP]	;Get the Y position
	TESTL	EAX, EAX		;Negative?
	JNS	6$.S			;No
	ADDL	arg_ysize.B[EBP], EAX	;Yes - adjust size
	MOVL	arg_ypos.B[EBP], #0
6$:	MOVL	EAX, arg_xsize.B[EBP]	;Get the X size
	TESTL	EAX, EAX		;Negative?
	JS	18$			;Yes - nothing to do here
	ADDL	EAX, arg_xpos.B[EBP]	;No - calculate left edge position
	CMPL	EAX, scnxsize		;Off the screen?
	JBE	8$.S			;No
	MOVL	EAX, scnxsize		;Yes - fix up the value
	SUBL	EAX, arg_xpos.B[EBP]
	MOVL	arg_xsize.B[EBP], EAX
8$:	MOVL	EAX, arg_ysize.B[EBP]	;Get the Y size
	TESTL	EAX, EAX		;Negative?
	JS	18$.S			;Yes - nothing to do here
	ADDL	EAX, arg_ypos.B[EBP]	;No - calculate bottom position
	CMPL	EAX, scnysize		;Off the screen?
	JBE	10$.S			;No
	MOVL	EAX, scnysize		;Yes - fix up the value
	SUBL	EAX, arg_ypos.B[EBP]
	MOVL	arg_ysize.B[EBP], EAX

;Here with the rectangle values adjusted if necessary so we don't try to draw
;  off the screen

10$:	MOVL	EDI, arg_ypos.B[EBP]	;Calculate starting position
	IMULL	EDI, scnxsize
	ADDL	EDI, arg_xpos.B[EBP]
	ADDL	EDI, EDI
	ADDL	EDI, #dspbfr
	PUSHL	DS
	POPL	ES
	CLD
	MOVL	EAX, arg_color.B[EBP]	;Get the color value in both halves
	SHLL	EAX, #16t		;  of EAX
	MOVW	AX, arg_color.B[EBP]
	MOVL	EDX, arg_ysize.B[EBP]	;Get height
	MOVL	EBX, arg_xsize.B[EBP]	;Get width
	SHRL	EBX, #1t
	JC	16$.S			;If odd value

;Here if width is even

14$:	MOVL	ECX, EBX
	MOVL	ESI, EDI
	RSTOSL	[EDI]
	MOVL	EDI, ESI
	ADDL	EDI, scnbytespan
	DECL	EDX
	JNE	14$.S
	JMP	18$.S

;Here if width is odd

16$:	MOVL	ECX, EBX
	MOVL	ESI, EDI
	RSTOSL	[EDI]
	STOSW	[EDI]
	MOVL	EDI, ESI
	ADDL	EDI, scnbytespan
	DECL	EDX
	JNE	16$.S
18$:	LEAVE
	POPL	ESI
	POPL	EDI
	RET
.PAGE
