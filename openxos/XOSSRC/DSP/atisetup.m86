	.TITLE	ATISETUP

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80386
	.INCLUD XOSINC:\XMAC\DEFINES.PAR
	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\XOSTRM.PAR
	.INCLUD XOSINC:\XMAC\CLIBX.PAR

	.STDSEGS

;We set up the "real" mode page 0 as follows:

;	00D0:0000  Executable code
;	00D0:0100  Data buffer
;	00D0:0200  Stack

	.PSECT	_TEXT_p

mainalt::
	PUSHL	#1.B
	PUSHL	#0D800h
	PUSHL	#256t
	CALLF	svcIoPorts##
	PUSHL	#1.B
	PUSHL	#102h
	PUSHL	#1t
	CALLF	svcIoPorts##
	PUSHL	#1.B
	PUSHL	#3A0h
	PUSHL	#40h
	CALLF	svcIoPorts##
	PUSHL	#1.B
	PUSHL	#46E8h
	PUSHL	#1t
	CALLF	svcIoPorts##
	PUSHL	#!_DATA_p.B
	POPL	DS
	PUSHL	#0.B			;Set up a DOS environment
	PUSHL	DS
	PUSHL	#dosdata
	CALLF	svcMemDosSetup##
	TESTL	EAX, EAX
	JS	error
	PUSHL	#50h.B
	POPL	ES
	MOVL	ESI, #realbgn		;Copy the real mode code
	MOVL	EDI, #0D00h
	CLD
	MOVL	ECX, #realend-realbgn
	RMOVSL	[EDI], [ESI]
	CLRL	EAX
	MOVL	ES:0F00+36t, SS		;Set up the real mode stack for the
	MOVL	ES:0F00+32t, ESP		;  return to protected mode
	MOVL	ES:0F00+28t, EAX
	MOVL	ES:0F00+24t, EAX
	MOVL	ES:0F00+20t, CS
	MOVL	ES:0F00+16t, #return
	MOVL	ES:0F00+12t, DS
	MOVL	ES:0F00+8t, ES
	MOVL	ES:0F00+4t, EAX
	MOVL	ES:0F00+0t, EAX

	INT3

	PUSHL	#0D0h
	PUSHL	#200h
	PUSHL	#0.B
	PUSHL	#20000h
	PUSHL	#0D0h
	PUSHL	#0.B
	PUSHL	#0D0h
	PUSHL	#0D0h
	PUSHL	#0.B
	PUSHL	#0.B
	CALLF	svcSchDismiss##

return:	PUSHL	#0.B
	CALLF	svcSchExit##

error::	INT3
	JMP	error.s


.PAGE
	.SEG16
	.STK16

realbgn:MOVW	AX, #0A15h
	MOVB	BL, #0
	MOVW	DI, #100h
	MOVW	DX, #0D0h
	CALLF	0C000:64

;	MOVB	100, #80h		;Set 60Hz for 640x480
;	MOVB	102, #84h		;Set 60Hz for 800x600
;	MOVB	104, #84h		;Set 60Hz for 1024x768
;	MOVB	106, #84h		;Set 60Hz for 1280x

	MOVB	100, #0A0h		;Set 75Hz for 640x480
	MOVB	102, #81h		;Set 75Hz for 800x600
	MOVB	104, #81h		;Set 75Hz for 1024x768
	MOVB	106, #81h		;Set 75Hz for 1280x

	MOVW	AX, #0A15h
	MOVB	BL, #1
	MOVW	DI, #100h
	MOVW	DX, #0D0h
	CALLF	0C000:64

	MOVW	AX, #0A002h
	MOVW	CX, #6A8Eh

	INT3
	NOP
	NOP

	CALLF	0C000:64

	INT3

	CALLF	0ED00:54
realend:
.PAGE
	.SBTTL	Data

	.PSECT	_DATA_p

dosdata:
dosd_dosbase:.LONG 0
dosd_dossize:.LONG 0
dosd_dosfcbn:.LONG 0
dosd_dosfcbp:.LONG 0
