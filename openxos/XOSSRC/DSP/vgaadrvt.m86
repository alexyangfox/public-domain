	.TITLE	VGAADRVT - Loadable driver for basic VGA display

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80486
	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSX.PAR
	.INCLUD	XOSINC:\XMAC\XOSXTRM.PAR
	.INCLUD	XOSINC:\XMAC\XOSLKE.PAR
	.INCLUD	XOSINC:\XMAC\XOSXLKE.PAR

	LKECONT
	DATA

;Table which gives addresses of font tables as a function of font index

	.MOD	4
vgafonttbl::
	.LONG	0, 0
	.LONG	0, 0		;TF_8X8  = 01h
	.LONG	0, 0		;TF_8X14 = 02h
	.LONG	0, 0		;TF_8X16 = 03h
	.LONG	0, 0
	.LONG	0, 0		;TF_9X8  = 05h
	.LONG	0, 0		;TF_9X14 = 06h
	.LONG	0, 0		;TF_9X16 = 07h
VGAFONTMAX  ==!{$-vgafonttbl}/8
VGAFONTMAXX2==!VGAFONTMAX*2

vgafontsize::
	.BYTE	0  , 0
	.BYTE	8t , 8t		;TF_8X8  = 01h
	.BYTE	14t, 14t	;TF_8X14 = 02h
	.BYTE	16t, 16t	;TF_8X16 = 03h
	.BYTE	0  , 0
	.BYTE	8t , 8t		;TF_9X8  = 05h
	.BYTE	14t, 14t	;TF_9X14 = 06h
	.BYTE	16t, 16t	;TF_9X16 = 07h

	.MOD	4
vgafontfix::
	.LONG	0, 0
	.LONG	0, 0		;TF_8X8  = 01h
	.LONG	0, 0		;TF_8X14 = 02h
	.LONG	0, 0		;TF_8X16 = 03h
	.LONG	0, 0
	.LONG	0, 0		;TF_9X8  = 05h
	.LONG	0, 0		;TF_9X14 = 06h
	.LONG	0, 0		;TF_9X16 = 07h
.PAGE
	.SBTTL	Initialization tables for VGA registers

;Define macros used to generate the initialization tables

	.MACRO	TABLE	n
	.NLIST
	.MOD	4

	.MACRO	T  a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15
vgatable''a'n::
	.ENDM

	.MACRO	L  lbl
.IF NE lbl-{$-vgatable'n}
	.IRP	p, >lbl
	.IRP	q, >{$-vgatable'n}
	.ERROR	Incorrect label offset: lbl =  p, should be q
	.ENDR
	.ENDR
.ENDC
	.ENDM

	.MACRO	B  a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11
	.BYTE	0''a'n
	.ENDM

	.MACRO	D  a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11
	.WORD	a'n''t
	.ENDM

	.MACRO	F  a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11
	.BYTE	TF_''a'n
	.ENDM

	.MACRO	Q  a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11
	.LONG	a'n''t
	.ENDM

	VALUES
	.MOD	4
	.LIST
	.ENDM

;Define values used in the initialization tables

;Text rows given below assume a 16-bit high font.  If an 8-bit high font is
;  used, the rows value is double the number given here.

	.MACRO	VALUES

;  720  720  720   720  800  800   800   800 1056 1056  1056  1056
;   x    x    X     X    x    x     x     x    x    x     x     x
;  400  480  400   480  400  480   400   480  400  480   400   480

;   80   80   80    80  100  100   100   100  132  132   132   132
;   x    x    X     X    x    x     x     x    x    x     x     x
;   25   30   50    60   25   30    50    60   25   30    50    60

T    0,   1,   2,    3,   4,   5,    6,    7,   8,   9,   10,   11

L tbl_font
F 9X16,9X16, 9X8,  9X8,8X16,8X16,  8X8,  8X8,8X16,8X16,  8X8,  8X8 ;Font index value

L tbl_miscoutput
B   63,  E3,  63,   E3,  6F,  EF,   6F,   EF,  6F,  EF,   6F,   EF ;3C2   - Misc output

B    0,   0,   0,    0,   0,   0,    0,    0,   0,   0,    0,    0
B    0,   0,   0,    0,   0,   0,    0,    0,   0,   0,    0,    0

L tbl_pgsize
Q 4096,5632,8192,11264,5000,6000,10000,12000,6600,7920,13200,15840 ;Page size

L tbl_horiz
Q  720, 720, 720,  720, 800, 800,  800,  800,1056,1056, 1056, 1056 ;Screen width (pixels)

L tbl_vert
Q  400, 480, 400,  480, 400, 480,  400,  480, 400, 480,  400,  480 ;Screen height (pixels)

L tbl_columns
Q   80,  80,  80,   80, 100, 100,  100,  100, 132, 132,  132,  132 ;Screen width (columns)

L tbl_rows
Q   25,  30,  50,   60,  25,  30,   50,   60,  25,  30,   50,   60 ;Screen height (rows)

L tbl_crtregs
B   5F,  5F,  5F,   5F,  7A,  7A,   7A,   7A,  9E,  9E,   9E,   9E ;3x5,0 - Hor total
B   4F,  4F,  4F,   4F,  63,  63,   63,   63,  83,  83,   83,   83 ;3x5,1 - Hor display end
B   50,  50,  50,   50,  64,  64,   64,   64,  84,  84,   84,   84 ;3x5,2 - Start hor blank
B   82,  82,  82,   82,  85,  85,   85,   85,  81,  81,   81,   81 ;3x5,3 - End hor blank
B   55,  55,  55,   55,  6B,  6B,   6B,   6B,  8A,  8A,   8A,   8A ;3x5,4 - Start hor retrace
B   81,  81,  81,   81,  9B,  9B,   9B,   9B,  9E,  9E,   9E,   9E ;3x5,5 - End hor retrace
B   BF,  0B,  BF,   0B,  BF,  0B,   BF,   0B,  BF,  0B,   BF,   0B ;3x5,6 - Vertical total
B   1F,  3E,  1F,   3E,  1F,  3E,   1F,   3E,  1F,  3E,   1F,   3E ;3x5,7 - Overflow
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3x5,8 - Preset row scan
B   4F,  4F,  47,   47,  4F,  4F,   47,   47,  4F,  4F,   47,   47 ;3x5,9 - Max scan line
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3x5,A - Cursor start
B   0E,  0E,  08,   08,  0E,  0E,   08,   08,  0E,  0E,   08,   08 ;3x5,B - Cursor end
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3x5,C - Start addr high
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3x5,D - Start addr low
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3x5,E - Cursor pos high
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3x5,F - Cursor pos low
B   9C,  EA,  9C,   EA,  9C,  EA,   9C,   EA,  9C,  EA,   9C,   EA ;3x5,10- Ver retrace start
B   0E,  0C,  0E,   0C,  0E,  0C,   0E,   0C,  0E,  0C,   0E,   0C ;3x5,11- Ver retrace end
B   8F,  DF,  8F,   DF,  8F,  DF,   8F,   DF,  8F,  DF,   8F,   DF ;3x5,12- Ver disp. end
B   28,  28,  28,   28,  42,  42,   42,   42,  32,  32,   32,   32 ;3x5,13- Offset
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3x5,14- Underline loc
B   96,  E7,  96,   E7,  96,  E7,   96,   E7,  96,  E7,   96,   E7 ;3x5,15- Start ver blank
B   B9,  04,  B9,   04,  B9,  04,   B9,   04,  B9,  04,   B9,   94 ;3x5,16- End ver blank
B   A3,  A3,  A3,   A3,  A3,  A3,   A3,   A3,  A3,  A3,   A3,   E3 ;3x5,17- Mode control
B   FF,  FF,  FF,   FF,  FF,  FF,   FF,   FF,  FF,  FF,   FF,   FF ;3x5,18- Line compare

L tbl_seqregs
B   03,  03,  03,   03,  03,  03,   03,   03,  03,  03,   03,   03 ;3C5,0 - Reset
B   21,  21,  21,   21,  20,  20,   20,   20,  20,  20,   20,   20 ;3C5,1 - Clocking mode
B   03,  03,  03,   03,  03,  03,   03,   03,  03,  03,   03,   03 ;3C5,2 - Write plane mask
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3C5,3 - Font select
B   02,  02,  02,   02,  02,  02,   02,   02,  02,  02,   02,   02 ;3C5,4 - Memory mode

L tbl_gcregs
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3CF,0 - Data set/reset
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3CF,1 - Enable bit s/r
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3CF,2 - Color compare
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3CF,3 - Data rotate
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3CF,4 - Read plane select
B   10,  10,  10,   10,  10,  10,   10,   10,  10,  10,   10,   10 ;3CF,5 - Mode
B   06,  06,  06,   06,  06,  06,   06,   06,  06,  06,   06,   06 ;3CF,6 - Miscellaneous
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3CF,7 - Color don't care
B   FF,  FF,  FF,   FF,  FF,  FF,   FF,   FF,  FF,  FF,   FF,   FF ;3CF,8 - Bit mask

L tbl_atrregs
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3C0,0 - Palette 0
B   01,  01,  01,   01,  01,  01,   01,   01,  01,  01,   01,   01 ;3C0,1 - Palette 1
B   02,  02,  02,   02,  02,  02,   02,   02,  02,  02,   02,   02 ;3C0,2 - Palette 2
B   03,  03,  03,   03,  03,  03,   03,   03,  03,  03,   03,   03 ;3C0,3 - Palette 3
B   04,  04,  04,   04,  04,  04,   04,   04,  04,  04,   04,   04 ;3C0,4 - Palette 4
B   05,  05,  05,   05,  05,  05,   05,   05,  05,  05,   05,   05 ;3C0,5 - Palette 5
B   14,  14,  14,   14,  14,  14,   14,   14,  14,  14,   14,   14 ;3C0,6 - Palette 6
B   07,  07,  07,   07,  07,  07,   07,   07,  07,  07,   07,   07 ;3C0,7 - Palette 7
B   38,  38,  38,   38,  38,  38,   38,   38,  38,  38,   38,   38 ;3C0,8 - Palette 8
B   39,  39,  39,   39,  39,  39,   39,   39,  39,  39,   39,   39 ;3C0,9 - Palette 9
B   3A,  3A,  3A,   3A,  3A,  3A,   3A,   3A,  3A,  3A,   3A,   3A ;3C0,A - Palette 10
B   3B,  3B,  3B,   3B,  3B,  3B,   3B,   3B,  3B,  3B,   3B,   3B ;3C0,B - Palette 11
B   3C,  3C,  3C,   3C,  3C,  3C,   3C,   3C,  3C,  3C,   3C,   3C ;3C0,C - Palette 12
B   3D,  3D,  3D,   3D,  3D,  3D,   3D,   3D,  3D,  3D,   3D,   3D ;3C0,D - Palette 13
B   3E,  3E,  3E,   3E,  3E,  3E,   3E,   3E,  3E,  3E,   3E,   3E ;3C0,E - Palette 14
B   3F,  3F,  3F,   3F,  3F,  3F,   3F,   3F,  3F,  3F,   3E,   3E ;3C0,F - Palette 15
B   0C,  0C,  0C,   0C,  0C,  0C,   0C,   0C,  0C,  0C,   0C,   0C ;3C0,10- Mode control
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3C0,11- Overscan color
B   0F,  0F,  0F,   0F,  0F,  0F,   0F,   0F,  0F,  0F,   0F,   0F ;3C0,12- Plane enable
B   00,  00,  08,   08,  08,  08,   08,   08,  00,  00,   00,   00 ;3C0,13- Horiz panning
B   00,  00,  00,   00,  00,  00,   00,   00,  00,  00,   00,   00 ;3C0,14- Color select

	.ENDM

	.MOD	4
vgatables::
	TABLE	0
VGATBLSIZE==!$-vgatables
	TABLE	1
	TABLE	2
	TABLE	3
	TABLE	4
	TABLE	5
	TABLE	6
	TABLE	7
	TABLE	8
	TABLE	9
	TABLE	10
	TABLE	11
.PAGE
;VGA color register tables

colcol::.BYTE	00, 00, 00	;Register 0
	.BYTE	00, 00, 2A	;Register 1
	.BYTE	00, 2A, 00	;Register 2
	.BYTE	00, 2A, 2A	;Register 3
	.BYTE	2A, 00, 00	;Register 4
	.BYTE	2A, 00, 2A	;Register 5
	.BYTE	2A, 2A, 00	;Register 6
	.BYTE	2A, 2A, 2A	;Register 7
	.BYTE	00, 00, 15	;Register 8
	.BYTE	00, 00, 3F	;Register 9
	.BYTE	00, 2A, 15	;Register 10
	.BYTE	00, 2A, 3F	;Register 11
	.BYTE	2A, 00, 15	;Register 12
	.BYTE	2A, 00, 3F	;Register 13
	.BYTE	2A, 2A, 15	;Register 14
	.BYTE	2A, 2A, 3F	;Register 15
	.BYTE	00, 15, 00	;Register 16
	.BYTE	00, 15, 2A	;Register 17
	.BYTE	00, 3F, 00	;Register 18
	.BYTE	00, 3F, 2A	;Register 19
	.BYTE	2A, 15, 00	;Register 20
	.BYTE	2A, 15, 2A	;Register 21
	.BYTE	2A, 3F, 00	;Register 22
	.BYTE	2A, 3F, 2A	;Register 23
	.BYTE	00, 15, 15	;Register 24
	.BYTE	00, 15, 3F	;Register 25
	.BYTE	00, 3F, 15	;Register 26
	.BYTE	00, 3F, 3F	;Register 27
	.BYTE	2A, 15, 15	;Register 28
	.BYTE	2A, 15, 3F	;Register 29
	.BYTE	2A, 3F, 15	;Register 30
	.BYTE	2A, 3F, 3F	;Register 31
	.BYTE	15, 00, 00	;Register 32
	.BYTE	15, 00, 2A	;Register 33
	.BYTE	15, 2A, 00	;Register 34
	.BYTE	15, 2A, 2A	;Register 35
	.BYTE	3F, 00, 00	;Register 36
	.BYTE	3F, 00, 2A	;Register 37
	.BYTE	3F, 2A, 00	;Register 38
	.BYTE	3F, 2A, 2A	;Register 39
	.BYTE	15, 00, 15	;Register 40
	.BYTE	15, 00, 3F	;Register 41
	.BYTE	15, 2A, 15	;Register 42
	.BYTE	15, 2A, 3F	;Register 43
	.BYTE	3F, 00, 15	;Register 44
	.BYTE	3F, 00, 3F	;Register 45
	.BYTE	3F, 2A, 15	;Register 46
	.BYTE	3F, 2A, 3F	;Register 47
	.BYTE	15, 15, 00	;Register 48
	.BYTE	15, 15, 2A	;Register 49
	.BYTE	15, 3F, 00	;Register 50
	.BYTE	15, 3F, 2A	;Register 51
	.BYTE	3F, 15, 00	;Register 52
	.BYTE	3F, 15, 2A	;Register 53
	.BYTE	3F, 3F, 00	;Register 54
	.BYTE	3F, 3F, 2A	;Register 55
	.BYTE	15, 15, 15	;Register 56
	.BYTE	15, 15, 3F	;Register 57
	.BYTE	15, 3F, 15	;Register 58
	.BYTE	15, 3F, 3F	;Register 59
	.BYTE	3F, 15, 15	;Register 60
	.BYTE	3F, 15, 3F	;Register 61
	.BYTE	3F, 3F, 15	;Register 62
	.BYTE	3F, 3F, 3F	;Register 63

	END
