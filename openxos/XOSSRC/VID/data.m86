	.TITLE	DATA

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80386
	.INCLUD XOSINC:\XMAC\DEFINES.PAR
	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\XOSTRM.PAR
	.INCLUD XOSINC:\XMAC\CLIBX.PAR
	.INCLUD XOSINC:\XMAC\PROCARG.PAR
	.INCLUD	VID.PAR

	.STDSEGS

	.PSECT	_DATA_p

;This module contains all inpure global data for the video editor.  It must
;  be linked after all other modules as it defines the start of the file
;  buffer!

	.MACRO	VERMAC  ver, edit
	.ASCII	"VID - version ver'.'edit"
	.ENDM

verson::   VERMAC  >_VER, >_EDIT
newfmsg::  .ASCIZ {0}"  New file created"
prgname::  .ASCIZ "VID"
envname::  .ASCIZ "^XOS^VID^OPT"
pname::    .ASCII "V>"
	   .BLKB  30t
tmfmsg::   .ASCIZ "? Too many files open"
tmwmsg::   .ASCIZ "? Too many windows on screen"
gtmtob::   .ASCIZ "? Buffer file too big"
toosmlmsg::.ASCIZ "? Window is too small to divide"
extmsg::   .ASCIZ "Please wait ...."
emmemory:: .ASCIZ "? Error allocating memory: "
emoutfile::.ASCIZ "? Error writing file: "
embackup:: .ASCIZ "? Error creating backup file: "
emget::    .ASCIZ "? Error reading buffer file: "
bakext::   .ASCIZ ".bak"
scnerr::   .ASCIZ "? VID: Cannot setup to use terminal screen"{CR,LF}
msgmfn::   .ASCIZ "? VID: More than one file specified"{CR,LF}
msgbdn::   .ASCIZ "? VID: No file specified"{CR,LF}
msgtob::   .ASCII "? VID: File too big - type RETURN to continue, any"
	   .ASCIZ " other key to exit"{CR,LF}
msgoerr::  .ASCII "? VID: Error opening file"
	   .ASCIZ {CR,LF}"       "
msgierr::  .ASCII "? VID: Error reading file"
	   .ASCIZ {CR,LF}"       "
msger2::   .ASCIZ {CR,LF}
msgbds::   .ASCIZ "? VID: Unimplemented display type"{CR,LF}
synmsg::   .ASCIZ "? Syntax error"
bdnmsg::   .ASCIZ "? Number too large"
bdcmsg::   .ASCIZ "? Unknown command"
replong::  .ASCIZ "? Line too long"
quitmsg::  .ASCIZ "Discard changes? (Y or N): "
namfil::   .ASCIZ "VIDFILE.TMP"

wdstrg::   .ASCII {HT}. ,:;^*/\+-&!|(){}[]<>#=~`'".
WDSLEN==!$-wdstrg
bfrnam::   .ASCII "BUFFER.TMP"	;Name and extension for buffer file
nullstr::  .BYTE  0
dspcem::   .ASCIZ "   EOF"
mfgstr::   .ASCIZ "M"
blkstr::   .BYTE  ASTSC, 0

devnbfr::  .ASCII "X:"		;Buffer for default device name

emnomc::   .ASCIZ "? Nothing before match to move or copy"
misdel::   .ASCIZ "? Missing or invalid delimiter"
toolng::   .ASCIZ "? Search string too long"
nossvd::   .ASCIZ "? No search string saved"
rtoolg::   .ASCIZ "? Replacment string too long"
norsvd::   .ASCIZ "? No replacment string saved"
flmsg1::   .ASCIZ "? Not found: '"
memmsg::   .ASCIZ "? No more memory available"

	.MOD	4
argpntr::   .LONG  0, 0		;Argument pointer for procarg
lit10::     .LONG  10t
litw_SIZE:: .LONG  w_SIZE
namhndl::   .LONG  0		;Handle for VIDFILE.TMP
devend::    .LONG  0		;Offset for end of device part of file
				;  specification
cmdatom::   .LONG  0		;Command atom

numlines::  .LONG  0		;Number of lines specified
numcolumns::.LONG  0		;Number of columns specified
swidth::    .LONG  0		;Width of entire screen
swidthx2::  .LONG  0		;Width of entire screen times 2
sheight::   .LONG  0		;Height of entire screen
cmdline::   .LONG  0		;Offset of start of command line
rspline::   .LONG  0		;Offset of start of response line
curwin::    .LONG  0		;Offset of WDB for current window
prevwin::   .LONG  0		;Offset of previous WDB
cmdpnt::    .LONG  0		;Command line character pointer
slincnt::   .LONG  1		;Line counter for search

inpchr::    .BYTE  0		;Input character captured by output
scndrt::    .BYTE  0		;The screen is dirty
strcur::    .BYTE  1		;Non-zero if need to store current during search
disptype::  .BYTE  0		;Display type (0 = EGA, 1 = MDA)

shiftpos::  .LONG  0		;Position for shift indicator
cntrlpos::  .LONG  0		;Position for control indicator
altpos::    .LONG  0		;Position for alt indicator
capspos::   .LONG  0		;Position caps lock indicator
litpos::    .LONG  0		;Position for literal indicator
inspos::    .LONG  0		;Position for insert/overwrite indicator

;Table of position increments for status line for windows wider than 80
;  characters

table80::.LONG	10t		;Increment for position for horizontal position
	 .LONG	24t		;Increment for position for characters in file
	 .LONG	22t		;Increment for position for lines in file
	 .LONG	14t		;Increment for position for current line

;Table of position increments for status line for windows between 40 and 79
;  characters wide

table40::.LONG	8t		;Increment for positon for horizontal position
	 .LONG	0t		;Increment for position for characters in file
	 .LONG	18t		;Increment for position for lines in file
	 .LONG	10t		;Increment for position for current line

;Table of position increments for status line for windows narrower than 40
;  characters

table20::.LONG	0t		;Increment for positon for horizontal position
	 .LONG	0t		;Increment for position for characters in file
	 .LONG	0t		;Increment for position for lines in file
	 .LONG	0t		;Increment for position for current line

				;Following 6 locations must be in this order!
aslattrb::.BYTE A_CASL		;Attribute byte for active status line
islattrb::.BYTE A_CISL		;Attribute byte for idle status line
cmdattrb::.BYTE A_CCMD		;Attribute byte for command line
rspattrb::.BYTE A_CRSP		;Attribute byte for response line
txtattrb::.BYTE A_CTXT		;Attribute byte for text area
cmcattrb::.BYTE A_CCMC		;Attribute byte for extra user mode cursor
	  .BYTE 0, 0

	.MOD	4
trmdata:: .BLKB dm_SIZE		;Data block for svcTrmDspMode system call
trmsave:: .BLKB dm_SIZE		;Data block for saving initial terminal set-up

filename:: .BLKB 80t		;File name buffer

	.MOD	4
parmlist1::.BYTE PAR$SET|REP_HEXV, 4
	   .WORD IOPAR_FILOPTN
	   .LONG FO$NOPREFIX|FO$FILENAME
	   .BYTE PAR$GET|REP_STR, 0
	   .WORD IOPAR_FILSPEC
	   .LONG filename, !filename
	   .WORD 78t, 78t
parmlist2::.BYTE PAR$GET|REP_DECV, 4
	   .WORD IOPAR_LENGTH
filelen::  .LONG 0
	   .BYTE 0

	.MOD	4
trmparm::  .BYTE PAR$SET|REP_HEXV, 4
	   .WORD IOPAR_TRMCINPMODE
	   .LONG 0FFFFFFFFh
	   .BYTE PAR$SET|REP_HEXV, 4
	   .WORD IOPAR_TRMSINPMODE
	   .LONG TIM$IMAGE
	   .BYTE 0

	   .MOD  4
filespec:: .LONG 0		;Offset of buffer for file specification
filespsz:: .LONG 0		;File spec length
scount::   .LONG 0		;Search count
bgnEBX::   .LONG 0		;Address of beginning of line being searched
savEBX::   .LONG 0		;Address of start of part of line being
				;  compared
envpntr::  .LONG blkbufr, 0	;Array used by procarg
fndflg::   .BYTE 0		;Search type indicator
strdel::   .BYTE 0		;The delimiter character
strcnt::   .BYTE 0		;Length of search string
lastcr::   .BYTE 0		;Non-zero if last character input was CR

litflg::   .BYTE 0		;Non-zero if next character is literal
insflg::   .BYTE 1		;Non-zero if in insert mode
helpflg::  .BYTE 0		;Non-zero if /HELP specified
repcnt::   .BYTE 0FFh		;Length of the replacment string

tabmask::  .BYTE 7
tabforce:: .BYTE 0
	   .BYTE 0, 0

string::   .BLKB STGLEN+1	;Search string buffer
repstg::   .BLKB STGLEN		;Replacement string buffer
curlinbuf::.BLKB 256t
cmdlinbuf::.BLKB 256t
baknbfr::  .BLKB 132t		;Buffer for name with .BAK extension
blkbufr::  .BLKB 512t		;Block buffer

	.MOD	4
filetbl::.BLKL	FILEMAX		;File table

	.MOD	4
wdb0::	.LONG	0
	.LONG	wdb0
	.BLKB	w_SIZE-8	;Window data block 0 (used for command mode)
$$$=!1				;Create other window data blocks
	.REPT	WINMAX
	.IRP	q, >$$$
wdb'q::	.BLKB	w_SIZE
	.ENDR
$$$=!$$$+1
	.ENDR
