	.TITLE	IBMPC

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80386
	.INCLUD XOSINC:\XMAC\DEFINES.PAR
	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\XOSTRM.PAR
	.INCLUD XOSINC:\XMAC\CLIBX.PAR
	.INCLUD XOSINC:\XMAC\PROCARG.PAR
	.INCLUD	VID.PAR

	.STDSEGS

	.SBTTL	Control character input translation table

	.PSECT	_TEXT_p

cintrl::.BYTE	VS_NOP		;NUL    - Keyboard escape code
	.BYTE	VS_MLT		;Cntl-A - Reset the cursor to the left margin
	.BYTE	VS_JOI		;Cntl-B - Join lines
	.BYTE	VS_NOP		;Cntl-C - Ignore
	.BYTE	VS_DRT		;Cntl-D - Delete character forwards
	.BYTE	VS_WRT		;Cntl-E - Cursor right (word)
	.BYTE	VS_DEN		;Cntl-F - Delete to the begining of the line
	.BYTE	BEL		;Cntl-G - Normal text character
	.BYTE	VS_DLT		;Cntl-H - Delete character to left of cursor
	.BYTE	HT		;Cntl-I - Normal text character
	.BYTE	VS_ILN		;Cntl-J - Insert line
	.BYTE	VS_CLT 		;Cntl-K - Cursor left (character)
	.BYTE	VS_CRT		;Cntl-L - Cursor right (character)
	.BYTE	VS_RTN		;Cntl-M - Break the line at the current
				;	    cursor
	.BYTE	VS_CDW		;Cntl-N - Cursor down
	.BYTE	VS_CUP		;Cntl-O - Cursor up
	.BYTE	VS_NOP		;Cntl-P - Not used
	.BYTE	VS_NOP		;Cntl-Q - Not used
	.BYTE	VS_MRT		;Cntl-R - Cursor right (end of line)
	.BYTE	VS_NOP		;Cntl-S - Not used
	.BYTE	VS_CAS		;Cntl-T - Toggle case of character
	.BYTE	VS_ELN		;Cntl-U - Erase the text on current line
	.BYTE	VS_DBG		;Cntl-V - Delete to beginning of line
	.BYTE	VS_WLT		;Cntl-W - Cursor left (word)
	.BYTE	VS_DLN		;Cntl-X - Delete line
	.BYTE	VS_RST		;Cntl-Y - Reread the line from the text
				;	    buffer
	.BYTE	VS_DWD		;Cntl-Z - Delete word
	.BYTE	VS_NOP		;ESC    - Not used
	.BYTE	VS_NOP		;FS     - Not used
	.BYTE	VS_NOP		;GS     - Not used
	.BYTE	VS_NOP		;RS     - Not used
	.BYTE	VS_NOP		;US     - Not used

	.SBTTL	Escape sequence definitions

	.MACRO	ESCT
	CC	01h, 00h, VS_NOP ;F1          - Not used (will someday be HELP)
	CC	02h, 00h, VS_CMD ;F2          - Enter command mode
	CC	03h, 00h, VS_BTM ;F3          - Bottom of file
	CC	04h, 00h, VS_NOP ;F4          - Not used
	CC	05h, 00h, VS_FFN ;F5          - Find next
	CC	06h, 00h, VS_LFN ;F6          - Locate next
	CC	07h, 00h, VS_FRF ;F7          - Find and replace next
	CC	08h, 00h, VS_LRF ;F8          - Locate and replace next
	CC	09h, 00h, VS_NOP ;F9          - Not used
	CC	0Ah, 00h, VS_LIT ;F10         - Literal character next
	CC	01h, 02h, VS_NOP ;Cntl-F1     - Not used
	CC	02h, 02h, VS_NOP ;Cntl-F2     - Not used
	CC	03h, 02h, VS_TOP ;Cntl-F3     - Top of file
	CC	04h, 02h, VS_NOP ;Cntl-F4     - Not used
	CC	05h, 02h, VS_NOP ;Cntl-F5     - Find next backwards
	CC	06h, 02h, VS_NOP ;Cntl-F6     - Locate next backwards
	CC	07h, 02h, VS_NOP ;Cntl-F7     - Find and replace next backwards
	CC	08h, 02h, VS_NOP ;Cntl-F8     - Locate and replace next backwards
	CC	09h, 02h, VS_NOP ;Cntl-F9     - Not used
	CC	0Ah, 02h, VS_NOP ;Cntl-F10    - Not used
	CC	17h, 00h, VS_CUP ;Up arrow    - Cursor up
	CC	28h, 00h, VS_CUP
	CC	17h, 02h, VS_SUP ;Cntl-up arrow - Scroll up
	CC	28h, 02h, VS_SUP
	CC	19h, 00h, VS_CDW ;Down arrow  - Cursor down
	CC	22h, 00h, VS_CDW
	CC	19h, 02h, VS_SDW ;Cntl-down arrow - Scroll down
	CC	22h, 02h, VS_SDW
	CC	1Ah, 00h, VS_CRT ;Right arrow - Cursor right
	CC	26h, 00h, VS_CRT
	CC	18h, 00h, VS_CLT ;Left arrow  - Cursor left
	CC	24h, 00h, VS_CLT

	CC	15h, 00h, VS_MRT ;End         - Scroll down
	CC	21h, 00h, VS_MRT
	CC	12h, 00h, VS_MLT ;Home        - Scroll up
	CC	27h, 00h, VS_MLT

	CC	13h, 00h, VS_PUP ;Page up     - Page up
	CC	29h, 00h, VS_PUP
	CC	13h, 02h, VS_TOP ;Cntl-page up - Beginning of file
	CC	29h, 02h, VS_TOP

	CC	16h, 00h, VS_PDW ;Page down   - Page down
	CC	23h, 00h, VS_PDW
	CC	16h, 02h, VS_BTM ;Cntl-page down - End of file
	CC	23h, 02h, VS_BTM

	CC	11h, 00h, VS_TIM ;Insert      - Toggle insert mode
	CC	20h, 00h, VS_TIM
	CC	14h, 00h, VS_DRT ;Delete      - Delete character under cursor
	CC	2Ah, 00h, VS_DRT
	.ENDM

	.MACRO	CC  ltr1, ltr2, func
	.BYTE	ltr1, ltr2
	.ENDM

esctbl::ESCT
ESCLEN==!$-esctbl

	.MACRO	CC  ltr1, ltr2, func
	.WORD	func
	.ENDM

escdat::ESCT

	.SBTTL	Terminal type dependent strings

	.PSECT	_TEXT_p

clrstr::.ASCIZ	{1B}"[2J"
	.MOD	4
