	.SBTTL	Local parameter file IPSSRV.PAR
	.SBTTL	Definitions for the general purpose IPS server

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

.IF NDF DEFINES
	.NLIST
	.INCLUD	XOSINC:\XMAC\DEFINES.PAR
	.LIST
.ENDC
	.PARM

STACKBASE=!1000h	;Base offset for virtual stack area
CDBBASE  =!30000h	;Base offset for first CDB
CODEBASE =!1000h	;Base offset for code section
TCPBFRSZ =!1600t	;Size of TCP data buffer

VECT_TCPOPEN  =!48t	;TCP open done signal
VECT_TCPINPUT =!49t	;TCP input available signal
VECT_TCPOUTPUT=!50t	;TCP output done signal
VECT_UDPINPUT =!51t	;UDP input available signal
VECT_UDPOUTPUT=!52t	;UDP output done signal

DFLT_OPENS=!3t		;Default number of queued TCP opens
DFLT_CONTS=!30t		;Default number of open TCP connections (total for
			;  all supported TCP based protocols)

UDPBFRSZ  =!1024t	;UDP data buffer size

;Define offsets in the TDBs (TCP device Data Blocks) - there is one TDB for
;  each TCP device

$$$=!0
BLK tdb_next   , 4t		;Offset of next TDB
BLK tdb_name   , 16t		;Physical device name
BLK tdb_connum , 4t		;Maximum number of TCP connections

BLK tdb_gennum  , 4t		;Number of data generator opens to queue
BLK tdb_genport , 4t
BLK tdb_genodb  , 4t
BLK tdb_sinknum , 4t		;Number of data sink opens to queue
BLK tdb_sinkport, 4t
BLK tdb_sinkodb , 4t
BLK tdb_timenum , 4t		;Number of time server opens to queue
BLK tdb_timeport, 4t
BLK tdb_timeodb , 4t
BLK tdb_echonum , 4t		;Number of echo opens to queue
BLK tdb_echoport, 4t
BLK tdb_echoodb , 4t
tdb_SIZE=!$$$

;Define offsets in the UCBs (UDP device Control Blocks) - there is one UCB for
;  each phsycial UDP device

$$$=!0
BLK ucb_next     , 4t		;Offset of next UCB
BLK ucb_name     , 16t		;Physical device name
BLK ucb_sinknum  , 4t		;Number of sink inputs to queue
BLK ucb_sinkport , 4t
BLK ucb_sinkidb  , 4t
BLK ucb_timenum  , 4t		;Number of time server inputs queue
BLK ucb_timeport , 4t
BLK ucb_timeidb  , 4t
BLK ucb_echonum  , 4t		;Number of echo inputs to queue
BLK ucb_echoport , 4t
BLK ucb_echoidb  , 4t
BLK ucb_xechonum , 4t		;Number of extended echo inputs to queue
BLK ucb_xechoport, 4t
BLK ucb_xechoidb , 4t
BLK ucb_xechodata, 4t
BLK ucb_dnsnum   , 4t		;Number of DNS inputs to queue
BLK ucb_dnsport  , 4t
BLK ucb_dnsidb   , 4t
ucb_SIZE=!$$$

;Define offsets in the UDBs (UDP device Data Blocks) - there is one UDB for
;  each UDP handle opened, that one for each UDP server

$$$=!0
BLK udb_next   , 4t		;Offset of next UDB
BLK udb_idb    , 4t		;Offset of first IDB
BLK udb_handle , 4t		;Handle for the UDP device
udb_SIZE=!$$$

;Define offsets in the IDBs (Input Data Blocks) - there is one IDB for each
;  possible queued datagram input

idb_mSIZE=!2*qab_SIZE
$$$=-idb_mSIZE
BLK idb_inpqab  , qab_SIZE	;QAB for input function
BLK idb_outqab  , qab_SIZE	;QAB for output function

BLK idb_next    , 4t		;Offset of next IDB for same UDB
BLK idb_udb     , 4t		;Offset ot the UDB
BLK idb_inpdone , 4t		;Offset of input done routine
BLK idb_outdone , 4t		;Offset of output done routine
BLK idb_inpparms, 20t		;Parameter list for datagram input
BLK idb_outparms, 28t		;Parameter list for output
IDBDEP=$$$

;Defines offset in the sink server IDB

$$$=!IDBDEP
BLK idb_buffer , 4t		;Data buffer
idb_sinkSIZE=!$$$

;Defines offset in the time server IDB

$$$=!IDBDEP
BLK idb_buffer , 4t		;Data buffer
idb_timeSIZE=!$$$

;Defines offset in the echo server IDB

$$$=!IDBDEP
BLK idb_buffer , 512t		;Data buffer
idb_echoSIZE=!$$$

;Defines offset in the extended echo server IDB

$$$=!IDBDEP
BLK idb_buffer , 32t		;Data buffer
BLK idb_data   , 4t		;Data value
idb_xechoSIZE=!$$$

;Defines offset in the Domain Name System server IDB

$$$=!IDBDEP
BLK idb_buffer , 512t		;Data buffer
idb_dnsSIZE=!$$$

;Define offsets in the ODBs (Open Data Blocks) - there is one ODB for each
;  possible queued TCP open

$$$=!0
BLK odb_qab  , qab_SIZE		;QAB for open function
BLK odb_parms, 24t		;Parameter list for open
odb_SIZE=!$$$

;Define offsets in the CDBs (Connection Data Blocks) - there is one CDB for
;  each active TCP connection

cdb_MSIZE=!0t
$$$=!-cdb_MSIZE
BLK cdb_tcpqab  , qab_SIZE	;QAB for TCP IO
.IF NE cdb_tcpqab
	.IRP	q, >cdb_tcpqab
	.ERROR	CDB starting offset is wrong, cdb_tcpqab = q'h
	.ENDR
.ENDC
BLK cdb_diskqab , qab_SIZE	;QAB for disk IO
BLK cdb_index   , 4
BLK cdb_inpint  , 1t		;Input interrupt number
BLK             , 3t
BLK cdb_buffer  , TCPBFRSZ
cdb_SIZE=!$$$
