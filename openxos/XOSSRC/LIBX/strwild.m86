	.TITLE	strcmp - ANSI C function to compare two strings
	.SBTTL	STDC run-time library for XOS

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\STDIO.PAR

	.STDSEGS

	.SBTTL	strwild - Function to compare two strings with wild-cards

;	int strwild(
;	    int   mixedcase,
;	    char *str1,
;	    char *str2)
;  Value returned is 0 if have match, non-zero if no match

arg_case=!12t
arg_str1=!16t
arg_str2=!20t

$$$=!0
FRM wc_svESI   , 4t
FRM wc_svEDI   , 4t
wc_SIZE=!$$$

	.PSECT	_TEXT_p

	.ENTRY	strwild
strwild:ENTER	wc_SIZE, 0
	PUSHL	ESI
	PUSHL	EDI
	MOVL	ESI, arg_str1.B[EBP]
	MOVL	EDI, arg_str2.B[EBP]
	CLD
2$:	CALL	cmpstr8			;Compare strings
	JNC	14$.S			;If have complete match
	JNE	12$.S			;If match not possible
4$:	MOVB	AL, SS:[ESI]		;Here with *
6$:	MOVB	AH, ES:[EDI]		;Scan to first match
	INCL	EDI
	CMPB	AH, AL
	JE	16$.S			;If match
	CMPB	arg_case.B[EBP], #0	;Want exact case match?
	JE	10$.S			;Yes
	XORB	AL, AH			;No - might be different case match?
	TESTB	AL, #~20h
	JNE	8$.S			;No
	XORB	AL, AH			;Yes
	MOVZBL	EDX, AL
	BTL	CS:ltrtbl, EDX		;Is it a letter?
	JC	16$.S			;Yes - match
	JMP	10$.S			;No - not match

8$:	XORB	AL, AH
10$:	TESTB	AH, AH			;Not match - end?
	JNE	6$.S			;No - continue
12$:	TESTL	EBP, EBP		;Yes - clear Z and C
14$:	LEAVE				;And return
	RET

;Here with match after *

16$:	TESTB	AL, AL			;Found match if end of string here
	JE	14$.S
	MOVL	wc_svESI.B[EBP], ESI	;Save state
	MOVL	wc_svEDI.B[EBP], EDI
	INCL	ESI
	CALL	cmpstr8			;Compare strings
	JNC	14$.S			;If have complete match
	JE	4$.S			;If found another *
	MOVL	EDI, wc_svEDI.B[EBP]	;Match not possible here - advance one
	MOVL	ESI, wc_svESI.B[EBP]	;  character and try to match that
					;  string
	JMP	4$.S			;Continue
.PAGE
	.SBTTL	cmpstr8 - Subroutine to compare strings

;Subroutine to compare strings (string 1 may contain wild characters) up to
;  wild card character
;	c{SS:ESI} = Pointer to string 1
;	c{ES:EDI} = Pointer to string 2
;	CALL	cmpstr8
;	C:clr,Z:set = Complete match
;	C:set,Z:set = * encountered
;	C:set,Z:clr = No match possible

cmpstr8:LODSB	SS:[ESI]		;Anything left in string 1?
	TESTB	AL, AL
	JNE	6$.S			;Yes
	CMPB	ES:[EDI], #0		;No - anything left in string 2?
	JE	4$.S			;No - have complete match
2$:	TESTL	ESP, ESP		;Yes - make sure Z is clear to indicate
					;  no possible match
	STC				;And set C
4$:	RET

;Here with more in string 2 to check

6$:	CMPB	AL, #'*'		;Another wild character?
	JE	18$.S			;Yes
	CMPB	AL, #'?'		;No - match any single character?
	JE	12$.S			;Yes
8$:	CMPB	ES:[EDI], #0		;No - end of string 2?
	JE	2$.S			;Yes - go check some more
	MOVB	AH, ES:[EDI]		;No - compare
	INCL	EDI
	CMPB	AH, AL
	JE	cmpstr8.S		;If exact match
	CMPB	arg_case.B[EBP], #0	;Want exact case match?
	JE	2$.S			;Yes
	XORB	AH, AL			;No - might be different case match?
	TESTB	AH, #~20h
	JNE	2$.S			;No
	MOVZBL	EDX, AL
	BTL	CS:ltrtbl, EDX		;Yes - is it a letter?
	JC	cmpstr8.S		;Yes - match
	JMP	2$.S			;No - not match

;Here with ? in string 1

12$:	CMPB	ES:[EDI], #0		;End of string 2?
	JE	cmpstr8.S		;Yes - continue
16$:	INCL	EDI
	JMP	cmpstr8.S		;And continue

;Here with * in string 1

18$:	CLRL	EAX			;Indicate have *
	STC
	RET
.PAGE

	.MOD	4
ltrtbl:	.LONG	00000000
	.LONG	00000000
	.LONG	07FFFFFE
	.LONG	07FFFFFE
	.LONG	00000000
	.LONG	00000000
	.LONG	00000000
	.LONG	00000000

	.END


