	.TITLE	GETGROUP - Function to get group information

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

	.PROC	80386

	.INCLUD	XOSINC:\XMAC\STDIO.PAR
	.INCLUD	XOSINC:\XMAC\CTYPE.PAR
	.INCLUD	XOSINC:\XMAC\XOS.PAR
	.INCLUD	XOSINC:\XMAC\XOSERR.PAR
	.INCLUD	XOSINC:\XMAC\XOSTIME.PAR
	.INCLUD	XOSINC:\XMAC\XOSUDFUTIL.PAR

	.STDSEGS

	.PSECT	_TEXT_p

;Function to get group information
;	char  *username;	// Pointer to user name string (group.user)
;	struct grpdata *data;	// Pointer to structure to receive data
;	char *user = getgroup(group, data);
;  Value returned is 0 OK, -1 if error

arg_data    =!20t
arg_username=!16t

$$$=!0
FRM gg_userpnt, 4t
FRM gg_gdffile, 4t
FRM gg_gdfbufr, 80t

gg_SIZE=!$$$

	.ENTRY	getgroup
getgroup:
	PUSHL	EDI
	PUSHL	ESI
	ENTER	gg_SIZE, 0
	PUSHL	#gdfmode		;Open the group definition file
	PUSHL	#gdfname
	CALL	fopen#
	ADDL	ESP, #8t.B
	ORL	EAX, EAX
	JE	38$			;Say bad user if error here
	MOVL	gg_gdffile.B[EBP], EAX
	MOVL	ESI, arg_data.B[EBP]	;Get offset of his data structure
	MOVL	EBX, arg_username.B[EBP]
	MOVL	gg_userpnt.B[EBP], EBX
	LEAL	EDX, gd_grpname.B[ESI]	;Copy the group name he gave us,
	MOVL	ECX, #16t		;  converting to upper case
2$:	MOVB	AL, [EBX]
	INCL	EBX
	CMPB	AL, #0
	JE	8$.S
	CMPB	AL, #LF
	JE	8$.S
	CMPB	AL, #'.'
	JE	10$.S
	CMPB	AL, #'a'
	JB	4$.S
	ADDB	AL, #'A'-'a'
4$:	MOVB	[EDX], AL
	INCL	EDX
	LOOP	ECX, 2$
	JMP	18$.S

;Here if no group was specified

8$:	MOVL	gd_grpname+0.B[ESI], #'USER'
	MOVB	gd_grpname+4.B[ESI], #0
	MOVL	EBX, arg_username.B[EBP]
	MOVB	DL, #4t
	JMP	12$.S

;Here if a group was specified

10$:	MOVB	[EDX], #0		;Put null at end of group
	SUBL	EDX, ESI
	DECL	EDX
12$:	MOVB	[ESI], DL
	LEAL	EDX, gd_usrname.B[ESI]
	MOVL	ECX, #16t
14$:	MOVB	AL, [EBX]
	INCL	EBX
	CMPB	AL, #0
	JE	20$.S
	CMPB	AL, #LF
	JE	20$.S
	CMPB	AL, #'a'
	JB	16$.S
	ADDB	AL, #'A'-'a'
16$:	MOVB	[EDX], AL
	INCL	EDX
	LOOP	ECX, 14$
18$:	JMP	36$

20$:	MOVB	[EDX], #0		;Put null at end of name
	SUBL	EDX, ESI
	SUBL	EDX, #gd_usrname.B
	MOVB	gd_usrlen.B[ESI], DL
gglp:	PUSHL	gg_gdffile.B[EBP]	;Read a line
	PUSHL	#80t.B
	LEAL	EAX, gg_gdfbufr[EBP]
	PUSHL	EAX
	CALL	fgets#
	ADDL	ESP, #12t.B
	ORL	EAX, EAX
	JE	18$.S			;If error (probably EOF)
	LEAL	EBX, gg_gdfbufr[EBP]
	LEAL	EDI, gd_grpname.B[ESI]	;Get the group name from the file
	MOVL	ECX, #18t
	CLRL	EAX
22$:	MOVB	AL, [EBX]		;Compare it to the name he gave us
	INCL	EBX
	CMPB	AL, #0
	JE	gglp.S
	TESTB	_chrtbl#[EAX], #CT$SPACE
	JNE	24$.S
	CMPB	[EDI], AL
	JNE	gglp.S
	INCL	EDI
	JMP	22$.S

;Here at end of group name from the file

24$:	CMPB	[EDI], #0		;End of the name he gave us?
	JNE	gglp.S			;No - continue looking
	LEAL	EDI, gd_udpdev.B[ESI]	;Yes - this is it - copy the device
	MOVL	ECX, #10t		;  name to his data structure
26$:	MOVB	AL, [EBX]
	INCL	EBX
	CMPB	AL, #LF
	JE	gglp
	CMPB	AL, #0
	JE	gglp
	CMPB	AL, #':'
	JE	28$.S
	MOVB	[EDI], AL
	INCL	EDI
	LOOP	ECX, 26$
	JMP	gglp

;Here at end of device name

28$:	MOVW	[EDI], #':'
	LEAL	EDX, gd_addr.B[ESI]
	MOVL	[EDX], #0		;Clear network address field

	CALL	skipws
	CMPB	[EBX], #'['
	JNE	gglp
	INCL	EBX
	CALL	getpart			;Collect the network address
	JNE	30$.S
	CALL	getpart
	JNE	30$.S
	CALL	getpart
	JNE	30$.S
	CALL	getpart
	JE	gglp
30$:	CMPB	AL, #']'
	JNE	gglp
	CALL	skipws
	CALL	getval			;Collect the port number
	MOVL	gd_port.B[ESI], ECX
	CMPB	AL, #0
	JNE	gglp
	PUSHL	gg_gdffile.B[EBP]
	CALL	fclose#
	CLRL	EAX
34$:	LEAVE
	POPL	ESI
	POPL	EDI
	RET

;Here if didn't find the group name in the group definition file - close the
;  file and report bad user name

36$:	PUSHL	gg_gdffile.B[EBP]
	CALL	fclose#
	POPL	EAX
38$:	MOVL	EAX, #-1
	JMP	34$.S

gdfname:.ASCIZ	"XOSCFG:GROUP.DEF"
gdfmode:.ASCIZ	"r"
.PAGE
getpart:CALL	getval
	SHLL	ECX, #24t
	SHRL	[EDX], #8t
	ORL	[EDX], ECX
	CMPB	AL, #'.'
2$:	RET

getval:	CLRL	ECX
4$:	MOVB	AL, [EBX]
	CMPB	AL, #0
	JE	8$.S
	CMPB	AL, #LF
	JE	6$.S
	INCL	EBX
	CMPB	AL, #';'
	JE	8$.S
	CMPB	AL, #'.'
	JE	8$.S
	CMPB	AL, #'0'
	JB	8$.S
	CMPB	AL, #'9'
	JA	8$.S
	IMULL	ECX, #10t.B
	ANDL	EAX, #0Fh.B
	ADDL	ECX, EAX
	JMP	4$.S

6$:	MOVB	AL, #0
8$:	RET

skipws:	MOVB	AL, [EBX]
	ANDL	EAX, #7Fh.B
	TESTB	_chrtbl#[EAX], #CT$SPACE
	JE	8$.S
	INCL	EBX
	JMP	skipws.S

	.END
