	.SBTTL	Parameter file XOSDOS.PAR

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;-------------------------------------------------------------------------------
;
;  XOSDOS.PAR - User-mode include file for bootstrap parameters
;
;  Edit history:
;  -------------
;  18Apr95 (fpj) - Added edit history block.
;
;-------------------------------------------------------------------------------

.IF NDF DEFINES
	.NLIST
	.INCLUD	XOSINC:\XMAC\DEFINES.PAR
	.LIST
.ENDC
	.PARM

;Define DOS PSP offsets

$$$=!0
BLX psp_INT20   , 2t	;Exit
BLX psp_msize   , 2t	;Memory size (in paragraphs)
BLX             , 1t	;Not used
BLX psp_DOScall , 5t	;Far call to DOS
BLX psp_term    , 4t	;Terminate address
BLX psp_break   , 4t	;Break address
BLX psp_error   , 4t	;Error address
BLX psp_parent  , 2t	;Parent PSP pointer (selector only)
BLX psp_htable  , 20t	;Default handle table
BLX psp_env     , 2t	;Environment selector
BLX psp_stack   , 4t	;User stack address
BLX psp_hcnt    , 2t	;Maximum number of handles
BLX psp_hpnt    , 4t	;Pointer to current handle table
BLX psp_prevpsp , 4t	;Pointer to previous PSP (used by SHARE)
BLX             , 6t
BLX psp_protflg , 1t	;Non-zero if PSP contains protected mode selectors
BLX             , 13t	;Not used
BLX psp_INT21   , 3t	;DOS function dispatch
BLX             , 9t	;Not used
BLX psp_fcb1    , 16t	;First command line FCB
BLX psp_fcb2    , 20t	;Second command line FCB
BLX psp_dta     , 128t	;Default disk transfer area, command tail buffer

;Define offsets in each DOS IO block

$$$=!0
BLK             , 2	;Not used
BLK diob_status , 2	;IO status
BLK diob_error  , 4	;Error code
BLK diob_amount , 4	;Amount transfered
BLK diob_handle , 4	;System handle
BLK diob_diob   , 4	;Offset of additional DOS data block used
BLK diob_doshndl, 4	;DOS handle
BLK diob_count  , 4	;Calculated amount to output
BLK diob_buffer , 16t	;Buffer for device name or single character IO
BLK diob_parm   , 64t	;Space for building parameter list for IO
BLK diob_filspec, 64t	;File spec buffer
diob_SIZE=!256t

;Define values for vt_dpmitype

DPMIT_NONE=!0t		;No DPMI client created
DPMIT_16B =!1t		;16-bit client
DPMIT_32B =!2t		;32-bit client

;Define offsets for each FCB table entry

$$$=!0
BLK fcbh_handle, 1
BLK fcbh_flags , 1
BLK fcbh_next  , 1
BLK fcbh_prev  , 1

;Define offsets in the DOS FCBs

$$$=!0
BLX fcb_drive   , 1	;Drive number
BLX fcb_name    , 8	;File name
BLX fcb_ext     , 3	;File extension
BLX fcb_curblock, 2	;Current block number
BLX fcb_recsize , 2	;Record size
BLX fcb_filesize, 4	;File size
BLX fcb_filedate, 2	;File date
BLX fcb_filetime, 2	;File time
BLX fcb_fcbtype , 1	;Internal - FCB type
BLX fcb_fcbattr , 1	;Internal - FCB attribute type
BLX fcb_fcbhndl , 1	;Internal - FCB handle
BLX             , 1	;Internal - Reserved
BLX fcb_dirofs  , 4	;Internal - Directory offset for search
BLX fcb_currec  , 1	;Current record
BLX fcb_ranrec  , 4	;Random-record offset

;Define page 0 offsets

bda_vconfig   =!410h	;(2)  Equipment configuration
bda_vkeysts0  =!417h	;(1)  First keyboard status byte
bda_vkeysts1  =!418h	;(1)  Second keyboard status byte
bda_vkeytak   =!41Ah	;(1)  Keyboard ring buffer taker pointer
bda_vkeyput   =!41Ch	;(1)  Keyboard ring buffer putter pointer
bda_vkeybufr  =!41Eh	;(32) Keyboard ring buffer
bda_vvidmode  =!449h	;(1)  Display mode
bda_vvidwidth =!44Ah	;(2)  Display width
bda_vvidblen  =!44Ch	;(2)  Display buffer length
bda_vvidstart =!44Eh	;(2)  Offset of current display buffer page
bda_vcurpos   =!450h	;(16) Cursor position
bda_vcurmode  =!460h	;(2)  Cursor mode
bda_vdsppage  =!462h	;(1)  Active display page
bda_vdsp6845  =!463h	;(2)  Address (base IO port) for active display
			;	controller
bda_vtimer    =!46Ch	;(4)  Timer counter
bda_vrows     =!484h	;(1)  Number of character rows displayed
bda_vpoints   =!485h	;(2)  Scan rows per character
bda_vvidinfo  =!487h	;(1)  Display information byte
bda_vegainfo  =!489h	;(1)  EGA/VGA information byte
bda_vkeysts2  =!496h	;(1)  Third keyboard status byte
bda_vkeysts3  =!497h	;(1)  Fourth keyboard status byte
bda_vidparcb  =!4A8h	;(4)  Pointer to video parameter control block
bda_vcnfgdata =!4D2h	;(10) Equipment configuration table (INT 15, func 0C0h)

dda_base      =!500h
dda_magic     =!500h	;(4)  Magic number (contains 'DOS*')
dda_fatmode   =!504h	;(1)  Place to store FAT mode byte for INT 21, func 1B
			;	and 1C
;	      =!505h	;(3)  Reserved
dda_slstv     =!508h	;(8)  Pointer table for INT 21, 5D0B for V86 mode
dda_slstp     =!510h	;(10) Pointer table for INT 21, 5D0B for protected mode
;	      =!51Ah	;(6)  Reserved

;The following 32 locations are the DOS "swappable data area" as reported by
;  INT 21 function 5D06.  We report an "in DOS" swappable size of 32 bytes and
;  an "always swappable" size of 0 (which is the same as version 5 of DOS).

dda_swaparea  =!520h	;     Start of the DOS "swappable data area"
dda_criterrf  =!520h	;(1)  Critical error flag
dda_critsecf  =!521h	;(1)  Critical section flag (also called "InDOS flag")
dda_criterrdr =!522h	;(1)  Drive on which current critical error occured
dda_errlocus  =!523h	;(1)  Locus of last error
dda_errxcode  =!524h	;(2)  Extended error code of last error
dda_erraction =!526h	;(1)  Suggested action for last error
dda_errclass  =!527h	;(1)  Class of last error
dda_errpntr   =!528h	;(4)  Pointer for last error (?)
dda_dtaa      =!52Ch	;(4)  Current DTA address
dda_curpsp    =!530h	;(2)  Current PSP selector
;	      =!532h	;(2)  DOS stores SP across an INT 23 here!
dda_tcode     =!534h	;(2)  Return code from last exit
dda_curdrive  =!536h	;(1)  Current drive
dda_brkflag   =!537h	;(1)  Extended break flag
;	      =!538h	;(8)  Reserved

;End of the DOS "swappable data area"

;             =!540h	;(4)  Reserved
;	      =!544h	;(4)  Reserved
;	      =!548h	;(4)  Reserved
;	      =!54Ch	;(4)  Reserved
;	      =!550h	;(4)  Reserved
;	      =!554h	;(4)  Reserved
dda_intrstate =!558h	;(1)  Process interrupt request state
dda_protaddr  =!559h	;(1)  Non-zero if EXEC is using protected addresses
;	      =!55Ah	;(2)  Reserved
dda_execproc  =!55Ch	;(4)  Process ID for DOS exec child process
dda_execterm  =!560h	;(4)  Termination code from DOS exec process

;The next 56 bytes are DPMI client data.  The values here are for the current
;  DPMI client.  Values for inactive clients (except for dda_dpmihda) are saved
;  in the HDA and copied to this area when the client becomes active again.
;  These values must be in the same order as the corresponding HDA values.

dda_dpmihda     =!568h	;(4)  Segment address of DPMI host data area for
			;	current client
			;Following items must be in the same order as the
			;  corresponding HDA items
dda_dpminum     =!56Ch	;(1)  DPMI client number
dda_dpmitype    =!56Dh	;(1)  DPMI client type
dda_dpmiactive  =!56Eh	;(1)  Non-zero when DPMI is active
;	        =!56Fh	;(1)  Reserved
dda_dpmilckpsflg=!570h	;(1)  Non-zero if using protected mode locked stack
dda_dpmilckrsflg=!571h	;(1)  Non-zero if using locked real mode stack
dda_dpmilckpESP =!578h	;(4)  DPMI protected mode locked stack base ESP
dda_dpmilckpSS  =!57Ch	;(4)  DPMI protected mode locked stack base SS
dda_dpmicurpESP =!580h	;(4)  DPMI protected mode current stack ESP
dda_dpmicurpSS  =!584h	;(4)  DPMI protected mode current stack SS
dda_dpmilckrSSSP=!588h	;(4)  DPMI locked real mode stack base SS:SP
dda_dpmicurrSSSP=!58Ch	;(4)  DPMI current real mode stack SS:SP
			;End of items copied from the HDA

;The next 68 bytes are the DOS "list of lists"

dda_lolshrrc  =!5A0h	;(2)  lol-12 Sharing retry count
dda_lolshrrd  =!5A2h	;(2)  lol-10 Sharing retry delay
dda_lolcdb    =!5A4h	;(4)  lol-8  Pointer to current disk buffer
dda_lolconinp =!5A8h	;(2)  lol-4  Pointer to unread CON input
dda_lolfmcb   =!5AAh	;(2)  lol-2  Segment of first memory control block
dda_lstoflsts =!5ACh
dda_lolddpb   =!5ACh	;(4)  lol+0  Pointer to first DOS drive parameter block
dda_loldft    =!5B0h	;(4)  lol+4  Pointer to list of DOS file tables
dda_lolCLOCK  =!5B4h	;(4)  lol+8  Pointer to DOS CLOCK$ device driver
dda_lolCON    =!5B8h	;(4)  lol+12 Pointer to actual DOS CON device driver
dda_lolmaxblk =!5BCh	;(2)  lol+16 Maximum bytes/block of any block device
dda_lolfdb    =!5BEh	;(4)  lol+18 Pointer to first disk buffer
dda_lolcds    =!5C2h	;(4)  lol+22 Pointer to array of current directory
			;	       structures
dda_lolfcbt   =!5C6h	;(4)  lol+26 Pointer to DOS FCB table
dda_lolpfcb   =!5CAh	;(2)  lol+30 Number of protected FCBs
dda_lolnbdev  =!5CCh	;(1)  lol+32 Number of block devices
dda_lollstdrv =!5CDh	;(1)  lol+33 LASTDRIVE command value
dda_lolNULL   =!5CEh	;(18) lol+34 Actual DOS NULL device driver
dda_lolnjoin  =!5E0h	;(1)  lol+52 Number of JOIN'ed drives
;	      =!5E1h	;(3)	     Reserved

dda_temp      =!600h

;End of DOS "list of lists"

;Define values for dda_intrstate

DIS$REQINTR=!02h	;Process interrupt is being held
DIS$HLDINTR=!01h	;Should hold all process interrupt requests

;Define offsets in the DOS extended data area

dxd_base     =!110000h
dxd_syshctbl =!110000h	;(256)DOS system handle count table
dxd_free     =!110100h	;(4)  Offset of first available location
dxd_fnstr    =!110104h	;(4)  Offset of first directory file name string
dxd_diobfree =!110108h	;(4)  Offset of first free DIOB
dxd_diobnum  =!11010Ch	;(4)  Number of DIOBs in use
dxd_diobmax  =!110110h	;(4)  Maximum number of DIOBs in use
dxd_fcbnum   =!110114h	;(1)  Number of FCB handles
dxd_switchchr=!110115h	;(1)  DOS command switch character
dxd_mstrat   =!110116h	;(1)  Memory allocation strategy
			;(1)  Reserved
dxd_protdtaa =!110118h	;(8)  Protected mode DTAA value
dxd_bioshtbl =!110120h	;(12) BIOS handle table
;	     =!11012Ch	;(4)  Reserved
dxd_lasterr  =!110130h	;(4)  Last error returned by XOS
dxd_shrretry =!110134h	;(2)  File sharing retry value
dxd_shrdelay =!110136h	;(2)  File sharing delay value
dxd_fcbtbl   =!110200h	;     DOS FCB table

;Define offsets in a DOS memory block header

$$$=!0
BLX mh_type , 1t	;Block type (must be ASCII M or Z)
BLX mh_psp  , 2t	;Segment selector for owner PSP
BLX mh_size , 2t	;Size of this block (in paragraphs)

;Define DOS error codes

DE_FINV =!1t		;Function number invalid
DE_FNF  =!2t		;File not found
DE_PNF  =!3t		;Path not found
DE_TMOF =!4t		;Too many open files
DE_ACCD =!5t		;Access denied
DE_HNDLI=!6t		;Handle invalid
DE_MCBD =!7t		;Memory control blocks destroyed
DE_INSFM=!8t		;Insufficient memory
DE_MBAI =!9t		;Memory block address invalid
DE_ENVI =!10t		;Environment invalid
DE_FMTI =!11t		;Format invalid
DE_ACDI =!12t		;Access code ivalid
DE_DATI =!13t		;Data invalid
DE_DSKI =!15t		;Disk drive invalid
DE_ARCD =!16t		;Attempt to remove current directory
DE_NTSMD=!17t		;Not same device
DE_NOMRF=!18t		;No more files
DE_WRTPR=!19t		;Write protected
DE_NSU  =!20t		;No such unit
DE_DNRDY=!21t		;Drive not ready
DE_UNKCM=!22t		;Unknown command
DE_DATER=!23t		;Data error
DE_BDRSL=!24t		;Bad request structure length
DE_SEKER=!25t		;Seek error
DE_UKMDT=!26t		;Unknown media type
DE_SCTNF=!27t		;Sector not found
DE_POUTP=!28t		;Printer out of paper
DE_WRFLT=!29t		;Write fault
DE_RDFLT=!30t		;Read fault
DE_FAIL =!31t		;General failure
DE_SHRV =!32t		;Sharing violation
DE_LCKV =!33t		;Lock violation
DE_DSKCI=!34t		;Disk change invalid
DE_FCBU =!35t		;FCB unavailable
DE_FILEX=!80t		;File exists
DE_CMKDR=!82t		;Cannot make directory
DE_CRITE=!83t		;Critial error interrupt failure

;Define DOS error classes

DC_OUTRS=!1t		;Out of resource
DC_TEMP =!2t		;Temporary situation
DC_AUTHR=!3t		;Authorization proglem
DC_INTRN=!4t		;Internal error in system
DC_HRDWR=!5t		;Hardware failure
DC_SFTWR=!6t		;System software failure
DC_APPLI=!7t		;Application program error
DC_NTFND=!8t		;File or item not found
DC_INVTP=!9t		;File or item of invaid format or type
DC_LOCKD=!10t		;File or item interlocked
DC_WRONG=!11t		;Wrong disk in drive, bad spot on disk, etc.
DC_OTHER=!12t		;Other error

;Define DOS error actions

DA_RPSAI=!1t		;Retry without delay, prompt to abort or ignore
DA_RDSAI=!2t		;Retry with delay, prompt to abort or ignore
DA_GTCOR=!3t		;Get corrected information from user
DA_CLNUP=!4t		;Terminate with cleanup
DA_IMEXT=!5t		;Immediate exit
DA_IGN  =!6t		;Ignore error
DA_INTRV=!7t		;Retry after user intervention

;Define DOS error locus values

DL_UNKWN=!1		;Unknown
DL_BLOCK=!2		;Block device
DL_NETWK=!3		;Network related
DL_SER  =!4		;Serial device
DL_MEM  =!5		;Memory related
