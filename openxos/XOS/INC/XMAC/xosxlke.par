	.SBTTL	Parameter file XOSXLKE.PAR

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;-------------------------------------------------------------------------------
;
;  XOSXLKE.PAR - Kernel-mode include file for Loadable Kernel Extension (LKE)
;                parameters.
;
;  Edit history:
;  -------------
;  18Apr95 (fpj) - Added edit history block.
;
;-------------------------------------------------------------------------------

.IF NDF DEFINES
	.NLIST
	.INCLUD	XOSINC:\XMAC\DEFINES.PAR
	.LIST
.ENDC
	.PARM

$$LKE=!1

LKEMAJC=!10t
LKEMINC=!0t

	.MACRO	LKEHEAD name, majver, minver, editnum, type
	.SEG	data_s    , 32BIT    , SELECT=GS_DATA, DATA, READ, WRITE
	.MSECT	data_m    , data_s
	.PSECT	data_p    , data_m   , MOD=4
	.MSECT	symbols_m , data_s
	.PSECT	_symbols_p, symbols_m, OVER
	.LONG	0
	.SEG	code_s, 32BIT , SELECT=GS_CODE, CODE
	.MSECT	code_m, code_s
	.PSECT	code_p, code_m, MOD=4
	.PSECT	once_p, code_m, MOD=4
	.PSECT	code_p, code_m, MOD=4
codebegin'name:
	.LONG	0
	.LONG	_symbols_p
	.LONG	0
	.LONG	data_p
	.LONG	0
	.LONG	0
	.LONG	0
	.LONG	LKEMAJC*10000+LKEMINC
	.LONG	{majver}*1000000h+{minver}*10000h+{editnum}
	.BYTE	type, 0, 0, 0
$$$=!$
	.ASCII	"name"
$=$$$+16t
$$DCANUM=!1
	.ENDM

	.MACRO	LKECONT
	.SEG	data_s    , 32BIT    , SELECT=GS_DATA, DATA, READ, WRITE
	.MSECT	data_m    , data_s
	.PSECT	data_p    , data_m   , MOD=4
	.MSECT	symbols_m , data_s
	.PSECT	_symbols_p, symbols_m, OVER
	.SEG	code_s    , 32BIT , SELECT=GS_CODE, CODE
	.MSECT	code_m    , code_s
	.PSECT	once_p    , code_m, MOD=4
	.PSECT	code_p    , code_m, MOD=4
$$DCANUM=!0
	.ENDM

	.MACRO	LKEEND
	END
	.PSECT	data_p
datatop:!
	.PSECT	code_p
codetop:!
	.ENDM

.IF NE $$BUGRING
	.IMPORT	knlBugLog
.ENDC

	.MACRO	TOFORK  addr
	.NLIST
	CMPB	knlForkLvl##, #FORK_MAIN
.IF NB {addr}
	JNE	addr
.IFF
	JE	$+8.S
	CRASH	TOFK
.ENDC
	MOVB	knlForkLvl##, #FORK_MFORK
	.LIST
	.ENDM

	.MACRO	FROMFORK
	.NLIST
	CALL	knlDsmFork##
	.LIST
	.ENDM

	.MACRO	REQUIREFORK
	.NLIST
	CMPB	knlForkLvl##, #FORK_MAIN
	JNE	$+8.S
	CRASH	NAFK
	.LIST
	.ENDM

	.MACRO	REQUIREMAIN
	.NLIST
	CMPB	knlForkLvl##, #FORK_MAIN
	JE	$+8.S
	CRASH	ATFK
	.LIST
	.ENDM

	.MACRO	REQUIREXFF
	.NLIST
	CMPB	knlForkLvl##, #FORK_XFF
	JNE	$+15t.S
	CMPL	SS:xffMagic##, #XFF_MAGIC
	JE	$+8.S
	CRASH	NAXF
	.LIST
	.ENDM

	.MACRO	UNIMOP  a1, a2, a3, a4
	MOVL	ECX, #{a1}+{a2}*100h+{a3}*10000h+{a4}*1000000h
	JMP	knlUnimOp##
	.ENDM

	.MACRO	DATA
	.PSECT	data_p
	.ENDM

	.MACRO	CODE
	.PSECT	code_p
	.ENDM

	.MACRO	INITSUB  label
	.PSECT	once_p
.IF NB {label}
	.START	label
.ENDC
	.ENDM

	.MACRO	ONCE
	.PSECT	once_p
	.ENDM
