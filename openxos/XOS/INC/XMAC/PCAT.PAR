	.SBTTL	Parameter file PCAT.PAR

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;-------------------------------------------------------------------------------
;
;  PCAT.PAR - Parameter file for PC/AT hardware definitions
;
;  Edit history:
;  -------------
;  18Apr95 (fpj) - Added edit history block.
;  12Oct95 (brn) - Fixed spelling errors
;
;-------------------------------------------------------------------------------


	.PARM

;Define memory mapped locations

monoscn =!0B0000	;Monochrome display screen buffer
colorscn=!0B8000	;Color display screen buffer

;Define IO ports for the DMA controllers

P_DMA1BASE=!000h	;        DMA controller 1 base port number
P_DMA1ADR0=!000h	;(both)  DMA controller 1 channel 0 current address
P_DMA1CNT0=!001h	;(both)  DMA controller 1 channel 0 item count
P_DMA1ADR1=!002h	;(both)  DMA controller 1 channel 1 current address
P_DMA1CNT1=!003h	;(both)  DMA controller 1 channel 1 item count
P_DMA1ADR2=!004h	;(both)  DMA controller 1 channel 2 current address
P_DMA1CNT2=!005h	;(both)  DMA controller 1 channel 2 item count
P_DMA1ADR3=!006h	;(both)  DMA controller 1 channel 3 current address
P_DMA1CNT3=!007h	;(both)  DMA controller 1 channel 3 item count
P_DMA1STS =!008h	;(read)  DMA controller 1 read status register
P_DMA1CMD =!008h	;(write) DMA controller 1 write command register
P_DMA1REQ =!009h	;(write) DMA controller 1 write request register
P_DMA1WSMB=!00Ah	;(write) DMA controller 1 write single mask register bit
P_DMA1MODE=!00Bh	;(write) DMA controller 1 write mode register
P_DMA1CBPL=!00Ch	;(write) DMA controller 1 clear byte pointer latch
P_DMA1TEMP=!00Dh	;(read)  DMA controller 1 read temporary register
P_DMA1MCLR=!00Dh	;(write) DMA controller 1 master clear
P_DMA1CMR =!00Eh	;(write) DMA controller 1 clear mask register
P_DMA1WAMB=!00Fh	;(write) DMA controller 1 write all mask register bits

P_DMA2BASE=!0C0h	;        DMA controller 2 base port number
P_DMA2ADR0=!0C0h	;(both)  DMA controller 2 channel 0 current address
P_DMA2CNT0=!0C2h	;(both)  DMA controller 2 channel 0 item count
P_DMA2ADR1=!0C4h	;(both)  DMA controller 2 channel 1 current address
P_DMA2CNT1=!0C6h	;(both)  DMA controller 2 channel 1 item count
P_DMA2ADR2=!0C8h	;(both)  DMA controller 2 channel 2 current address
P_DMA2CNT2=!0CAh	;(both)  DMA controller 2 channel 2 item count
P_DMA2ADR3=!0CCh	;(both)  DMA controller 2 channel 3 current address
P_DMA2CNT3=!0CEh	;(both)  DMA controller 2 channel 3 item count
P_DMA2STS =!0D0h	;(read)  DMA controller 2 read status register
P_DMA2CMD =!0D0h	;(write) DMA controller 2 write command register
P_DMA2REQ =!0D2h	;(write) DMA controller 2 write request register
P_DMA2WSMB=!0D4h	;(write) DMA controller 2 write single mask register bit
P_DMA2MODE=!0D6h	;(write) DMA controller 2 write mode register
P_DMA2CBPL=!0D8h	;(write) DMA controller 2 clear byte pointer latch
P_DMA2TEMP=!0DAh	;(read)  DMA controller 2 read temporary register
P_DMA2MCLR=!0DAh	;(write) DMA controller 2 master clear
P_DMA2CMR =!0DCh	;(write) DMA controller 2 clear mask register
P_DMA2WAMB=!0DEh	;(write) DMA controller 2 write all mask register bits

P_DMA1PG0 =!087h	;(both)  DMA controller 1 channel 0 page register
P_DMA1PG1 =!083h	;(both)  DMA controller 1 channel 1 page register
P_DMA1PG2 =!081h	;(both)  DMA controller 1 channel 2 page register
P_DMA1PG3 =!082h	;(both)  DMA controller 1 channel 3 page register
P_DMA2PG1 =!08Bh	;(both)  DMA controller 2 channel 0 page register
P_DMA2PG2 =!089h	;(both)  DMA controller 2 channel 1 page register
P_DMA2PG3 =!08Ah	;(both)  DMA controller 2 channel 2 page register
P_REFRSHPG=!08Fh	;(both)  Memory refresh page register

;Define IO ports for the interrupt controllers

P_INC1P0  =!020h	;(both)  Interrupt controller 1 port 0
P_INC1P1  =!021h	;(both)  Interrupt controller 1 port 1
P_INC2P0  =!0A0h	;(both)  Interrupt controller 2 port 0
P_INC2P1  =!0A1h	;(both)  Interrupt controller 2 port 1

;Define values for interrupt controller commands

INT_EOI   =!020h	;Non-specific end of interrupt
INT_POLL  =!00Ch	;Poll interrupt

;Define IO ports for the timer

P_TMRCNT0 =!040h	;(both)  Counter 0
P_TMRCNT1 =!041h	;(both)  Counter 1
P_TMRCNT2 =!042h	;(both)  Counter 2
P_TMRCWR  =!043h	;(both)  Control word register

;Define values for the timer

CNTSPERTICK==!23863t	;Number of clock counts per tick

;Define IO ports for the keyboard controller

P_KEYDATA =!060h	;(both)  Keyboard data buffer
P_SYSCONB =!061h	;(both)  System control port B
P_KEYSTS  =!064h	;(read)  Keyboard status register
P_KEYCMD  =!064h	;(write) Keyboard status register

;Define IO ports for the real-time clock and CMOS RAM

P_CLKADDR =!070h	;(write) Address to access
P_CLKDATA =!071h	;(both)  Clock/CMOS RAM data
P_XCMADDR =!074h	;(write) Extended CMOS address
P_XCMDATA =!076h	;(both)  Extended CMOS data

;Define real-time clock offsets

CLK_SECV =!00h		;Seconds value
CLK_SECA =!01h		;Seconds alarm
CLK_MINV =!02h		;Minutes value
CLK_MINA =!03h		;Minutes alarm
CLK_HOURV=!04h		;Hours value
CLK_HOURA=!05h		;Hours alarm
CLK_DAYW =!06h		;Day of week
CLK_DAYM =!07h		;Day of month
CLK_MONTH=!08h		;Month
CLK_YEAR =!09h		;Year
CLK_STSA =!0Ah		;Status register A
CLK_STSB =!0Bh		;Status register B
CLK_STSC =!0Ch		;Status register C
CLK_STSD =!0Dh		;Status register D

;Define CMOS RAM offsets

CLK_SHUT=!0Fh		;Shutdown status byte
CLK_FTYP=!10h		;Floppy disk drive types
CLK_HTYP=!12h		;Hard disk drive types
CLK_EQ  =!14h		;Equipment byte
CLK_LBMB=!15h		;Low base memory byte
CLK_HBMB=!16h		;High base memory byte
CLK_LXMB=!17h		;Low expansion memory byte
CLK_HXMB=!18h		;High expansion memory byte
CLK_DSKC=!19h		;Disk C extended byte
CLK_DSKD=!1Ah		;Disk D extended byte
CLK_CKSM=!2Eh		;Checksum (2 bytes, sum of 10h through 2Dh)
CLK_CENT=!32h		;Date century byte
CLK_INFO=!33h		;Information flags (set during power on)

;Define other system board ports

P_SYSCONA =!092h	;(both)  System control port A
P_POSSYSEN=!094h	;(both)  System board POS setup enable
P_POSCHAN =!096h	;(both)  POS channel select
P_POSID   =!100h	;(read)  POS adapter ID
P_POSREG2 =!102h	;(both)  POS register 2
P_POSREG3 =!103h	;(both)  POS register 3
P_POSREG4 =!104h	;(both)  POS register 4
P_POSREG5 =!105h	;(both)  POS register 5
P_POSSAEXT=!106h	;(both)  POS subaddress extension

;Define IO ports for the 80287 math coprocessor

P_MATHCBSY=!0F0h	;(write) Clear latched busy indication
P_MATHRSET=!0F1h	;(write) Reset math coprocessor

;Define IO ports for the ATA(IDE) disk controller

P_DC1HDBASE=!1F0h

P_DCHDDATA =!0h		;(both)  Hard disk data register
P_DCHDERR  =!1h		;(read)  Hard disk error register
P_DCHDWP   =!1h		;(write) Hard disk write precomp value register
P_DCHDSCN  =!2h		;(both)  Hard disk sector count
P_DCHDSEC  =!3h		;(both)  Hard disk sector number
P_DCHDCYL  =!4h		;(both)  Hard disk cylinder number low byte
P_DCHDCYH  =!5h		;(both)  Hard disk cylinder number high byte
P_DCHDDH   =!6h		;(both)  Hard disk drive/head
P_DCHDSTS  =!7h		;(read)  Hard disk status register
P_DCHDCMD  =!7h		;(write) Hard disk command register
P_DCHDCTL  =!206h	;(write) Hard disk control register
P_DCHDCTLA =!0Eh	;(write) Hard disk control register (alternate address)

;Define IO ports for the ATAPI disk controller

P_DCATAPIDATA=!0h	;(both)  ATAPI data register
P_DCATAPIERR =!1h	;(read)  ATAPI error register
P_DCATAPIFEAT=!1h	;(write) ATAPI feature register
P_DCATAPIIR  =!2h	;(read)  ATAPI interrupt reason register
P_DCATAPIBCL =!4h	;(both)  ATAPI byte register low byte
P_DCATAPIBCH =!5h	;(both)  ATAPI byte register high byte
P_DCATAPIDS  =!6h	;(both)  ATAPI drive select register
P_DCATAPISTS =!7h	;(read)  ATAPI status register
P_DCATAPICMD =!7h	;(write) ATAPI command register
P_DCATAPICTL =!206h	;(write) ATAPI control register
P_DCATAPICTLA=!0Eh	;(write) ATAPI control register (alternate address)

;Define IO ports for the primary floppy disk controller

P_DC1FDBASE=!3F0h	;        Floppy disk base register number
P_DCFDSTSA =!0h		;(read)  Status register A (PS/2 only)
P_DCFDSTSB =!1h		;(read)  Status register B (PS/2 only)
P_DCFDDOR  =!2h		;(write) Floppy disk digital output register
P_DCFDSTS  =!4h		;(both)  Floppy disk main status register
P_DCFDDATA =!5h		;(both)  Floppy disk data register
P_DCFDDIR  =!7h		;(read)  Floppy disk digital input register
P_DCFDCTL  =!7h		;(write) Floppy disk control register
P_DCFDCR2  =!402h	;(write) Floppy disk (CompatiCard) control register 2

;Define IO ports for the PS/2 ESDI hard disk controller

P_PSEDBASE =!3510h
P_PSEDSTSI =!0h		;(16/read)  Status interface register
P_PSEDCMDI =!0h		;(16/write) Command interface register
P_PSEDBSTS =!2h		;(8/read)   Basic status register
P_PSEDBCON =!2h		;(8/write)  Basic control register
P_PSEDISTS =!3h		;(8/read)   Interrupt status register
P_PSEDATTEN=!3h		;(8/write)  Attention register

;Define IO ports for the EGA or VGA display controller

			;EGA VGA
P_EGAMCRTINDX=!3B4h	; w  rw   Monochrome CRT controller index
P_EGAMCRTDATA=!3B5h	; w  rw   Monochrome CRT controller data
P_EGAMSTS1   =!3BAh	;r   r    Monochrome input status 1
P_EGAMFEATURE=!3BAh	; w       Monochrome feature control
P_EGABASE    =!3C0h	;	  Base port number
P_EGAATTRIB  =!3C0h	; w   w   Attribute controller index and data
P_EGAATTRRD  =!3C1h	;    r    Attribute data read-back
P_EGASTATUS0 =!3C2h	;r   r    Input status 0
P_EGAMISC    =!3C2h	; w   w   Miscellaneous output
P_EGAVGAENB  =!3C3h	;    rw   VGA enable register
P_EGASEQINDX =!3C4h	;rw  rw   Sequencer index
P_EGASEQDATA =!3C5h	;rw  rw   Sequencer data
P_EGADACPMASK=!3C6h	;    rw   Pixel mask register
P_EGADACSTS  =!3C7h	;    r    DAC status
P_EGADACRINDX=!3C7h	;     w   DAC write index
P_EGADACWINDX=!3C8h	;    rw   DAC read index
P_EGADACDATA =!3C9h	;    rw   DAC data
P_EGAFEATRD  =!3CAh	;    r    Feature control read-back
P_EGAGC2P    =!3CAh	; w       Graphics controller 2 position
P_EGAMISCRD  =!3CCh	;    r    Miscellaneous output read-back
P_EGAGC1P    =!3CCh	; w       Graphics controller 1 position
P_EGAGCINDX  =!3CEh	; w  rw   Graphics controller index
P_EGAGCDATA  =!3CFh	; w  rw   Graphics controller data
P_EGACCRTINDX=!3D4h	; w  rw   Color CRT controller index
P_EGACCRTDATA=!3D5h	; w  rw   Color CRT controller data
P_EGACSTS1   =!3DAh	;r   r    Color input status 1
P_EGACFEATURE=!3DAh	; w       Color feature control

;Define IO ports for the MDA display controller

P_MDABASE    =!3B0h	;	  Base port number
P_MDACRTINDX =!3B4h	;(write)  CRT controller index
P_MDACRTDATA =!3B5h	;(write)  CRT controller data
P_MDACONTROL =!3B8h	;(write)  Control register
P_MDASTATUS  =!3BAh	;(read)   Status register
P_MDACONFIG  =!3BFh	;(write)  Configuration switch

;Define IO ports for the serial ports (8250 except where noted)

P_COM1BASE  =!3F8h	;        Base value for COM1
P_COM2BASE  =!2F8h	;        Base value for COM2
P_COMRDATA  =!0h	;(read)  Receive data
P_COMXDATA  =!0h	;(write) Transmit data
P_COMBRLSB  =!0h	;(both)  Baud rate LDB value
P_COMINTENB =!1h	;(write) Interrupt enable register
P_COMBRMSB  =!1h	;(both)  Baud rate MSB value
P_COMINTID  =!2h	;(read)  Interrupt ID register
P_COMFIFOCTL=!2h	;(write) FIFO control register (16550 only)
P_COMLINECON=!3h	;(both)  Line control register
P_COMMODMCON=!4h	;(both)  Modem control register
P_COMLINESTS=!5h	;(read)  Line status register
P_COMMODMSTS=!6h	;(read)  Modem status register
P_COMSCRATCH=!7h	;(both)  Scratch register

;Define bits in the FIFO control register (16550 only)

CMFC$RCVRLVL=!0C0h	;Receiver trigger level
CMFC$DMA    =! 08h	;DMA mode select
CMFC$XMITRST=! 04h	;Xmit FIFO reset
CMFC$RCVRRST=! 02h	;Receiver FIFO reset
CMFC$ENABLE =! 01h	;FIFO enable

;Define bits in the interrupt enable register (P_COMINTENB)

CMINT$MODSTS=!08h	;Modem status change
CMINT$RCVSTS=!04h	;Receiver status change
CMINT$TRNEMP=!02h	;Transmitter holding register empty
CMINT$RCVAVL=!01h	;Received data available

;Define bits in the modem control register (P_COMMODMCON)

CMMDC$OUT2=!08h		;Output 2
CMMDC$OUT1=!04h		;Output 1
CMMDC$RTS =!02h		;RTS
CMMDC$DTR =!01h		;DTR
