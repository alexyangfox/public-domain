	.SBTTL	Parameter file XOSXDISK.PAR

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;-------------------------------------------------------------------------------
;
;  XOSXDISK.PAR - Kernel-mode include file for disk parameters
;
;  Edit history:
;  -------------
;  18Apr95 (fpj) - Added edit history block.
;
;-------------------------------------------------------------------------------

	.PARM

;Define offsets in the device characteristics block used to specify DOS
;  drive letters

$$$=!dct_lnkSIZE
BLK dct_dosnmprev, 4t		;Offset of pointer in previous block
BLK dct_dosnmpart, 4t		;Partition (secondary unit) number
BLK dct_dosnmname, 4t		;Dos drive letter

;Define stack frame offsets used in some local file routines when opening files

$$$=!0
FRM of_frame1  , 4t	;Pointer to level 1 stack frame
FRM of_frame2  , 4t	;Pointer to level 2 stack frame
FRM of_namepnt , 4t	;File name pointer
FRM of_direbfr , 4t	;Offset of buffer containing directory entry
FRM of_direofs , 4t	;Offset in block for directory entry
FRM of_direblk , 4t	;Block in directory for directory entry
FRM of_dentsize, 4t	;Current directory entry size
FRM of_dentneed, 4t	;Size needed for open directory entry
FRM of_holepos , 4t	;Offset in directory of first open directory entry
FRM            , 1t
FRM of_isname  , 1t	;Non-zero if this is the name part
FRM of_retry   , 1t	;Retry counter
FRM of_attrib  , 1t	;Attribute mask for search
FRM of_wild    , 1t	;Non-zero if have wild-card character in name
FRM of_respath , 1t	;Non-zero if have resolved the default path
FRM of_lgchksum, 1t	;Checksum for long file names
FRM of_lgnum   , 1t	;Current long file name chunk number
FRM of_lgcnt   , 1t
FRM            , 3t
FRM of_percnt  , 4t	;Number of periods in name
FRM of_namllen , 4t	;Length of long name (Unicode characters)
FRM of_dirshort, 16t	;Current short directory entry
FRM of_namshort, 140t
FRM of_dirlong , 520t	;Current long directory entry
FRM of_namlong , 800t	;Current string to search for
FRM of_wmask   , 800t	;Buffer for wild-card mask
FRM of_devdep , 0t	;Start of device dependent part of stack
of_SIZE==!$$$-8

;Define offsets in the controller dispatch tables

$$$=!0
BLK kf_init     , 4t	;(Function)   Initialize controller
BLK kf_getparms , 4t	;(Function)   Get drive parameters
BLK kf_getaparms, 4t	;(Function)   Get alternate drive parameters
BLK kf_setparms , 4t	;(Function)   Set drive parameters
BLK kf_readraw  , 4t	;(Function)   Read raw data
BLK kf_readdata , 4t	;(Function)   Read data
BLK kf_readlist , 4t	;(Function)   Read buffer list
BLK kf_readid   , 4t	;(Function)   Read ID field and set sector size
BLK kf_writraw  , 4t	;(Function)   Write raw data
BLK kf_writdata , 4t	;(Function)   Write data
BLK kf_writlist , 4t	;(Function)   Write buffer list
BLK kf_format   , 4t	;(Function)   Format track
BLK kf_chkwp    , 4t	;(Function)   Check write protect status
BLK kf_chkchg   , 4t	;(Function)   Check for changed disk
BLK kf_gettoc   , 4t	;(Function)   Get CD-ROM TOC data
BLK kf_gettrks  , 4t	;(Function)   Get CD-ROM track data
BLK ks_media    , 4t	;(Subroutine) Determine media type at main program level
BLK ks_chkwp    , 4t	;(Subroutine) Check write protect status
BLK ks_chkchg   , 4t	;(Subroutine) Check for possible disk change at main
			;		program level
BLK ks_senchg   , 4t	;(Subroutine) Sense disk change
BLK ks_addunit  , 4t	;(Subroutine) Add new disk unit
BLK ks_unmount  , 4t	;(Subroutine) Unmount disk (resets parameters)

;Define offsets in the disk KCB

kcb_mSIZE=!56t
$$$=!-kcb_mSIZE
BLK kcb_left    , 4t	;Amount left to transfer
BLK kcb_amount  , 4t	;Amount transfered
BLK kcb_buffer  , 4t	;Current buffer in buffer list
BLK kcb_fucb    , 4t	;Offset of first UCB for controller
BLK kcb_reqhead , 4t	;Request list head pointer
BLK kcb_reqtail , 4t	;Request list tail pointer
BLK kcb_curdcb  , 4t	;Offset of current DCB
BLK kcb_ists    , 1t	;Interrupt status value
BLK kcb_ireason , 1t	;Interrupt reason bits
BLK kcb_ierror  , 1t
BLK             , 1t
BLK kcb_ioreg1  , 4t	;First base IO register number for controller
BLK kcb_ioreg2  , 4t	;Second base IO register number for controller
			;WARNING:  Next 3 offsets MUST match corresponding
			;	   offsets in DCBs!
BLK kcb_dmachnl , 1t	;DMA channel number
BLK kcb_sizex   , 1t	;Size index for the KCB
BLK             , 2t
BLK kcb_fdisp   , 4t	;Offset of fork routine
BLK kcb_fnext   , 4t	;Offset of next block in fork request list
BLK kcb_magic   , 4t	;Magic number for KCBs = 'KCB'
BLK kcb_next    , 4t	;Offset of next KCB in system
.IF NE kcb_next
	.IRP	q, >kcb_next
	.ERROR	KCB starting offset is wrong, kcb_next = q'h
	.ENDR
.ENDC
BLK kcb_nexts   , 4t	;Offset of next KCB of same type
BLK kcb_disp    , 4t	;Offset of controller function dispatch table
BLK kcb_type    , 4t	;Controller type
BLK kcb_intstate, 1t	;Interrupt state
BLK kcb_bits    , 1t	;Controller type bits
BLK kcb_itimer  , 1t	;Interrupt time-out counter
BLK kcb_intlvl  , 1t	;Interrupt level
BLK kcb_sts1    , 1t	;Status bits
BLK kcb_sts2    , 1t	;Retry counts
BLK kcb_fdrslt  , 1t	;First result byte
BLK             , 1t
BLK kcb_pktpnt  , 4t	;Offset of current ATAPI command packet
BLK kcb_cmdpkt  , 12t	;ATAPI command packet
BLK kcb_data    , 8t
BLK kcb_sense   , 20t	;Sense data
BLK kcb_devdep  , 0t	;Start of device depedent part

;Define offsets in the device dependent part of the KCB for hard disks

$$$=!kcb_devdep
BLK kcb_hduxint , 4t	;Number of unexpected interrupts
kcb_hdSIZE==!$$$

;Define bits for kcb_bits

KB$ERROR =!80h		;Error occured during initialization - controller is
			;  not usable
KB$DEFER =!40h		;Defered output is allowed
KB$AHEAD =!20h		;Read-ahead is allowed

;Define bits for kcb_sts1

K1$RESET   =!80h	;Reset in progress
K1$RESULT  =!40h	;Result phase is next (FDKADRV only)
K1$OUTPUT  =!40h	;Doing output (HDKADRV only)
K1$INT     =!20h	;Expecting interrupt (FDKADRV only)
K1$BLKCNT  =!20h	;Command expects block count (HDKADRV only)
K1$INPUT   =!10h	;Doing input (HDKADRV only)
K1$TIMEOUT =!08h	;Disk has timed-out
K1$DMAALLOC=!04h	;DMA channel is allocated
K1$DMAINUSE=!02h	;DMA channel is in use
K1$LIST    =!01h	;Transferring buffer list

;Define bits for kcb_sts2

K2$MSENSOR =!08h	;Media sensor is in use

;Define values for kcb_intstate

HDIS_ATA =!0t		;ATA interrupt
HDIS_PKT =!1t		;Ready for ATAPI command packet
HDIS_DATA=!2t		;Ready for ATAPI data transfer

;Define values for kcb_fdtype

FCT_PCAT=!0t		;Standard PC AT floppy controller
FCT_CMPT=!1t		;CompatiCard I floppy controller

;Define offsets in the disk UCB

ucb_mSIZE=!148t
$$$=!-ucb_mSIZE
BLK ucb_dosnmdct , 4t	;Offset of first DOSNAME device characteristics block
BLK ucb_punit    , 1t	;Primary unit number
BLK ucb_sunit    , 1t	;Secondry unit number (must be ucb_punit + 1)
BLK ucb_fsver    , 1t	;File system version
BLK ucb_fsspec   , 1t	;File system type as specified in partition table
BLK ucb_fsname   , 8t	;File system name
BLK ucb_lastalloc, 4t	;Last cluster allocated
BLK ucb_fatwrite , 4t	;Offset of first buffer in the FAT write list (DFS)
BLK ucb_bits     , 1t	;Unit description bits (this and the following 3
BLK ucb_sts1     , 1t	;Unit status bits	  bytes must stay in this
BLK ucb_sts2     , 1t	;			  order)
BLK ucb_sts3     , 1t
BLK ucb_fstype   , 1t	;File system type
BLK ucb_select   , 1t	;Unit select value
BLK ucb_index    , 1t	;Index on controller
BLK ucb_clusx    , 1t	;Shift count to convert blocks to clusters
BLK ucb_clussize , 4t	;Cluster size (blocks)
BLK ucb_bpclus   , 4t	;Bytes per cluster
BLK ucb_acstime  , 4t	;Time (in scheuler ticks) of last access to disk
BLK ucb_csecsz   , 4t	;Sector size (in bytes)
BLK ucb_isecsz   , 4t	;Initial sector size (in bytes)
BLK ucb_cylmax   , 4t	;Maximum cylinder number
BLK ucb_ccylns   , 4t	;Cylinders per disk
BLK ucb_icylns   , 4t	;Initial cylinders per disk
BLK ucb_csects   , 4t	;Sectors per track
BLK ucb_isects   , 4t	;Initial sectors per track
BLK ucb_cheads   , 4t	;Heads per cylinder
BLK ucb_iheads   , 4t	;Initial heads per cylinder
BLK ucb_cblocks  , 4t	;Number of usable sectors on disk
BLK ucb_iblocks  , 4t	;Initial number of usable sectors on disk
BLK ucb_total    , 4t	;Total number of clusters on disk
BLK ucb_avail    , 4t	;Clusters available for allocation
BLK ucb_highcl   , 4t	;Highest valid cluster number + 1
BLK ucb_ffatblk  , 0t	;Disk block for first FAT block (DFS)
BLK ucb_sattbl   , 4t	;Offset of SAT block table (XFS)
BLK ucb_rootpnt  , 4t	;Pointer to data block for root directory
BLK ucb_fatmode  , 1t	;DOS FAT mode byte
BLK ucb_partnx   , 1t	;Partition index
BLK ucb_unittype , 1t	;Unit type
BLK ucb_sizex    , 1t	;Size index for the UCB
BLK ucb_partnoff , 4t	;Position of beginning of partition
BLK ucb_pathsize , 0t	;Size of the path table (CD9660 only)
BLK ucb_numsat   , 4t	;Number of SAT or FAT blocks on the disk
BLK ucb_satsize  , 4t	;Size of a SAT or FAT block (DFS)
BLK ucb_rootcls  , 4t	;Cluster for root directory (DFS)

BLK ucb_rootblk  , 0t	;Disk block for root directory (DFS)
BLK ucb_nf1pnt   , 1t	;Number of pointers in the base FIB (XFS)
BLK ucb_nfxpnt   , 1t	;Number of pointers in each extended FIB (XFS)
BLK ucb_sattblx  , 1t	;Size index for the SAT block table
BLK ucb_numpartn , 1t	;Number of partitions
BLK ucb_rootsize , 0t	;Size of the root directory (blocks) (DFS)
BLK ucb_pntsize  , 4t	;Size of a FIB pointer (XFS)
BLK ucb_fcblk    , 4t	;Block number for first allocated cluster (DFS)
BLK ucb_grpsize  , 4t	;Default group size
BLK ucb_magic    , 4t	;Magic number of UCBs = 'UCB'
BLK ucb_next     , 4t	;Offset of next UCB for controller
.IF NE ucb_next
	.IRP	q, >ucb_next
	.ERROR	UCB starting offset is wrong, ucb_next = q'h
	.ENDR
.ENDC
BLK ucb_name     , 16t	;Disk unit name (ASCII)
BLK ucb_dosname  , 16t	;DOS disk unit name (ASCII)
BLK ucb_volname  , 16t	;Volume disk unit name (ASCII)
BLK ucb_hash     , 4t	;Offset of disk block hash table
BLK ucb_ioreg1   , 4t	;First base IO register for controller
BLK ucb_ioreg2   , 4t	;Second base IO register for controller
BLK ucb_ext      , 4t	;Offset of UCB extension block
BLK ucb_kcb      , 4t	;Offset of KCB for disk
BLK ucb_baseucb  , 4t	;Offset of base UCB for unit
BLK ucb_disp     , 4t	;Offset of dispatch table for controller
BLK ucb_unmount  , 4t	;Offset of unmount routine for disk
BLK ucb_sdisp    , 4t	;Offset of SVC dispatch table to use
BLK ucb_shrdelay , 4t	;File sharing retry delay factor
BLK ucb_devchar  , 4t	;Offset of device characteristics table for disk
BLK ucb_dsp      , 4t	;Bits for dcb_dsp
BLK ucb_dcbcnt   , 4t	;Total number of DCBs associated with this unit
BLK ucb_xdcb     , 4t	;Offset of exclusive access DCB
BLK ucb_satraa   , 4t	;Maximum FAT read-ahead blocks
BLK ucb_stopxff  , 4t	;Selector for fork frame which has stopped the unit
BLK ucb_rddcb    , 4t	;Number of DCBs reading from this unit
BLK ucb_wrdcb    , 4t	;Number of DCBs writing to this unit
BLK ucb_resxff   , 4t	;Selector for XFF which has the disk resource
BLK ucb_reshead  , 4t	;Disk resource wait list head pointer
BLK ucb_restail  , 4t	;Disk resource wait list tail pointer
BLK ucb_scsiicb  , 4t	;Offset of ICB for SCSI interface
BLK ucb_scsitar  , 1t	;Target ID for SCSI interface
BLK ucb_scsilun  , 1t	;Logical unit number for SCSI interface
BLK ucb_pccsocket, 1t
BLK              , 1t	;Reserved (can not be used)
BLK ucb_dthlimit , 4t	;Data transfer hardware limit (blocks)
BLK ucb_ramax    , 4t	;Read-ahead current maximum (blocks)
BLK ucb_wtmax    , 4t	;Write transfer maximum (blocks)
BLK ucb_pblksz   , 4t	;Physical block size (logical blocks)
BLK ucb_rootprot , 4t	;Protection for root directory
BLK ucb_pccregfnc, 4t
BLK ucb_pccdcb   , 4t
BLK ucb_root1cs  , 4t	;Checksum for first root directory block
BLK ucb_fat1cs   , 4t	;Checksum for first FAT
BLK ucb_fat2cs   , 4t	;Checksum for second FAT
BLK ucb_fat3cs   , 4t	;Checksum for third FAT
BLK ucb_fat4cs   , 4t	;Checksum for fourth FAT
BLK ucb_volcdt   , 8t	;Volume creation date/time
BLK ucb_volmdt   , 8t	;Volume modify date/time
BLK ucb_volxdt   , 8t	;Volume expriation date/time
BLK ucb_voledt   , 8t	;Volume effective date/time
BLK ucb_tdeverr  , 4t	;Total number of device errors
BLK ucb_hdeverr  , 4t	;Number of hard device errors
BLK ucb_tdataerr , 4t	;Total number of data errors
BLK ucb_hdataerr , 4t	;Number of hard data errors
BLK ucb_tseekerr , 4t	;Total number of seek errors
BLK ucb_hseekerr , 4t	;Number of hard seek errors
BLK ucb_tidferr  , 4t	;Total number of ID field errors
BLK ucb_hidferr  , 4t	;Number of hard ID field errors
BLK ucb_trnferr  , 4t	;Total number of record not found errors
BLK ucb_hrnferr  , 4t	;Number of hard record not found errors
BLK ucb_tovrnerr , 4t	;Total number of DMA overrun errors
BLK ucb_hovrnerr , 4t	;Number of hard DMA overrun errors
BLK ucb_hungerr  , 4t	;Number of device time-outs
BLK ucb_shrfail  , 4t	;Number of file sharing errors
BLK ucb_shrretry , 4t	;Number of file sharing retries
BLK ucb_blockin  , 4t	;Number of blocks input
BLK ucb_blockout , 4t	;Number of blocks output
BLK ucb_bytein   , 4t	;Number of bytes input
BLK ucb_byteout  , 4t	;Number of bytes output
BLK ucb_hdfcopy  , 0t	;First item to copy when setting up partition
BLK ucb_kondep   , 0t	;Controller type depedent area

;Define offsets for the controller dependent part of the UCB for floppies

$$$=ucb_kondep
BLK ucb_fdmode   , 1t	;Mode value
BLK ucb_fdsecs   , 1t	;Sector size value for controller
BLK ucb_fdtrkd   , 1t	;Track density
BLK ucb_fdctrk   , 1t	;Current track number
BLK ucb_fdmoto   , 1t	;Motor on bit for drive
BLK ucb_fdmoc    , 1t	;Motor off timer count
BLK ucb_fdsrt    , 1t	;Step rate time
BLK ucb_fdmot    , 1t	;Motor off time (seconds)
BLK ucb_fdxgpl   , 2t	;Gap length for data transferes
BLK ucb_fdspcfy  , 2t	;Value for specify command
BLK ucb_fdhut    , 2t	;Head unload time
BLK ucb_fdhlt    , 2t	;Head load time
BLK ucb_fdmst    , 4t	;Motor start time (ticks)
BLK ucb_fdrslt   , 8t	;Result bytes
ucb_fdSIZE=!$$$

;Define offsets in the UCB extension block

$$$=!0
BLK ucbx_model   , 44t	;Disk model description
BLK ucbx_serialno, 24t	;Disk serial number or other data
BLK ucbx_revision, 12t	;Disk revision number
ucbx_COPY=!$$$
BLK ucbx_vollabel, 32t	;Volume label
BLK ucbx_volid   , 16t	;Volume ID
ucbx_SIZE=!$$$
XMBINDEX ucbx_INDEX, ucbx_SIZE

;Define offsets in the file system control blocks (FSCB)

$$$=!0
BLK fscb_next, 4t	;Offset of next FSCB
BLK fscb_chk1, 4t	;Offset of first file system check routine
BLK fscb_chk2, 4t	;Offset of second file system check routine
fscb_SIZE=!$$$

;Define offsets in the device dependent part of disk DCBs

$$$=!dcb_devbgn
BLK dcb_dkucb    , 4t	;Offset of UCB
BLK dcb_dkreqnext, 4t	;Next DCB in controller request list
BLK dcb_dkdblk   , 4t	;Current disk position (logical disk block)
BLK dcb_dkpbfr   , 4t	;Offset of pending write cache buffer
BLK dcb_dkfpos   , 4t	;Current file position (byte in file or on disk)
BLK dcb_dkfilepnt, 4t	;Pointer to file data
BLK dcb_dkdevdep , 8t	;"Device dependent" area
dcb_dkSIZE=!$$$
XMBINDEX dcb_dkINDEX, dcb_cSIZE+dcb_dkSIZE

;Define constants for the disk file structures

DK$MAGIC=!0FF550055h	;Magic number for first 4 bytes in disk block

;Define bits for dcb_sts2 for disks (top four bits are common to all devices)

D2$DCHG  =!04h		;Disk has been changed
D2$CHKCHG=!02h		;Doing disk change check

;Define bits for dcb_sts3 for disks

D3$DFRW  =!04h		;Waiting for defered write to finish
D3$BLKW  =!02h		;Waiting for disk block
D3$MNTW  =!01h		;Waiting for disk mount

;Define bits for ucb_sts1

U1$WPROT =!80h		;Disk is write protected
U1$MOUNT =!40h		;Disk is mounted
U1$VALID =!20h		;Disk contains valid data
U1$FIXCFG=!10h		;Disk configuration is fixed
U1$NOINQ =!08h		;Do not do drive inquiry (SCSI only)
U1$RECAL =!04h		;Need to recalibrate
U1$HFTRK =!02h		;Have 48 tpi disk in 96 tpi drive
U1$MOTON =!01h		;Motor is on (floppy only)

;Define bits for ucb_sts2

U2$FRCMOUNT=!20h	;Mount has been forced
U2$REQUNMNT=!10h	;Request to unmount unit
U2$PACKET  =!08h	;Use ATAPI packet commands
U2$DCHG    =!04h	;Disk has been changed
U2$MCHG    =!02h	;Disk may have been changed (hardware level)
U2$REMOVED =!01h	;Controller has been removed (hardware level)

;Define bits for ucb_sts3

U3$XALL    =!80h	;Exclude all access
U3$STOPPED =!40h	;Disk unit has been stopped
U3$FAT32   =!20h	;Disk has 32 bit FAT entires (DOS file structure only)
U3$FAT12   =!10h	;Disk has 12 bit FAT entires (DOS file structure only)
U3$CMDINT  =!04h	;ATAPI command response = Interrupt response (seperate
			;  bit to make testing easier)
U3$ATAPIRSP=!03h	;ATAPI command response type
  ACR_NA     =!0	;  N/A (not ATAPI device)
  ACR_SLOW   =!1	;  Slow (microprocessor) response
  ACR_INT    =!2	;  Interrupt response
  ACR_FAST   =!3	;  Fast (< 50us) response

;Define bits for ucb_bits

;;;; UB$REMOVE =!80h		;Disk is removeable

UB$MEDIAC =!40h		;Unit has media change sensor
UB$48TPI  =!20h		;48 TPI drive (floppy only)
UB$ATAPI  =!20h		;ATAPI drive (HDKA disk only)
UB$DENSITY=!18h		;Highest available data density (floppy only)
  DD_SINGLE =!0t<3	;  Single density
  DD_DOUBLE =!1t<3	;  Double density
  DD_HIGH   =!2t<3	;  High density
UB$LBA    =!02h		;Disk supports LBA mode
UB$DUPFAT =!01h		;Disk maintains duplicate FATs

;Define values for ucb_unittype (NOTE: floppy types which support both DD and
;  HD formats must be even values, all other floppy types must be odd values)

DT_HARD=!0t		;Hard disk
DT_DD3 =!1t		;3.5" double density floppy
DT_HD3 =!2t		;3.5" high density floppy
DT_DD5 =!3t		;5.25" double density floppy
DT_HD5 =!4t		;5.25" high density floppy
DT_DD8 =!5t		;8" double density floppy
DT_UHD3=!10t		;Ultra-high desnsity floppy (LS-120)
DT_MEM =!15t		;Memory disk
DT_CDRM=!16t		;CD-ROM
DT_WORM=!17t		;WORM
DT_OPTD=!18t		;Optical disk

;Define offsets for disk cache buffers

CB_HDRSIZE=!72t		;Size of the buffer header
$$$=!-CB_HDRSIZE	;Note: Following two items MUST be the first two items
			;	 in the header
BLK cb_magic   , 4t	;Magic number which identifies a cache buffer block
BLK cb_next    , 4t	;Offset of next buffer of same type
BLK cb_whead   , 2t	;Buffer wait list head pointer (disk only)
BLK cb_wtail   , 2t	;Buffer wait list tail pointer (disk only)

BLK cb_hnext   , 4t	;Hash list forward pointer (disk only)
BLK cb_hprev   , 4t	;Hash list backward pointer (disk only)

BLK cb_nbp     , 0	;Next buffer in pipe (pipe only)
BLK cb_anext   , 4t	;Allocation list forward pointer (disk only)

BLK cb_count   , 0	;Bytes in buffer (pipe only)
BLK cb_aprev   , 4t	;Allocation list backward pointer (disk only)

BLK cb_lockxff , 2t	;Selector of extended fork frame which has this block
			;  locked (disk only)
BLK cb_usecnt  , 2t	;Buffer use count
BLK cb_block   , 0	;Disk block number (all except pipe)
BLK cb_ppo     , 2t	;Putter pointer offset (pipe only)
BLK cb_tpo     , 2t	;Taker pointer offset (pipe only)
BLK cb_dev     , 4t	;Pointer to disk UCB or pipe dst DCB
BLK cb_dirfib  , 0	;Offset of directory FIB (base FIB only)
BLK cb_prevfib , 4t	;Offset of previous extended FIB or of base FIB
			;  (extended FIB only)
BLK cb_nextfat , 0t	;Next FAT block to write (DOS file system FAT blocks
			;  only)
BLK cb_nextfib , 4t	;Offset of next extended FIB (FIB only)
BLK cb_xrcnt   , 2t	;Deny read count (base FIB only)
BLK cb_xwcnt   , 2t	;Deny write count (base FIB only)
BLK cb_readcnt , 2t	;Read count (base FIB only)
BLK cb_writecnt, 2t	;Write count (base FIB only)
BLK cb_nocomcnt, 2t	;Number of non-compatibility mode opens
BLK cb_opencnt , 2t	;Open count (base FIB only)
BLK cb_errcode , 2t	;Error code
BLK cb_sts     , 1t	;Status bits
BLK            , 1t
BLK cb_xnext   , 4t	;Selector of next buffer to transfer
BLK cb_paddr   , 4t	;Physical address of buffer (used for DMA)
BLK cb_data    , 512t	;Start of data
.IF NE cb_data
	.IRP	q, >cb_data
	.ERROR	Cach buffer starting offset is wrong, cb_data = q'h
	.ENDR
.ENDC
CB_DATASIZE=!$$$

;Define bits for cb_sts

CB$FULL  =!40h		;Buffer is full
  CB%FULL  =!6t
CB$CHNGD =!20h		;Buffer does not match disk
  CB%CHNGD =!5t
CB$FAT   =!10h		;Buffer contains DOS file system FAT block
  CB%FAT   =!4t
CB$DELF  =!02h		;Buffer contains FIB for file which should be deleted
  CB%DELF  =!1t		;  after last close

;Define offsets in a path name defination block

$$$=!0
BLK pn_size  , 4t	;Size of this block (in bytes)
BLK pn_next  , 4t	;Offset of next path block
BLK pn_pntr  , 4t	;Offset of pointer to this block
BLK          , 4t	;Not used (reserved for second pointer)
BLK pn_fpnt1 , 4t	;First file pointer (contains offset of directory FIB
			;  for DOS and XOS file structures, contains cluster
			;  number for directory for CD-ROM 9660 file structures)
BLK pn_fpnt2 , 4t	;Second file pointer (not used for DOS and XOS file
			;  structures, contains length of directory for CD-ROM
			;  9660 file structures)
BLK pn_fpnt3 , 4t	;Third file pointer (not used)
BLK pn_ucb   , 4t	;Offset of UCB for disk
BLK pn_string, 0t	;First byte of path string
