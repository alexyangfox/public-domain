.IF NDF DEFINES
	.NLIST
        .INCLUD XOSINC:\XMAC\DEFINES.PAR
	.LIST
.ENDC
	.PARM

;Define object ID values (this value is stored in the first 4 bytes of each
;  object and this and the next 2 bytes (the "user" field) are the only
;  non-opaque item in the object) - Objects whose types begin with the "*"
;  character rather than a binary value are internal objects which are never
;  returned directly to the user program.  The user program can use the object
;  type to classify an object but must never change it.

ID_RGN=!{'RGN'<8}+1t		;Region
ID_CON=!{'CON'<8}+2t		;Container window
ID_WIN=!{'WIN'<8}+3t		;Window (other than container windows)
ID_BMP=!{'BMP'<8}+4t		;Bit-map object
ID_CUR=!{'CUR'<8}+5t		;Cursor object
ID_FNT=!{'FNT'<8}+6t		;Font object
ID_DRW=!'*DRW'			;Drawing object
ID_FNB=!'*FNB'			;Font name object
ID_FSB=!'*FSB'			;Font size object
ID_TXB=!'*TXB'			;Text block object
ID_TXL=!'*TXL'			;Text line object
ID_NOT=!'*NOT'			;Notify object

;Define event types

EVENT_MOUSEMV=!1t		;Mouse movement
EVENT_MOUSEBT=!2t		;Mouse button
EVENT_KEYMAKE=!3t		;Key pressed event
EVENT_KEYRELS=!4t		;Key released event
EVENT_MOVE   =!8t		;Window has been moved
EVENT_RESIZE =!9t		;Window size has been changed
EVENT_DESTROY=!10t		;Window is about to be destroyed
EVENT_CHILD  =!12t		;Child window event
EVENT_BMLOAD =!16t		;Bitmap load update

;Define event mask bits (bit 0 is reserved)

EVMASK$MOUSEMV=!00000002h	;Mouse movement
EVMASK$MOUSEBT=!00000004h	;Mouse button
EVMASK$KEYMAKE=!00000008h	;Key pressed event
EVMASK$KEYRELS=!00000010h	;Key released event
EVMASK$MOVE   =!00000100h	;Window has been moved
EVMASK$RESIZE =!00000200h	;Window size has been changed
EVMASK$DESTROY=!00000400h	;Window is about to be destroyed
EVMASK$CHILD  =!00001000h	;Child window event
EVMASK$BMLOAD =!00010000h	;Bitmap load update

;Define argument 1 values for EVENT_MOUSEBT events

MOUSEBT_LDN =!1t		;Left mouse button pressed
MOUSEBT_LUP =!2t		;Left mouse button released
MOUSEBT_CDN =!3t		;Center mouse button pressed
MOUSEBT_CUP =!4t		;Center mouse button released
MOUSEBT_RDN =!5t		;Right mouse button pressed
MOUSEBT_RUP =!6t		;Right mouse button released

;Define bits for argument 3 for EVENT_KEYMAKE and EVENT_KEYRELS events

KBE3$RELEASE=!8000h	;Key-release code
KBE3$CAPKEY =!4000h	;Caps-lock key pressed for character
KBE3$NUMKEY =!2000h	;Num-lock key pressed for chacacter
KBE3$SCLKEY =!1000h	;Scroll-lock key pressed for character
KBE3$CAPLCK =!0400h	;Caps-lock state true for character
KBE3$NUMLCK =!0200h	;Num-lock state true for chacacter
KBE3$SCLLCK =!0100h	;Scroll-lock state true for character
KBE3$LFTALT =!0040h	;Left ALT key pressed for character
KBE3$LFTCTL =!0020h	;Left control key pressed for character
KBE3$LFTSHF =!0010h	;Left shift key pressed for character
KBE3$RHTALT =!0004h	;Right ALT key pressed for character
KBE3$RHTCTL =!0002h	;Right control key pressed for character
KBE3$RHTSHF =!0001h	;Right shift key pressed for character

;Define argument 1 values for EVENT_CHILD events

CHILD_BUTSGL=!1t		;Button single click
CHILD_BUTDBL=!2t		;Button double click
CHILD_LSTSEL=!3t		;List item selected
CHILD_LSTENT=!4t		;List item entered
CHILD_LSTREL=!5t		;List item released
CHILD_LSTDBL=!6t		;List item double clicked

;Define offsets in the EDB (Environment Data Block)

$$$=!0
BLK edb_numfonts, 4t		;Number of fonts in the font table
BLK edb_fonttbl , 4t		;Offset of the font table
BLK edb_numcols , 4t		;Number of colors in the color table
BLK edb_coltbl  , 4t		;Offset of the color table
edb_SIZE=!$$$

;Define offsets in the environment font table entry

$$$=!0
BLK efte_name, 4t		;Offset of font name string
BLK efte_fnt , 4t		;Offset of FNT object (can be set to 0 by user
efte_SIZE=!$$$			;  and will be filled in by system when font is
				;  actually used)

;Define offsets in the PAR block which is used when decoding parameter lists

$$$=!0
BLK par_zorder     , 4t		;Z-order value
BLK par_textsize   , 2t		;Text size
BLK par_textwidth  , 2t		;Text width
BLK par_textfont   , 2t		;Text font
BLK par_textattr   , 2t		;Text attributes
BLK par_leftmargin , 4t		;Left margin
BLK par_rightmargin, 4t		;Right margin
BLK par_topmargin  , 4t		;Top margin
BLK par_btmmargin  , 4t		;Bottom margin
BLK par_lspace     , 4t		;Line spacing
BLK par_pspace     , 4t		;Paragraph spacing
BLK par_fgcolorn   , 4t		;Normal foreground color
BLK par_fgcolora   , 4t		;Alternate foreground color
BLK par_fgcolorx   , 4t		;Extra foreground color
BLK par_bgcolorn   , 4t		;Normal background color
BLK par_bgcolora   , 4t		;Alternate background color
BLK par_brdcolor   , 4t		;Border color
BLK par_hilcolorn  , 4t		;Normal highlight color
BLK par_hilcolora  , 4t		;Alternate highlight color
BLK par_shdcolorn  , 4t		;Nornal shading color
BLK par_shdcolora  , 4t		;Alternate shading color
BLK par_brdwidtho  , 4t		;Outer border width
BLK par_brdwidthc  , 4t		;Center border width
BLK par_brdwidthi  , 4t		;Inner border width
BLK par_bits1      , 4t		;Window bits 1
BLK par_bits2      , 4t		;Window bits 2
BLK par_bits3      , 4t		;Window bits 3
BLK par_bits4      , 4t		;Window bits 4
BLK par_xradius    , 4t		;X radius
BLK par_yradius    , 4t		;Y radius
BLK par_poffset    , 4t		;Pressed button offset
BLK par_orient     , 4t		;Orientation
BLK par_format     , 2t		;Format
BLK par_inc1size   , 2t		;Increment 1 button size
BLK par_inc2size   , 2t		;Increment 2 button size
BLK par_digits     , 2t		;Number of digits
BLK par_maxvalue   , 4t		;Maximum value
BLK par_minvalue   , 4t		;Minimum value
BLK par_inc1value  , 4t		;Increment 1 value
BLK par_inc2value  , 4t		;INcrement 2 value
BLK par_cursor     , 4t		;Offset of CUR for cursor for window
BLK par_sbxsize    , 4t		;Scroll bar X size
BLK par_sbysize    , 4t		;Scroll bar Y size
BLK par_sbxbutsize , 4t		;Scroll bar X button size
BLK par_sbybutsize , 4t		;Scroll bar Y button size
BLK par_sbshdwidth , 4t		;Scroll bar shading width
BLK par_sbfgcolorn , 4t		;Scroll bar normal text color
BLK par_sbfgcolora , 4t		;Scroll bar alternate text color
BLK par_sbbgcolorn , 4t		;Scroll bar normal background color
BLK par_sbbgcolora , 4t		;Scroll bar alternate background color
BLK par_sbbarcolor , 4t		;Scroll bar bar color
BLK par_sbhilcolorn, 4t		;Scroll bar normal highlight color
BLK par_sbhilcolora, 4t		;Scroll bar alternate highlight color
BLK par_sbshdcolorn, 4t		;Scroll bar normal shadow color
BLK par_sbshdcolora, 4t		;Scroll bar alternate shadow color
BLK par_actfunc    , 4t		;Activation function
BLK par_actwindow  , 4t		;Activation window
BLK par_titleSize  , 4t		;Title bar size
BLK par_titleBits  , 4t		;Title bar bits
BLK par_titleText  , 4t		;Title bar text
BLK par_bgbitmapn  , 4t		;Normal background bitmap
BLK par_bgbitmapa  , 4t		;Alternate background bitmap
BLK par_brdbitmap  , 4t		;Border bitmap
par_SIZE=!$$$


;Define offsets in the FM (Font Metrics) structure

$$$=!0
BLK fm_name     , 32t		;Name of font
BLK fm_flags    , 4t		;Flag bits
BLK fm_height   , 4t		;Height (ascent + descent)
BLK fm_avgwidth , 4t		;Average width
BLK fm_maxwidth , 4t		;Maximum width
BLK fm_ascent   , 4t		;Ascent
BLK fm_descent  , 4t		;Decent
BLK fm_inleading, 4t		;Internal leading
BLK fm_exleading, 4t		;External leading
BLK fm_attr     , 4t		;Attributes
BLK fm_underpos , 4t		;Underscore position
BLK fm_strikepos, 4t		;Strike-through position
fm_SIZE=!$$$

;Define bits for the fm_flags item

FMBITS$TTF   =!00000004h	;True-type font
FMBITS$MONO  =!00000002h	;Monospaced font
FMBITS$ITALIC=!00000001h	;Italic font


;Define offsets for the RECT structure which is used to specify the position
;  and size of a rectangle

$$$=!0
BLK rect_xpos  , 4t
BLK rect_ypos  , 4t
BLK rect_width , 4t
BLK rect_height, 4t
rect_SIZE=!$$$

;Define the offsets for the INSETS structure which is used to specify the
;  widths of window borders

$$$=!0
BLK ins_left  , 4t
BLK ins_right , 4t
BLK ins_top   , 4t
BLK ins_bottom, 4t
ins_SIZE=!$$$
