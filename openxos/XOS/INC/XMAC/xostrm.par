	.SBTTL	Parameter file XOSTRM.PAR

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;-------------------------------------------------------------------------------
;
;  XOSTRM.PAR - User-mode include file for terminal class devices
;
;  Edit history:
;  -------------
;  18Apr95 (fpj) - Added edit history block.
;
;-------------------------------------------------------------------------------

.IF NDF DEFINES
	.NLIST
	.INCLUD	XOSINC:\XMAC\DEFINES.PAR
	.LIST
.ENDC
	.PARM

;Define bits for the function bits for the svcTrmDspMode system call

DM$NOCLEAR  =!00008000h		;Do not clear screen when changing mode
  DM%NOCLEAR  =!15t
DM$NOFONT   =!00004000h		;Do not initialize text mode character
  DM%NOFONT   =!14t		;  font memory when changing mode to text mode
DM$NOADJUST =!00002000h		;Do not force text character height to match
  DM%NOADJUST =!13t		;  standard font size (8, 14, or 16 pixels)
DM$USEDATA  =!00000800h		;Use data block values to set parameters
  DM%USEDATA  =!11t
DM$RTNDATA  =!00000400h		;Return current parameter values in data block
  DM%RTNDATA  =!10t
DM$NOCHANGE =!00000200h		;Do not change display state, but recalulate
  DM%NOCHANGE =!9t		;  and return parameters
DM$BIOSMODE =!00000100h		;Do BIOS style mode set (low order 7 bits
  DM%BIOSMODE =!8t		;  contains BIOS mode value, bit 7 suppresses
				;  screen clear, all other bits are ignored)

;Define mode values (low order 8 bits of the display bits argumemt)

DM_TEXT   =!1t			;Text (default is 80x24)
DM_HCGx15 =!2t			;High color (1-5-5-5, xRGB) 16-bit graphics
DM_HCG16  =!3t			;High color (5-6-5, RGB) 16-bit graphics
DM_TCGx24 =!4t			;True color (8-8-8-8, xRGB) 32-bit graphics
DM_TCG24x =!6t			;True color (8-8-8-8, RGBx) 32-bit graphics
DM_MONOG  =!16t			;Monochrome graphics
DM_MIXED  =!17t			;Combined text and monochrome graphics
DM_SETBASE=!0FEh		;Set base mode values from current mode
DM_USEBASE=!0FFh		;Change display mode to match base mode if				;  current mode is different

;Define offsets in the display modes data block

;dm_textres=!0t			;(1) Reserved
dm_actpage =!1t			;(1) Active BIOS display page
;dm_prifont=!2t			;(1) Reserved
;dm_secfont=!3t			;(1) Reserved
dm_columns =!4t			;(4) Number of character columns
dm_rows    =!8t			;(4) Number of character rows
dm_horiz   =!12t		;(4) Graphics horizontal resolution
dm_vert    =!16t		;(4) Graphics vertical resolution
dm_disptype=!20t		;(4) Display type (returned only)
dm_pagesize=!24t		;(4) Display page size (returned only)
dm_span    =!28t		;(4) Graphics mode line span size
dm_SIZE    =!32t		;    Size of block

;Define values for the dm_textres field

DM_TEXT8 =!1t			;8 pixel high (CGA style) text
DM_TEXT14=!2t			;14 pixel high (EGA style) text
DM_TEXT16=!3t			;16 pixel high (VGA style) text

;Define bits in the third special keyboard code byte

SPC3$LFTALT =!40h	;Left ALT key pressed for character
SPC3$LFTCTL =!20h	;Left control key pressed for character
SPC3$LFTSHF =!10h	;Left shift key pressed for character
SPC3$RHTALT =!04h	;Right ALT key pressed for character
SPC3$RHTCTL =!02h	;Right control key pressed for character
SPC3$RHTSHF =!01h	;Right shift key pressed for character

;Define bits in the fourth special keyboard code byte

SPC4$RELEASE=!80h	;Key-release code
SPC4$CAPKEY =!40h	;Caps-lock key pressed for character
SPC4$NUMKEY =!20h	;Num-lock key pressed for chacacter
SPC4$SCLKEY =!10h	;Scroll-lock key pressed for character
SPC4$CAPLCK =!04h	;Caps-lock state true for character
SPC4$NUMLCK =!02h	;Num-lock state true for chacacter
SPC4$SCLLCK =!01h	;Scroll-lock state true for character

;Define bits for the value of IOPAR_CINPMODE and IOPAR_SINPMODE - these
;  bits are also stored in tdb_imode and tdb_imodec

TIM$SCNALL =!40000000h		;Return all scan codes from keyboard, including
  TIM%SCNALL =!30t		;  key break codes
TIM$SCNCODE=!20000000h		;Return full scan codes from keyboard for all
  TIM%SCNCODE=!29t		;  keys
TIM$PCSCNC =!10000000h		;Return PC mode scan codes (keyboard mode 1)
  TIM%PCSCNC =!28t
TIM$PC101  =!08000000h		;Return extended 101/102-key keyboard scan code
  TIM%PC101  =!27t		;  set (ignored if TIM$PCSCNC not set)
TIM$PCDOS  =!04000000h		;Filter PC scan codes for DOS (changes E0 prefix
  TIM%PCDOS  =!26t		;  to 0)
TIM$ANSI7  =!02000000h		;Return ANSI 7 bit mode special codes
  TIM%ANSI7  =!25t
TIM$ANSI8  =!01000000h		;Return ANSI 8 bit mode special codes
  TIM%ANSI8  =!24t
TIM$NOCO   =!00800000h		;Control-O is not special on input
  TIM%NOCO   =!23t
TIM$NOCC   =!00400000h		;Control-C is not special on input
  TIM%NOCC   =!22t
TIM$ALTPAD =!00200000h		;Suppress special handling of keypad digits with
  TIM%ALTPAD =!21t		;  ALT pressed (ignored if TIM$PCSCNC set)
TIM$NOCOMB =!00010000h		;Do not combine forwarding groups in image mode
  TIM%NOCOMB =!16t
TIM$DEFER  =!00008000h		;Do not wake up process immediately on image
  TIM%DEFER  =!15t		;  input (wait for full buffer)
TIM$ILFACR =!00000200h		;Insert LF after CR in input stream
  TIM%ILFACR =!9t
TIM$RCRBLF =!00000100h		;Remove CR before LF in input stream
  TIM%RCRBL  =!8t
TIM$OVER   =!00000080h		;Initial input edit mode is overstrike
  TIM%OVER   =!7t
TIM$DEBUG  =!00000040h		;Debug mode input
  TIM%DEBUG  =!6t
TIM$CHAR   =!00000020h		;Character mode input
  TIM%CHAR   =!5t
TIM$IMAGE  =!00000010h		;Image mode input
  TIM%IMAGE  =!4t
TIM$XIMAGE =!00000008h		;Special image mode input
  TIM%XIMAGE =!3t
TIM$HALFDUP=!00000004h		;Half duplex operation
  TIM%HALFDUP=!2t
TIM$ECHO   =!00000002h		;Echo input
  TIM%ECHO   =!1t

;Define bits for the value of IOPAR_COUTMODE and IOPAR_SOUTMODE - these
;  bits are also stored in tdb_omode and tdb_omodec

TOM$ANSICM =!04000000h		;Do ANSI character mapping
  TOM%ANSICM =!26t
TOM$PLP1   =!02000000h		;Output PLP packets (old style, no XON or XOFF
  TOM%PLP1   =!25t		;  prefixes)
TOM$PLP2   =!01000000h		;Output PLP packets (new style, XON and XOFF
  TOM%PLP2   =!24t		;  are prefixed)
TOM$ICRBLF =!00000200h		;Insert CR before LF is output
  TOM%ICRBLF =!9t
TOM$GRAPHIC=!00000020h		;Graphic mode output
  TOM%GRAPHIC=!5t
TOM$IMAGE  =!00000010h		;Image mode output
  TOM%IMAGE  =!4t

;Define bits for the value of IOPAR_SPMODEM

SPMC$RI  =!0800h		;Ring indicate change (read only, cleared when
				;  read)
SPMC$CD  =!0400h		;Carrier detect (read only)
SPMC$CTS =!0200h		;Clear to send (read only)
SPMC$DSR =!0100h		;Data set ready (read only)
SPMC$LOOP=!0010h		;Loopback
SPMC$RTS =!0002h		;Ready to send
SPMC$DTR =!0001h		;Data terminal ready

;Define attribute extension bits

DAX$XOR  =!01		;XOR write (graphics mode only)

;Define terminal special device functions

TSF_SETCCI=!1t		;Set up control-C interrupt
TSF_SETCPI=!2t		;Set up control-P interrupt

;Define functions for the svcTrmFunction SVC

TF_RESET =!0t 		;Reset terminal data to defaults
TF_ENECHO=!1t		;Enable echoing
TF_DSECHO=!2t		;Disable echoing
TF_CLRINP=!3t		;Clear input buffer
TF_CLROUT=!4t		;Clear output buffer
TF_ENBOUT=!5t		;Enable output

;Define offsets for the data structure used by the svcTrmDescptn SVC

trmd_mode     =!0t	;(4) Current display mode bits and value
trmd_lowmodes =!4t	;(4) Bits for valid modes 1 - 32
trmd_highmodes=!8t	;(4) Bits for valid modes 33 - 64
trmd_dsptype  =!12t	;(1) Display type
			;(3) Reserved
trmd_availbits=!16t	;(4) Available mode bits
trmd_SIZE     =!32t	;    Size of block (allow room for expansion)

;Define bits for trmd_bits

TRMD$TEXT  =!8000h	;Text mode
  TRMD%EXT   =!15t
TRMD$CGA4C =!4000h	;CGA 4 color mode
  TRMD%CGA4C =!14t
TRMD$CGA2C =!2000h	;CGA 2 color mode
  TRMD%CGA2C =!13t
TRMD$EGA16C=!1000h	;EGA 16 color mode
  TRMD%EGA16C=!12t
TRMD$EGAM  =!0800h	;EGA monochrome mode (mode 0Fh)
  TRMD%EGAM  =!11t
TRMD$NONSTD=!0400h	;Non-standard mode
  TRMD%NONSTD=!10t
TRMD$MONO  =!0001h	;MDA
  TRMD%MONO  =!0t

;Define special internal scan code values

ISC_F1      =!01h	;F1 key
ISC_F2      =!02h	;F2 key
ISC_F3      =!03h	;F3 key
ISC_F4      =!04h	;F4 key
ISC_F5      =!05h	;F5 key
ISC_F6      =!06h	;F6 key
ISC_F7      =!07h	;F7 key
ISC_F8      =!08h	;F8 key
ISC_F9      =!09h	;F9 key
ISC_F10     =!0Ah	;F10 key
ISC_F11     =!0Bh	;F11 key
ISC_F12     =!0Ch	;F12 key
ISC_ESC     =!10h	;Escape
ISC_INS     =!11h	;Insert
ISC_HOME    =!12h	;Home
ISC_PGUP    =!13h	;Page up
ISC_DELETE  =!14h	;Delete
ISC_END     =!15h	;End
ISC_PGDN    =!16h	;Page down
ISC_UPARW   =!17h	;Up arrow
ISC_LTARW   =!18h	;Left arrow
ISC_DNARW   =!19h	;Down arrow
ISC_RTARW   =!1Ah	;Right arrow
ISC_KP0     =!20h	;Keypad 0
ISC_KPINS   =!20h	;Keypad insert
ISC_KP1     =!21h	;Keypad 1
ISC_KPEND   =!21h	;Keypad end
ISC_KP2     =!22h	;Keypad 2
ISC_KPDNARW =!22h	;Keypad down arrow
ISC_KP3     =!23h	;Keypad 3
ISC_KPPGDN  =!23h	;Keypad page down
ISC_KP4     =!24h	;Keypad 4
ISC_KPLTARW =!24h	;Keypad left arrow
ISC_KP5     =!25h	;Keypad 5
ISC_KP6     =!26h	;Keypad 6
ISC_KPRTARW =!26h	;Keypad right arrow
ISC_KP7     =!27h	;Keypad 7
ISC_KPHOME  =!27h	;Keypad home
ISC_KP8     =!28h	;Keypad 8
ISC_KPUPARW =!28h	;Keypad up arrow
ISC_KP9     =!29h	;Keypad 9
ISC_KPPGUP  =!29h	;Keypad page up
ISC_KPDELETE=!2Ah	;Keypad Delete
ISC_KPSLSH  =!2Bh	;Keypad /
ISC_KPSTAR  =!2Ch	;Keypad *
ISC_KPMINUS =!2Dh	;Keypad - (!!!)
ISC_KPPLUS  =!2Eh	;Keypad +
ISC_KPENT   =!2Fh	;Keypad enter
ISC_ENT     =!38h	;Enter
ISC_LF      =!39h	;Line feed
ISC_BS      =!3Ah	;Backspace
ISC_HT      =!3Bh	;Tab
ISC_DEL     =!3Ch	;DEL
ISC_GRAVE   =!40h	;Grave or ~
ISC_1       =!41h	;1 or !
ISC_2       =!42h	;2 or @
ISC_3       =!43h	;3 or #
ISC_4       =!44h	;4 or $
ISC_5       =!45h	;5 or %
ISC_6       =!46h	;6 or ^
ISC_7       =!47h	;7 or &
ISC_8       =!48h	;8 or *
ISC_9       =!49h	;9 or (
ISC_0       =!4Ah	;0 or )
ISC_MINUS   =!4Bh	;- or _
ISC_EQUAL   =!4Ch	;= or +
ISC_Q       =!4Dh	;Q
ISC_W       =!4Eh	;W
ISC_E       =!4Fh	;E
ISC_R       =!50h	;R
ISC_T       =!51h	;T
ISC_Y       =!52h	;Y
ISC_U       =!53h	;U
ISC_I       =!54h	;I
ISC_O       =!55h	;O
ISC_P       =!56h	;P
ISC_LBRKT   =!57h	;[ or {
ISC_RBRKT   =!58h	;] or }
ISC_BSLSH   =!59h	;\ or |
ISC_A       =!5Ah	;A
ISC_S       =!5Bh	;S
ISC_D       =!5Ch	;D
ISC_F       =!5Dh	;F
ISC_G       =!5Eh	;G
ISC_H       =!5Fh	;H
ISC_J       =!60h	;J
ISC_K       =!61h	;K
ISC_L       =!62h	;L
ISC_SEMI    =!63h	;;
ISC_QUOTE   =!64h	;' or "
ISC_Z	    =!65h	;Z
ISC_X       =!66h	;X
ISC_C       =!67h	;C
ISC_V       =!68h	;V
ISC_B       =!69h	;B
ISC_N       =!6Ah	;N
ISC_M       =!6Bh	;M
ISC_COMMA   =!6Ch	;, or <
ISC_PER     =!6Dh	;. or >
ISC_SLSH    =!6Eh	;/ or ?
ISC_SPACE   =!6Fh	;Space
ISC_SCLLCK  =!73h	;Scroll lock
ISC_NUMLCK  =!74h	;Num lock
ISC_CAPLCK  =!75h	;Caps lock
ISC_LFTSHF  =!76h	;Left shift
ISC_RHTSHF  =!77h	;Right shift
ISC_LFTALT  =!78h	;Left Alt
ISC_RHTALT  =!79h	;Right Alt
ISC_LFTCTL  =!7Ah	;Left control
ISC_RHTCTL  =!7Bh	;Right control
ISC_PRTSCN  =!7Ch	;Print screen
ISC_BREAK   =!7Dh	;Break
ISC_PAUSE   =!7Eh	;Pause
ISC_SYSSHF  =!7Fh	;System shift

;Define special device functions for PCON devices

PCSF_SETBUF  =!1t	;Set up display buffer
PCSF_MODBUF  =!2t	;Modify display mapping
PCSF_MODESET =!3t	;Report display mode set complete
PCSF_DISPTYPE=!4t	;Set display type
PCSF_FONTSET =!5t	;Set font related parameters
PCSF_STREAMMD=!6t	;Set to stream mode
