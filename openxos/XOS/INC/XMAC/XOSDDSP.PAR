	.SBTTL	Parameter file XOSDDSP.PAR

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;-------------------------------------------------------------------------------
;
;  XOSDDSP.PAR - User-mode include file for Display Data Stream Protocol (DDSP)
;
;  Edit history:
;  -------------
;  18Apr95 (fpj) - Added edit history block.
;
;-------------------------------------------------------------------------------


	.NLBEX
.IF NDF DEFINES
	.NLIST
	.INCLUD	XOSINC:\XMAC\DEFINES.PAR
	.LIST
.ENDC
	.PARM

;Define the display data stream functions.  These function values are encoded
;  in a single byte following a 0 byte in the display data stream. Between 0
;  and 12 argument bytes follow the function value byte.  The number of argument
;  bytes is implicient in the function value.  Multiple byte argument values
;  are transfered high order byte first.

DDSF_VIDMODE=!01h	;Set video mode - followed by 12 argument bytes:
			;  Size     Use
			;    4  Mode bits and value
			;    1  Primary font
			;    1  Secondary font
			;    1  Text columns
			;    1  Text rows
			;    2  Scan columns
			;    2  Scan rows
DDSF_LDFONT =!02h	;Load display font without display adjustment - followed
			;  by 2 argument bytes:
			;    Block number
			;    Font number: 1 = 8x8 font
			;		  2 = 8x14 font
			;		  3 = 8x16 font
DDSF_LDFONTA=!03h	;Load display font with display adjustment - followed by
			;  2 argument bytes:
			;    Block number
			;    Font number: 1 = 8x8 font
			;		  2 = 8x14 font
			;		  3 = 8x16 font
DDSF_SELFONT=!04h	;Select fonts - followed by 1 argument byte:
			;    Font specification
DDSF_DSPPAGE=!05h	;Set display page - followed by 1 argument byte:
			;    Page number
;	    =!06h
;	    =!07h
DDSF_CURPOS =!08h	;Set cursor position on current page - followed by 2
			;  argument bytes:
			;    x coordinate
			;    y coordinate
DDSF_CURPOSP=!09h	;Set cursor position on any page - followed by 3
			;  argument bytes:
			;    Page number
			;    x coordinate
			;    y coordinate
DDSF_CURTYPE=!0Ah	;Set cursor type - followed by 2 argument bytes:
			;    Startng line for cursor
			;    Ending line for cursor
DDSF_WCHAR  =!0Bh	;Write character at current cursor position on current
			;  page - followed by 2 argument bytes:
			;    Count
			;    Character
			;  The cursor position is not changed.  This is an
			;  image write.
DDSF_WACHAR =!0Ch	;Write character and attribute at current cursor
			;  position on current page - followed by 3 agrument
			;  bytes:
			;    Count
			;    Character
			;    Attribute byte
			;  The cursor position is not changed.  This is an
			;  image write.
;	    =!0Dh
;	    =!0Eh
;	    =!0Fh
DDSF_SWCUP  =!10h	;Scroll window up on current page - followed by 6
			;  argument bytes:
			;    Number of lines to scroll (+ is up, - is down)
			;    Attribute byte for fill 
			;    x coordinate of upper left corner of window
			;    y coordinate of upper left corner of window
			;    x coordinate of lower right corner of window
			;    y coordinate of lower right corner of window
DDSF_SWCDOWN=!11h	;Scroll window down on current page - followed by 6
			;  argument bytes
DDSF_SWCRHT =!12h	;Scroll window right on current page - followed by 6
			;  argument bytes
DDSF_SWCLFT =!13h	;Scroll window left on current page - followed by 6
			;  argument bytes

DDSF_SWAUP  =!14h	;Scroll window up on any page - followed by 7
			;  argument bytes:
			;    Number of lines to scroll (+ is up, - is down)
			;    Attribute byte for fill 
			;    x coordinate of upper left corner of window
			;    y coordinate of upper left corner of window
			;    x coordinate of lower right corner of window
			;    y coordinate of lower right corner of window
			;    Page number
DDSF_SWADOWN=!15h	;Scroll window down on any page - followed by 6
			;  argument bytes
DDSF_SWARHT =!16h	;Scroll window right on any page - followed by 6
			;  argument bytes
DDSF_SWALFT =!17h	;Scroll window left on any page - followed by 6
			;  argument bytes
DDSF_BATTRIB=!18h	;Set base text attributes - followed by 2 argument
			;  bytes:
			;    Base text attribute byte value
			;    Base text attribute byte for fill
DDSF_CATTRIB=!19h	;Set current text attributes - followed by 2 argument
			;  bytes:
			;    Current text attribute byte value
			;    Current text attribute byte for fill
;	    =!1Ah
;	    =!1Bh
;	    =!1Ch
;	    =!1Dh
;	    =!1Eh
;	    =!1Fh
DDSF_IMG1C  =!20h	;Display image characters with 1 byte count - followed
			;  by 3 argument bytes and 1 or more data bytes:
			;   Size     Use
			;    2  Offset from start of buffer (character offset)
			;    1  Number of data bytes which follow
DDSF_IMG1CA =!21h	;Display image characters and attributes with 1 byte
			;  count - followed by 3 argument bytes and 2 or more
			;  data bytes (number of data bytes is always even):
			;   Size     Use
			;    2  Offset from start of buffer (character offset)
			;    1  Number of data byte pairs which follow
DDSF_IMG2C  =!22h	;Display image characters with 2 byte count - followed
			;  by 4 argument bytes and 1 or more data bytes
			;  (normally should not be used with less than 256
			;  data bytes):
			;   Size     Use
			;    2  Offset from start of buffer (character offset)
			;    2  Number of data bytes which follow
DDSF_IMG2CA =!23h	;Display image characters and attributes with 2 byte
			;  count - followed by 4 argument bytes and 2 or more
			;  data bytes (number of data bytes is always even -
			;  normally should not be used with less than 512
			;  data bytes):
			;   Size     Use
			;    2  Offset from start of buffer (character offset)
			;    2  Number of data byte pairs which follow
DDSF_IMGR1C =!24h	;Display image characters with 1 byte count relative -
			;  followed by 2 argument bytes and 1 or more data
			;  bytes:
			;   Size     Use
			;    1  Offset from end of last image output (character
			;	  offset)
			;    1  Number of data bytes which follow
DDSF_IMGR1CA=!25h	;Display image characters and attributes with 1 byte
			;  count relative - followed by 3 argument bytes and 2
			;  or more data bytes (number of data bytes is always
			;  even):
			;   Size     Use
			;    1  Offset from end of last image output (character
			;	  offset)
			;    1  Number of data byte pairs which follow
DDSF_IMGR2C =!26h	;Display image characters with 2 byte count relative -
			;  followed by 3 argument bytes and 1 or more data bytes
			;  (normally should not be used with less than 256
			;  data bytes):
			;   Size     Use
			;    1  Offset from end of last image output (character
			;	  offset)
			;    2  Number of data bytes which follow
DDSF_IMGR2CA=!27h	;Display image characters and attributes with 2 byte
			;  count relative - followed by 4 argument bytes and 2
			;  or more data bytes (number of data bytes is always
			;  even - normally should not be used with less than 512
			;  data bytes):
			;   Size     Use
			;    1  Offset from end of last image output (character
			;	  offset)
			;    2  Number of data byte pairs which follow
DDSF_LOWMAX =!27h	;Highest low value function

;Define the high value functions

DDSF_HIGHMIM =!0C0h	;Lowest high value function
DDSF_MVLEFT  =!0C0h	;Move cursor left on current page - amount to move (1
			;  to 16) - 1 is added to this value
DDSF_MVRIGHT =!0D0h	;Move cursor right on current page - amount to move (1
			;  to 16) - 1 is added to this value
DDSF_MVUP    =!0E0h	;Move cursor up on current page - amount to move (1 to
			;  16) - 1 is added to this value
DDSF_MVDWN   =!0F0h	;Move cursor down on current page - amount to move (1
			;  to 16) - 1 is added to this value

