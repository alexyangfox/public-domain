	.SBTTL	Parameter file XOSRUN.PAR

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;-------------------------------------------------------------------------------
;
;  XOSRUN.PAR - User-mode include file for run program parameters
;
;  Edit history:
;  -------------
;  18Apr95 (fpj) - Added edit history block.
;
;-------------------------------------------------------------------------------

.IF NDF DEFINES
	.NLIST
	.INCLUD	XOSINC:\XMAC\DEFINES.PAR
	.LIST
.ENDC
	.PARM

;Define image types

IT_RUN386=!1t
IT_RUN286=!2t
IT_RUN86 =!3t
IT_EXE   =!8t
IT_COM   =!9t
IT_BATCH =!15t

;Define offsets in the relocation data buffer

rd_EAX    =!0t		;Initial value for EAX
rd_ECX    =!4t		;Initial value for ECX
rd_EDX    =!8t		;Initial value for EDX
rd_EBX    =!12t		;Initial value for EBX
rd_ESP    =!16t		;Initial value for ESP
rd_EBP    =!20t		;Initial value for EBP
rd_ESI    =!24t		;Initial value for ESI
rd_EDI    =!28t		;Initial value for EDI
rd_EIP    =!32t		;Initial value for EIP
rd_EFR    =!36t		;Initial value for EFR
rd_DS     =!40t		;Initial value for DS
rd_ES     =!44t		;Initial value for ES
rd_FS     =!48t		;Initial value for FS
rd_GS     =!52t		;Initial value for GS
rd_CS     =!56t		;Initial value for CS
rd_SS     =!60t		;Initial value for SS
rd_size   =!64t		;Total size of loaded program
rd_nseg   =!68t		;Number of segments
rd_nmsect =!70t		;Number of msects
rd_data   =!72t		;Start of relocation data
rd_MINSIZE=!80t		;Minimum size for the relocation buffer

;Define offsets in the RUN file header

ih_id      =!0t		;(2) RUN file ID bytes
ih_ver     =!2t		;(1) RUN file version
ih_proc    =!3t		;(1) Processor type
ih_type    =!4t		;(1) RUN file type
			;(1) Not used
ih_hdrsize =!6t		;(1) Header byte count
ih_numseg  =!7t		;(1) Number of segments in file
ih_start   =!8t		;(4) Start address offset
ih_startms =!12t	;(1) Msect number for start address
			;(3) Not used
ih_debug   =!16t	;(4) Debugger address offset
ih_debugms =!20t	;(1) Msect number for debugger address
			;(3) Not used
ih_stack   =!24t	;(4) Stack address offset
ih_stackms =!28t	;(1) Msect number for stack address
			;(3) Not used
ih_exportos=!32t	;(4) Offset in file for exported symbol table
ih_exportno=!36t	;(4) Number of entries in exported symbol table
ih_importos=!40t	;(4) Offset in file for imported symbol table
ih_importno=!44t	;(4) Number of entries in imported symbol table
ih_fileid  =!48t	;(10)
ih_SIZE  =!64t-6	;Size of RUN file header (excluding first 6 bytes)

;Define offsets in each segment header

sh_hdrsize=!0t		;(1) Header byte count
sh_nummsc =!1t		;(1) Number of msects in segment
sh_status =!2t		;(1) Segment status byte
sh_linked =!3t		;(1) Number of linked segment
sh_type   =!4t		;(1) Segment type
sh_priv   =!5t		;(1) Privilege level
sh_select =!6t		;(2) Selector for segment
sh_addr   =!8t		;(4) Physical address or modulus
sh_SIZE   =!12t		;Size of segment header

;Define offsets in each msect header

mh_hdrsize=!0t		;(1) Header byte count
			;(1) Not used
mh_status =!2t		;(1) Msect status byte
			;(1) Not used
mh_type   =!4t		;(1) Msect type
mh_priv   =!5t		;(1) Privilege level
			;(2) Reserved
mh_addr   =!8t		;(4) Address or modulus in segment
mh_avail  =!12t		;(4) Bytes of address space to leave available for msect
mh_alloc  =!16t		;(4) Bytes to allocate for msect
mh_dataos =!20t		;(4) Offset from start of RUN file of data to load
mh_datasz =!24t		;(4) Number of bytes to load
mh_relos  =!28t		;(4) Offset from start of RUN file for relocation
			;      information
mh_relsz  =!32t		;(4) Number of relocation items
mh_SIZE   =!36t		;Size of msect header

;Define values for the ih_proc byte

RUNP_LOW   =!00		;Unspecified low-order-byte first processor
RUNP_Z80   =!01		;Z80
RUNP_8086  =!02		;8086
RUNP_80186 =!03		;80186
RUNP_80286 =!04		;80286
RUNP_80386 =!05		;80386
RUNP_80486 =!06		;80486
RUNP_HIGH  =!80		;Unspecified high-order-byte first processor
RUNP_68000 =!81		;68000
RUNP_68010 =!82		;68010
RUNP_68020 =!83		;68020
RUNP_68030 =!84		;68030

;Define values for the ih_type byte

RUNT_ALONE  =!1		;Stand-alone image
RUNT_XOSUSER=!2		;XOS user mode image
RUNT_MSDOS  =!3		;MS-DOS image
RUNT_XOSLKE =!7		;XOS loadable kernel extension

;Define bits for the sh_sts byte

SS$LARGE  =!80h		;Large segment
  SS%LARGE  =!7t
SS$32BIT  =!40h		;32-bit segment
  SS%32BIT  =!6t
SS$CONFORM=!20h		;Conformable segment
  SS%CONFORM=!5t
SS$READ   =!10h		;Readable segment
  SS%READ   =!4t
SS$WRITE  =!08h		;Writeable segment
  SS%WRITE  =!3t
SS$SHARE  =!02h		;Shareable or global segment
  SS%SHARE  =!1t
SS$ADDR   =!01h		;Address specified
  SS%ADDR   =!0t

;Define values for the sh_type byte

ST_DATA =!1t		;Data segment
ST_CODE =!2t		;Code segment
ST_STACK=!3t		;Stack segment
ST_REAL =!5t		;Real mode segment

;Define bits for the mh_sts byte

MS$CONF   =!20h		;Conformable msect
  MS%CONF   =!5t
MS$READ   =!10h		;Readable msect
  MS%READ   =!4t
MS$WRITE  =!08h		;Writable msect
  MS%WRITE  =!3t
MS$SHAR   =!02h		;Sharable msect
  MS%SHAR   =!1t
MS$ABS    =!01h		;Absolute msect
  MS%ABS    =!0t
