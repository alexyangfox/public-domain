	.SBTTL	Parameter file XOSXXFS.PAR

;++++
; This software is in the public domain.  It may be freely copied and used
; for whatever purpose you see fit, including commerical uses.  Anyone
; modifying this software may claim ownership of the modifications, but not
; the complete derived code.  It would be appreciated if the authors were
; told what this software is being used for, but this is not a requirement.

;   THIS SOFTWARE IS PROVIDED BY THE AUTHORS "AS IS" AND ANY EXPRESS OR
;   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;   IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
;   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
;   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
;   OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
;   TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
;   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;----

;-------------------------------------------------------------------------------
;
;  XOSXXFS.PAR - Kernel-mode include file for XOS File System (XFS)
;                parameters
;
;  Edit history:
;  -------------
;  18Apr95 (fpj) - Added edit history block.
;
;-------------------------------------------------------------------------------

	.PARM

;Define bits for dcb_sts2 for disks (top four bits are common to all devices)

;Define offsets in the XOS format disk boot block

$$$=!0
BLK xb_jump   , 3t	;Jump instruction to start of bootstrap code
BLK           , 5t	;Not used, must be 0
BLK xb_xfssig , 8t	;XOS file system signature = 'XOS**XFS'
BLK xb_version, 4t	;File system versino (currently = 0x10000)
BLK xb_sects  , 2t	;Number of sectors/track
BLK xb_heads  , 2t	;Number of heads
BLK xb_cylns  , 4t	;Number of cylinders
BLK xb_sectsz , 2t	;Size of a sector (must be 512t)
BLK xb_homblk , 2t	;Block number of home block (usually 16)
BLK xb_btxblk , 2t	;Block number of start of extended boot area
BLK xb_btxsize, 2t	;Size (in blocks) of extended boot area
BLK xb_homblk , 4t	;Block number of home block (usually 16)
BLK xb_btcode , 474t	;Bootstrap code
BLK xb_btsig  , 2t	;Boot block signature bytes (always = 0AA55)

;Define offsets in the XOS format disk home block

$$$=!0
BLK hom_label    , 4t	;Block name = 'HOM*'
BLK hom_self     , 8t	;Block number of this block
BLK hom_firstclus, 4t	;BLock number of first cluster
BLK hom_numclus  , 4t	;Number of clusters on disk
BLK hom_clussize , 2t	;Blocks per cluster
BLK hom_grpsize  , 2t	;Default group size for disk
BLK hom_numsats  , 2t	;Number of SATs
BLK hom_pntsize  , 1t	;Size (in bytes) of the cluster pointers
BLK hom_flag     , 1t	;Format flag bits
BLK hom_size     , 4t	;Total number of clusters on disk
BLK hom_root     , 4t	;Cluster number for FIB for root directory
BLK hom_vollabel , 32t	;Volume name
BLK hom_volcode  , 16t	;Volume code
BLK hom_wrpcc    , 2t	;Write pre-comp cylinder number
BLK hom_wrcur    , 2t	;Reduce write current cylinder number
BLK              , 12t	;Reserved, should be 0
BLK hom_sattbl   , 384t	;SAT block pointer table

;Define offsets for the disk SAT block

$$$=!0
BLK sat_label, 4t	;Block name = 'SAT*'
BLK sat_self , 8t	;Block number of this block
BLK sat_data , 0t	;Start of data area

;Define offsets in the file index block (FIB)
;  Following offsets are used in all FIB's

$$$=!0
BLK fib_label  , 4t	;Block name = 'FIB*'
BLK fib_self   , 8t	;Block number of this block
BLK fib_floor  , 4t	;Cluster number for first file pointer in this block
BLK fib_roof   , 4t	;Cluster number for first file pointer above this block
BLK fib_base   , 4t	;Base FIB cluster number
BLK fib_next   , 4t	;Next FIB cluster number
BLK fib_prev   , 4t	;Previous FIB cluster number
BLK fib_number , 4t	;Number of this FIB in the file (base FIB is 1)
BLK fib_fxpnt  , 0t	;First file pointer in extended FIB's

;Following offsets are only used in the base FIB

BLK fib_size   , 8t	;Current number of bytes written
BLK fib_mxsz   , 8t	;Maximum number of bytes written
BLK fib_alloc  , 4t	;Number of clusters allocated
BLK fib_linkcnt, 4t	;Number of directory entries which point to this FIB
BLK fib_attrib , 1t	;File attribute bits
BLK            , 1t	;Not used
BLK fib_grpsize, 2t	;Group size for allocation
BLK fib_prot   , 4t	;Protection
BLK fib_cdt    , 8t	;Creation date/time
BLK fib_mdt    , 8t	;Modify date/time
BLK fib_adt    , 8t	;Access date/time
BLK fib_owner  , 16t	;Owner name
BLK fib_group  , 16t	;Group name
BLK fib_f1pnt  , 0t	;First file pointer in base FIB

;Define offsets in the XOS file system DCB

$$$=!dcb_dkdevdep
BLK dcb_dkcfib   , 4t	;Offset of cache buffer containing current file FIB
BLK dcb_dkspecbfr, 4t	;Offset of file specification buffer
BLK dcb_dkfab    , 4t	;Offset of FAB for file
BLK dcb_dkshrrty , 2t	;Sharing retry count
BLK dcb_dkshrdly , 2t	;Sharing delay value
dcb_dkxosSIZE=!$$$
XMBINDEX dcb_dkxosINDEX, dcb_cSIZE+dcb_dkxosSIZE

;Define offsets in directory blocks

;Define offsets in the first blcck of a directory entry

$$$=!0
BLK de1_type  , 1t	;Block type: 0 = not in use, 1 = first block of a
			;  of a directory entry
BLK de1_status, 1t	;Status bits
BLX de1_fibcls, 4t	;Cluster number of file index block
BLK de1_name  , 26t	;First part of name

;Define offsets in additional blocks of a directory entry

$$$=!0
BLK den_type, 1t	;Block type: 2 or greater, indicates position of this
			;  of this block in the directory entry
BLK         , 1t	;Reserved, must be 0
BLK den_name, 30t	;File name characters

;Define bits for de1_status (except for DEB$UNICODE and DEB$PERM, these bits
;  are the same as the DOS file attribute bits)

DEB_FILE   =!80h	;File is a file
DEB_DIR    =!10h	;File is a directory
DEB_PERM   =!08h	;File is permanet
DEB_SYSTEM =!04h	;File is a system file
DEB_HIDDEN =!02h	;File is hidden
DEB_UNICODE=!01h	;File name is Unicode

;Define offsets in the file access block (FAB)

$$$=!0
BLK fab_status, 1t	;Status bits
BLK fab_index , 1t	;Size index for FAB block buffer
BLK fab_number, 2t	;Number of FIB entries
BLK fab_lock  , 4t	;Offset of lock table
BLK fab_fibtbl, 4t	;FIB table

;Define bits for fab_status

FS$MODIFIED=!40h	;File has been modified
FS$ADTSET  =!20h	;Access date/time value has been set
FS$CDTSET  =!10h	;Creation date/time value has been set
FS$MDTSET  =!08h	;Modify date/time value has been set

;Define offsets in the file record lock list.  These are allocated in QEL's

$$$=!0
BLK fll_next , 4		;Offset of next block in lock list
BLK fll_1st  , 10t	;First entry in lock block

;Define offsets in each lock entry

$$$=!0
BLK lock_dcb   , 4	;Handle lock was created under
BLK lock_offset, 4	;Offset in file of beginning of locked region
BLK lock_size  , 4	;Size of locked region
BLK lock_pda   , 2	;Process slot number for process requesting lock
BLK lock_psp   , 2	;PSP offset for V86-mode process (zero if none)
lock_SIZE=!$$$
