Example for Section 5.1: Expressions:

false
5

Example for Section 5.1: Expressions:

2
2

Example for Section 5.1.3: Lookup Expressions:

five

Example for Section 5.1.3: Lookup Expressions:

spring

Example for Section 5.1.3: Lookup Expressions:

58

Example for Section 5.1.3: Lookup Expressions:

[1, 2, 3]

Example for Section 5.1.3: Lookup Expressions:

[8, 18, 28, 38, 48, 58, 68, 78, 88, 98]

Example for Section 5.1.3: Lookup Expressions:

[51, 52, 53, 54, 55, 56, 57, 58, 59, 60]

Example for Section 5.1.3: Lookup Expressions:

37
37

Example for Section 5.1.3: Lookup Expressions:

37
37

Example for Section 5.1.3: Lookup Expressions:

64
64

Example for Section 5.1.3: Lookup Expressions:

[6, 7, 8]

Example for Section 5.1.3: Lookup Expressions:

7
7

Example for Section 5.1.3: Lookup Expressions:

[58]
58

Example for Section 5.1.3: Lookup Expressions:

["c", "d"]

Example for Section 5.1.3: Lookup Expressions:

<<(2 --> "c"), (3 --> "d")>>

Example for Section 5.1.3: Lookup Expressions:

["a", "b", "c"]

Example for Section 5.1.3: Lookup Expressions:

[["telephone", key := 5]]
[["telephone", star := "*"]]
[["telephone", filter := type integer]]
[["telephone", lower := 5, upper := 7]]
[[[["telephone", lower := 5, upper := 7], lower := 8, upper := 9]]]

Example for Section 5.1.6: Pointer Field Reference Expressions:

5

Example for Section 5.1.6: Pointer Field Reference Expressions:

["tulip", "pedal"]

Example for Section 5.1.8: Statement Block Expressions:

4294967296

Example for Section 5.1.9: New Expressions:

12
13

Example for Section 5.1.9: New Expressions:

17

Example for Section 5.1.10: Routine Expressions:

[2, 4, 6]
[1, 4, 9]

Example for Section 5.1.11: Tagalong Expressions:

5
157

Example for Section 5.1.12: Lepton Key Expressions:

five

Example for Section 5.1.13: Quark Expressions:

false
true

Example for Section 5.1.14: Lock Expressions:

locks: Anonymous lock (declared at "tests/manual_examples.salm":309:16) grabbed [1].
p1()
locks: Anonymous lock (declared at "tests/manual_examples.salm":309:16) released [0].
locks: Anonymous lock (declared at "tests/manual_examples.salm":309:16) grabbed [1].
p1()
locks: Anonymous lock (declared at "tests/manual_examples.salm":309:16) released [0].

Example for Section 5.1.15: Construct Expressions:

7

Example for Section 5.1.16: Type Value Expressions:

true
false

Example for Section 5.1.17: Map List Expressions:

red
default
fifteen
integer

Example for Section 5.1.18: Semi-Labeled Expression List Expressions:

15
taxicab
taxicab

Example for Section 5.1.19: Call Expressions:

20

Example for Section 5.1.19: Call Expressions:

30

Example for Section 5.1.19: Call Expressions:

[[]]
[[12, "beach"]]
[[12, c := "beach"]]

Example for Section 5.1.19: Call Expressions:

[[18, tree := "oak"]]

Example for Section 5.1.19: Call Expressions:

["soap", [23, car := "Sentra"]]

Example for Section 5.1.19: Call Expressions:

[23, car := "Sentra"]

Example for Section 5.1.19: Call Expressions:

[a := 23, car := "Sentra"]

Example for Section 5.1.19: Call Expressions:

[a := 23, car := "Sentra"]

Example for Section 5.1.21: Unary Expressions:

[]

Example for Section 5.1.21: Unary Expressions:

[15]

Example for Section 5.1.21.2: Location-Of Expressions:

5
7

Example for Section 5.1.21.2: Location-Of Expressions:

15
17

Example for Section 5.1.21.2: Location-Of Expressions:

40
47

Example for Section 5.1.21.2: Location-Of Expressions:

["yesterday"]

Example for Section 5.1.21.2: Location-Of Expressions:

operator* arguments: ["yesterday", 15]

Example for Section 5.1.21.2: Location-Of Expressions:

[]

Example for Section 5.1.21.2: Location-Of Expressions:

operator* arguments: [17]

Example for Section 5.1.21.2: Location-Of Expressions:

[b := 2, a := 1]
2
[b := 3, a := 1]
3
[b := 3, a := 1, c := 4]

Example for Section 5.1.21.2: Location-Of Expressions:

["yesterday", field := "a"]

Example for Section 5.1.21.2: Location-Of Expressions:

operator-> arguments: ["yesterday", field := "a", 15]

Example for Section 5.1.21.2: Location-Of Expressions:

[field := "a"]

Example for Section 5.1.21.2: Location-Of Expressions:

operator-> arguments: [field := "a", 17]

Example for Section 5.1.22: Binary Expressions:

true

Example for Section 5.1.22: Binary Expressions:

[15, 16]

Example for Section 5.1.22.1: Add Expressions:

31

Example for Section 5.1.22.1: Add Expressions:

c
e

Example for Section 5.1.22.1: Add Expressions:

["b", "c"]
["d", "e"]

Example for Section 5.1.22.2: Subtract Expressions:

-1

Example for Section 5.1.22.2: Subtract Expressions:

e
c

Example for Section 5.1.22.2: Subtract Expressions:

["d", "e"]
["b", "c"]

Example for Section 5.1.22.2: Subtract Expressions:

3

Example for Section 5.1.22.2: Subtract Expressions:

2

Example for Section 5.1.22.3: Multiply Expressions:

64

Example for Section 5.1.22.4: Divide Expressions:

6

Example for Section 5.1.22.4: Divide Expressions:

17/3

Example for Section 5.1.22.5: Divide-Force Expressions:

6

Example for Section 5.1.22.5: Divide-Force Expressions:

5

Example for Section 5.1.22.5: Divide-Force Expressions:

-5

Example for Section 5.1.22.6: Remainder Expressions:

0

Example for Section 5.1.22.6: Remainder Expressions:

2

Example for Section 5.1.22.6: Remainder Expressions:

-2

Example for Section 5.1.22.7: Left Shift Expressions:

12

Example for Section 5.1.22.7: Left Shift Expressions:

-12

Example for Section 5.1.22.7: Left Shift Expressions:

1

Example for Section 5.1.22.7: Left Shift Expressions:

-2

Example for Section 5.1.22.8: Right Shift Expressions:

12

Example for Section 5.1.22.8: Right Shift Expressions:

-12

Example for Section 5.1.22.8: Right Shift Expressions:

1

Example for Section 5.1.22.8: Right Shift Expressions:

-2

Example for Section 5.1.22.9: Less-Than Expressions:

true

Example for Section 5.1.22.9: Less-Than Expressions:

false

Example for Section 5.1.22.9: Less-Than Expressions:

false

Example for Section 5.1.22.9: Less-Than Expressions:

false
true

Example for Section 5.1.22.10: Greater-Than Expressions:

false

Example for Section 5.1.22.10: Greater-Than Expressions:

false

Example for Section 5.1.22.10: Greater-Than Expressions:

true

Example for Section 5.1.22.11: Less-Than-Or-Equal Expressions:

true

Example for Section 5.1.22.11: Less-Than-Or-Equal Expressions:

true

Example for Section 5.1.22.11: Less-Than-Or-Equal Expressions:

false

Example for Section 5.1.22.12: Greater-Than-Or-Equal Expressions:

false

Example for Section 5.1.22.12: Greater-Than-Or-Equal Expressions:

true

Example for Section 5.1.22.12: Greater-Than-Or-Equal Expressions:

true

Example for Section 5.1.22.13: Equal Expressions:

true

Example for Section 5.1.22.13: Equal Expressions:

false

Example for Section 5.1.22.14: Not-Equal Expressions:

false

Example for Section 5.1.22.14: Not-Equal Expressions:

true

Example for Section 5.1.22.15: Bitwise And Expressions:

51

Example for Section 5.1.22.15: Bitwise And Expressions:

-4

Example for Section 5.1.22.16: Bitwise Or Expressions:

255

Example for Section 5.1.22.16: Bitwise Or Expressions:

-1

Example for Section 5.1.22.17: Bitwise Xor Expressions:

204

Example for Section 5.1.22.17: Bitwise Xor Expressions:

3

Example for Section 5.1.22.18: Logical-And Expressions:

f1()
f1()
true
f1()
f2()
false
f2()
false
f2()
false

Example for Section 5.1.22.19: Logical-Or Expressions:

f1()
true
f1()
true
f2()
f1()
true
f2()
f2()
false

Example for Section 5.1.22.20: Concatenate Expressions:

ab
abc
abc
abcd

Example for Section 5.1.22.20: Concatenate Expressions:

[1, 2, 3, 4, 5, 6]
[a := 1, 2, 3, 4, 5, 6]
[a := 1, 2, 3, b := 4, 5, 6]
[a := 1, 2, 3, 4, 5, 6]
[a := 1, 2, 3, 4, 4, 4]

Example for Section 5.1.23: Arguments Expressions:

[]
[13, "purple"]
[a := 13, "purple"]

Example for Section 5.1.23: Arguments Expressions:

[a := 13, "purple"]
["gold"]

Example for Section 5.1.24: This Expressions:

12
swallow

Example for Section 5.1.24: This Expressions:

50
62

Example for Section 5.1.25: In Expressions:

true
false

Example for Section 5.1.26: Force Expressions:

15

Example for Section 5.1.26: Force Expressions:

-15

Example for Section 5.1.26: Force Expressions:

0
1
1
4
2
3
3
2

Example for Section 5.1.26: Force Expressions:

<<(*: [0...4] --> "blue")>>
<<(1 --> "blue"), (2 --> "red")>>
<<(0 --> "a"), (2 --> "b"), (3 --> "c"), (4 --> "d")>>

Example for Section 5.1.26: Force Expressions:

<<(*: [0...4] --> "green")>>

Example for Section 5.1.26: Force Expressions:

<<(*: integer --> "blue")>>
<<(1 --> "blue"), (2 --> "red")>>
<<(2 --> "b"), (4 --> "d")>>

Example for Section 5.1.26: Force Expressions:

<<(*: integer --> 3)>>

Example for Section 5.1.26: Force Expressions:

<<>>
<<(5 --> [a := 3, b := "hello"])>>
<<>>
<<(5 --> [a := 3, b := "hello"])>>
<<(5 --> [a := 3, b := "hello", c := 17])>>

Example for Section 5.1.26: Force Expressions:

<<>>
<<(5 --> [a := 3, b := "hello"])>>
<<>>
<<(5 --> [a := 3, b := "hello", c := 17])>>

Example for Section 5.1.26: Force Expressions:

<<(5 --> l1[a := 3])>>
<<(5 --> l1[a := 3, b := "hello"])>>
<<(5 --> l1[a := 3])>>
<<(5 --> l1[a := 3, b := "hello"])>>
<<(5 --> l1[a := 3, b := "hello", c := 17])>>

Example for Section 5.1.26: Force Expressions:

<<(5 --> [a := 3])>>
<<(5 --> [a := 3, b := "hello"])>>
<<(5 --> [a := 3])>>
<<(5 --> [a := 3, b := "hello"])>>
<<(5 --> [a := 3, b := "hello", c := 17])>>

Example for Section 5.1.26: Force Expressions:

[1, 2]
[1, 2]
[1, 2, 3]
[1, 2, c := 3]
[1, 2, 3]
[1, 2, 3]
[1, b := 2, 3]
[1, b := 11, 11]
[1, 2, 3, b := 2]
[b := 2, c := 3]

Example for Section 5.1.26: Force Expressions:

[type integer]

Example for Section 5.1.26: Force Expressions:

[31/2, type integer]

Example for Section 5.1.27: Break Expressions:

0123456789
01234

Example for Section 5.1.27: Break Expressions:

0123456

Example for Section 5.1.27: Break Expressions:

[0, 0][0, 1][0, 2][0, 3][1, 0][1, 1]

Example for Section 5.1.27: Break Expressions:

abcd
ab

Example for Section 5.1.27: Break Expressions:

0123456789
01234

Example for Section 5.1.27: Break Expressions:

0123456789
01234

Example for Section 5.1.28: Continue Expressions:

0123456789
012346789

Example for Section 5.1.28: Continue Expressions:

012345689

Example for Section 5.1.28: Continue Expressions:

[0, 0][0, 1][1, 0][1, 1][2, 0][2, 1][3, 0][3, 1]

Example for Section 5.1.28: Continue Expressions:

abcd
abd

Example for Section 5.1.28: Continue Expressions:

0123456789
012346789

Example for Section 5.1.28: Continue Expressions:

0123456789
012346789

Example for Section 5.1.29: Comprehend Expressions:

[0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
[0, 9, 36, 81]
[0, 4, 36]

Example for Section 5.2.1: Assign Statements:

5
17

Example for Section 5.2.1: Assign Statements:

5
22

Example for Section 5.2.1: Assign Statements:

5
7

Example for Section 5.2.1: Assign Statements:

5
6
17
18

Example for Section 5.2.1: Assign Statements:

5
6
6
5

Example for Section 5.2.1: Assign Statements:

5
6
17
18

Example for Section 5.2.1: Assign Statements:

5
6
18
19

Example for Section 5.2.1: Assign Statements:

5
6
18
17

Example for Section 5.2.1: Assign Statements:

5
6
5
19

Example for Section 5.2.1: Assign Statements:

18

Example for Section 5.2.1: Assign Statements:

[5, 17]

Example for Section 5.2.2: Increment Statements:

5
6

Example for Section 5.2.2: Increment Statements:

5
[5, 1]

Example for Section 5.2.3: Decrement Statements:

5
4

Example for Section 5.2.3: Decrement Statements:

5
[5, 1]

Example for Section 5.2.4: Call Statements:

[]
[13]
[13, 15]
[13, b := 15]

Example for Section 5.2.11: If Statements:

done

Example for Section 5.2.11: If Statements:

yes
done

Example for Section 5.2.11: If Statements:

no
done

Example for Section 5.2.11: If Statements:

yes
done

Example for Section 5.2.11: If Statements:

yes
done

Example for Section 5.2.11: If Statements:

yes
done

Example for Section 5.2.11: If Statements:

no
done

Example for Section 5.2.11: If Statements:

yes
done

Example for Section 5.2.11: If Statements:

maybe
done

Example for Section 5.2.11: If Statements:

maybe
done

Example for Section 5.2.11: If Statements:

done

Example for Section 5.2.12: Switch Statements:

0: zero
1: one
2: two or three
3: two or three
4: zero through 5
5: zero through 5
6: integer
7: positive_odd
8: integer
9: positive_odd
10: integer
-1: integer
-2: integer
53/10: something else
[53/10]: something else

Example for Section 5.2.15: For Statements:

17
20
23

Example for Section 5.2.16: Iterate Statements:

a
b
c

Example for Section 5.2.16: Iterate Statements:

a
b
c
d

Example for Section 5.2.16: Iterate Statements:

0
3
6
9

Example for Section 5.2.16: Iterate Statements:

1
3
5

Example for Section 5.2.17: While Statements:

0123456789

Example for Section 5.2.17: While Statements:

0123456789

Example for Section 5.2.17: While Statements:

0123456789

Example for Section 5.2.18: Do-While Statements:

0123456789

Example for Section 5.2.18: Do-While Statements:

0123456789

Example for Section 5.2.18: Do-While Statements:

yes!

Example for Section 5.2.19: Break Statements:

01234

Example for Section 5.2.20: Continue Statements:

012346789

Example for Section 5.2.21: Label Statements:

0123456789

Example for Section 5.2.21: Label Statements:

Entering p1(5).
Entering p1(25).
Leaving p1(5).

Example for Section 5.2.21: Label Statements:

01234689

Example for Section 5.2.26: Cleanup Statements:

A
C
B

Example for Section 5.2.26: Cleanup Statements:

A
C
B
B

Example for Section 5.2.26: Cleanup Statements:

A
C
B
D

Example for Section 5.2.30: Include Statements:

The file "other.salm" has been included.
It prints a couple of lines of text.

Example for Section 5.5.3: Tagalong Declarations:

[t1 := 2, t2 := 2]
[t1 := 3, t2 := 4]
[t1 := 3, t2 := 4]
[t1 := 3, t2 := 6]
[t1 := 5, t2 := 6]

Example for Section 6.1: Core:

-2

Example for Section 6.1: Core:

5

