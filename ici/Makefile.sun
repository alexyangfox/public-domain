#
# For compiling a standard version on a Sun using gcc.
#
FLAVOUR = sun
VERSION = "`awk '{print $$1}' VERSION`"

TARGET  = ici.$(FLAVOUR)
LIB     = lib$(FLAVOUR).a
CONFIG  = conf-$(FLAVOUR).h

CC      = gcc -pipe
LIBS    = -lm -ltermcap
CFLAGS  = -g -O2 -DCONFIG_FILE='"$(CONFIG)"' -I. -Wall -D__USE_FIXED_PROTOTYPES__
LDFLAGS =
RANLIB  = ranlib
RM      = rm -f

#
# For installing...
#
PREFIX  = /usr/local
BINDIR  = $(PREFIX)/bin
MANDIR  = $(PREFIX)/man/man1
INSTALL = install -c

#
# The remainder of this makefile is pretty well generic...
#
OBJS    = \
	alloc.o aplfuncs.o arith.o array.o call.o \
	catch.o cfunc.o cfunco.o clib.o clib2.o \
	compile.o conf.o control.o crc.o exec.o \
	exerror.o file.o findpath.o \
	float.o forall.o \
	func.o handle.o icimain.o init.o int.o \
	lex.o load.o main.o \
	mark.o mem.o method.o \
	mkvar.o null.o \
	object.o oofuncs.o op.o parse.o pc.o \
	ptr.o refuncs.o regexp.o set.o sfile.o \
	signals.o smash.o src.o sstring.o string.o \
	struct.o syserr.o \
	thread.o trace.o unary.o uninit.o \
	wrap.o buf.o strtol.o \
	idb.o idb2.o

PCREOBJS=\
	study.o maketables.o pcre.o

$(TARGET): $(LIB)
	$(CC) $(LDFLAGS) -o $@ $(LIB) $(LIBS)

.PRECIOUS: $(LIB)

$(LIB)  : $(OBJS) $(PCREOBJS)
	$(AR) r $@ $(OBJS) $(PCREOBJS)
	$(RANLIB) $@

study.o : pcre/study.c
	$(CC) -c -o $@ $(CFLAGS) pcre/study.c

maketables.o    : pcre/maketables.c
	$(CC) -c -o $@ $(CFLAGS) pcre/maketables.c

pcre.o  : pcre/pcre.c
	$(CC) -c -o $@ $(CFLAGS) pcre/pcre.c

#
# This doesn't work for gmake...
#
#       $(CC) -c $(CFLAGS) $(?:.o=.c)
#       $(AR) r $@ $?
#       $(RANLIB) $@
#       $(RM) $?


# Headers that are potentially used in module writing are made public
ICIHDRS=\
	alloc.h array.h buf.h catch.h conf-$(FLAVOUR).h exec.h file.h float.h\
	forall.h func.h fwd.h int.h mark.h mem.h null.h object.h op.h\
	parse.h pc.h primes.h ptr.h re.h set.h src.h str.h struct.h\
	trace.h wrap.h

PCREHDRS=\
	pcre/internal.h\
	pcre/pcre.h

# Useful public documentation
DOCS=\
	doc/ici-a4.ps doc/ici-ltr.ps doc/ici.txt

# Install the init file, headers and docs.
install: $(TARGET) $(LIB)
	@echo '=========================================='
	@echo 'Installing ici interpreter and manual page'
	@echo '=========================================='
	$(INSTALL) $(TARGET) $(BINDIR)/ici-$(VERSION)
	-rm -f $(BINDIR)/ici
	ln -s ici-$(VERSION) $(BINDIR)/ici
	$(INSTALL) doc/ici.1 $(MANDIR)
	@echo '=========================================='
	@echo 'Creating installation directories'
	@echo '=========================================='
	-mkdir -p $(PREFIX)/lib/ici
	-mkdir -p $(PREFIX)/include/ici
	-mkdir -p $(PREFIX)/include/ici/pcre
	-mkdir -p $(PREFIX)/share/doc/ici
	@echo '=========================================='
	@echo 'Installing ici library'
	@echo '=========================================='
	$(INSTALL) -c -m 444 $(LIB) $(PREFIX)/lib/libici.a
	@echo '=========================================='
	@echo 'Startup file'
	@echo '=========================================='
	$(INSTALL) -c -m 444 ici_init.ici $(PREFIX)/lib/ici
	@echo '=========================================='
	@echo 'Headers'
	@echo '=========================================='
	$(INSTALL) -c -m 444 $(ICIHDRS) $(PREFIX)/include/ici
	$(INSTALL) -c -m 444 $(PCREHDRS) $(PREFIX)/include/ici/pcre
	@echo '=========================================='
	@echo 'Documentation'
	@echo '=========================================='
	$(INSTALL) -c -m 444 $(DOCS) $(PREFIX)/share/doc/ici
	@echo '=========================================='
	@echo 'Install done'
	@echo '=========================================='

clean:
	$(RM) $(TARGET) $(LIB) $(OBJS) $(PCREOBJS)

#
# No mention of fwd.h or alloc.h, but everything depends on it.
#
alloc.o        : trace.h
arith.o        : exec.h float.h int.h op.h parse.h ptr.h str.h struct.h buf.h binop.h
array.o        : ptr.h exec.h op.h int.h buf.h
call.o         : buf.h exec.h func.h int.h float.h str.h null.h op.h
catch.o        : exec.h catch.h op.h func.h
cfunc.o        : exec.h func.h str.h int.h float.h struct.h set.h op.h ptr.h buf.h file.h re.h null.h parse.h mem.h
clib.o         : file.h func.h op.h int.h float.h str.h buf.h exec.h
clib2.o        : buf.h func.h
compile.o      : parse.h array.h op.h str.h
conf.o         : func.h
control.o      : exec.h op.h int.h buf.h pc.h struct.h null.h forall.h catch.h
exec.o         : exec.h op.h catch.h ptr.h func.h str.h buf.h pc.h int.h struct.h set.h parse.h float.h re.h src.h null.h forall.h trace.h binop.h
exerror.o      : str.h buf.h
file.o         : file.h
float.o        : float.h
forall.o       : exec.h struct.h set.h forall.h str.h buf.h
func.o         : func.h exec.h ptr.h struct.h op.h pc.h str.h catch.h buf.h mark.h null.h
icimain.o      : ptr.h exec.h file.h str.h struct.h buf.h wrap.h func.h
init.o         : func.h buf.h struct.h
int.o          : int.h
lex.o          : parse.h file.h buf.h src.h array.h trace.h
mark.o         : mark.h
mem.o          : mem.h int.h buf.h
mkvar.o        : exec.h struct.h
null.o         : null.h
object.o       : exec.h buf.h int.h str.h float.h func.h
op.o           : op.h exec.h
parse.o        : parse.h func.h str.h struct.h buf.h file.h op.h exec.h
pc.o           : exec.h pc.h
ptr.o          : exec.h ptr.h struct.h int.h op.h buf.h
regexp.o       : str.h re.h exec.h op.h buf.h
set.o          : object.h set.h op.h int.h buf.h null.h
sfile.o        : file.h
smash.o        :
src.o          : exec.h src.h
string.o       : str.h struct.h exec.h int.h
struct.o       : struct.h ptr.h exec.h func.h op.h int.h buf.h str.h pc.h
syserr.o       :
trace.o        : func.h object.h trace.h file.h set.h struct.h array.h re.h str.h int.h float.h exec.h op.h
unary.o        : exec.h float.h int.h op.h parse.h buf.h null.h
wrap.o         : wrap.h
