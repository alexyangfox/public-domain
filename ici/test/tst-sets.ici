/*
 * Work sets with random data.
 */
auto victim     = [set];
auto state      = [struct];
auto i;
auto e;
auto v;

for (i = 0; i < 100; ++i)
{
    switch (int(rand() * 2))
    {
    case 0:
        /*
         * Add a random element, give it a distinct value, and record
         * that it should be present.
         */
        e = int(rand() * 100);
        victim.(e) = 1;
        state.(e) = 1;
        break;

    case 1:
        /*
         * Delete a random element, and record that it should be absent.
         */
        e = int(rand() * 100);
        victim.(e) = 0;
        state.(e) = 0;
        break;
    }
    /*
     * Check the state of the victim against the recorded state.
     */
    forall (v, e in state)
    {
        if (v)
        {
            if (!victim.(e))
                fail(sprintf("element absent at pass %d of sets test", i));
        }
        else
        {
            if (victim.(e) != NULL)
                fail(sprintf("element present at pass %d of sets test", i));
        }
    }
}
