incs := [array
    argv[1],
    "fwd.h",
    "object.h",
    "alloc.h",
    "buf.h",
    "catch.h",
    "cfunc.h",
    "array.h",
    "int.h",
    "float.h",
    "exec.h",
    "file.h",
    "forall.h",
    "func.h",
    "handle.h",
    "mark.h",
    "mem.h",
    "method.h",
    "null.h",
    "op.h",
    "parse.h",
    "pc.h",
    "profile.h",
    "ptr.h",
    "re.h",
    "set.h",
    "src.h",
    "str.h",
    "struct.h",
    "trace.h",
    "wrap.h",
];

icih := array
(
    "/*\n"
    " * ici.h - ICI exports for C and C++ interfacing to ICI.\n"
    " *\n"
    " * This file is automatically generated from internal ICI include files.\n"
    " * It is platform specific. ",
        sprintf("This file is based on \"%s\".\n", argv[1]),
    " */\n"
    "\n"
    "#ifndef ICI_ICI_H\n"
    "#define ICI_ICI_H\n"
    "\n"
    "#ifdef __cplusplus\n"
    "extern \"C\" {\n"
    "#endif\n"
    "\n"
);

forall (i in incs)
{
    t = getfile(f = fopen(i));
    close(f);
    bits = smash(t, #(?s)--ici.h-start--.*?\*/(.*?)(/\*[^/]*--ici.h-end--[^/]*\*/)#, "\\1");
    /*printf("%s: %d\n", i, nels(bits));*/
    if (nels(bits) == 0)
        continue;
    push(icih, sprintf("\n/* From %s */\n", i));
    forall (b in bits)
        push(icih, b);
}
push(icih, "\n#ifdef __cplusplus\n}\n#endif\n");
push(icih, "\n#endif /* ICI_ICI_H */\n");

put(implode(icih), fopen("ici.h", "w"));
