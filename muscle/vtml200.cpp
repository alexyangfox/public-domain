#include "myutils.h"
#include "params.h"
#include "mx.h"

static const char Alphabet[] = "*ACBEDGFIHKMLNQPSRTWVYXZ";

static float VTML200[24][24] =
	{
//                     *           A           C           B           E           D           G           F           I           H           K           M           L           N           Q           P           S           R           T           W           V           Y           X           Z   
/* * */ 	{   1.00000f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  -2.14412f,  },  // *
/* A */ 	{  -2.14412f,   1.27050f,   0.38974f,  -0.27673f,  -0.19867f,  -0.31261f,   0.12054f,  -0.90709f,  -0.34607f,  -0.52789f,  -0.33529f,  -0.36874f,  -0.58882f,  -0.24086f,  -0.23426f,  -0.02984f,   0.43950f,  -0.50403f,   0.26899f,  -1.46834f,   0.08458f,  -0.94004f,  -0.22144f,  -0.21646f,  },  // A
/* C */ 	{  -2.14412f,   0.38974f,   4.09021f,  -1.07334f,  -1.33958f,  -1.43011f,  -0.66383f,  -1.09451f,  -0.07251f,  -0.62004f,  -1.19817f,  -0.17045f,  -0.93204f,  -0.71657f,  -1.15116f,  -0.94643f,   0.24183f,  -0.88006f,  -0.04042f,  -1.90296f,   0.27281f,  -0.14920f,  -0.41567f,  -1.24537f,  },  // C
/* B */ 	{  -2.14412f,  -0.27673f,  -1.07334f,   1.44625f,   0.62834f,   1.51998f,  -0.09427f,  -1.70691f,  -1.47832f,   0.18532f,   0.10948f,  -1.10267f,  -1.52921f,   1.37252f,   0.20707f,  -0.46143f,   0.21194f,  -0.39182f,  -0.03416f,  -1.78786f,  -1.16305f,  -1.03504f,  -0.39501f,   0.41771f,  },  // B
/* E */ 	{  -2.14412f,  -0.19867f,  -1.33958f,   0.62834f,   1.72231f,   1.07158f,  -0.42186f,  -1.68167f,  -1.29083f,  -0.11321f,   0.44918f,  -0.96374f,  -1.19946f,   0.18510f,   0.76502f,  -0.31301f,  -0.04265f,  -0.30179f,  -0.21547f,  -2.14412f,  -0.94246f,  -0.99105f,  -0.39832f,   1.24367f,  },  // E
/* D */ 	{  -2.14412f,  -0.31261f,  -1.43011f,   1.51998f,   1.07158f,   2.16491f,  -0.17652f,  -2.11361f,  -1.70692f,   0.00141f,   0.01767f,  -1.30914f,  -1.78384f,   0.87506f,   0.24389f,  -0.34146f,   0.01817f,  -0.73519f,  -0.21635f,  -2.01380f,  -1.27342f,  -1.49068f,  -0.52555f,   0.65773f,  },  // D
/* G */ 	{  -2.14412f,   0.12054f,  -0.66383f,  -0.09427f,  -0.42186f,  -0.17652f,   2.56134f,  -1.81830f,  -1.92826f,  -0.69337f,  -0.61360f,  -1.48557f,  -1.80470f,  -0.01201f,  -0.65838f,  -0.77937f,   0.02708f,  -0.70762f,  -0.60471f,  -1.53710f,  -1.37413f,  -1.57053f,  -0.70704f,  -0.54012f,  },  // G
/* F */ 	{  -2.14412f,  -0.90709f,  -1.09451f,  -1.70691f,  -1.68167f,  -2.11361f,  -1.81830f,   2.69857f,   0.11932f,   0.00771f,  -1.52998f,   0.49535f,   0.58188f,  -1.30021f,  -1.11735f,  -1.33007f,  -0.86039f,  -1.33366f,  -0.86519f,   0.99550f,  -0.17466f,   1.80631f,  -0.47110f,  -1.39951f,  },  // F
/* I */ 	{  -2.14412f,  -0.34607f,  -0.07251f,  -1.47832f,  -1.29083f,  -1.70692f,  -1.92826f,   0.11932f,   1.68532f,  -1.04887f,  -1.08670f,   0.81613f,   0.92497f,  -1.24971f,  -0.97644f,  -1.25225f,  -0.91516f,  -1.12248f,  -0.20395f,  -0.59360f,   1.28867f,  -0.57502f,  -0.47672f,  -1.13364f,  },  // I
/* H */ 	{  -2.14412f,  -0.52789f,  -0.62004f,   0.18532f,  -0.11321f,   0.00141f,  -0.69337f,   0.00771f,  -1.04887f,   2.74000f,   0.02970f,  -0.91999f,  -0.76522f,   0.36923f,   0.52195f,  -0.51186f,  -0.12069f,   0.31316f,  -0.29109f,  -0.33235f,  -0.93001f,   0.87942f,  -0.10060f,   0.20437f,  },  // H
/* K */ 	{  -2.14412f,  -0.33529f,  -1.19817f,   0.10948f,   0.44918f,   0.01767f,  -0.61360f,  -1.52998f,  -1.08670f,   0.02970f,   1.54559f,  -0.57984f,  -0.98029f,   0.20128f,   0.61110f,  -0.30816f,  -0.11746f,   1.26077f,  -0.13056f,  -1.38853f,  -0.90785f,  -0.98717f,  -0.30242f,   0.53014f,  },  // K
/* M */ 	{  -2.14412f,  -0.36874f,  -0.17045f,  -1.10267f,  -0.96374f,  -1.30914f,  -1.48557f,   0.49535f,   0.81613f,  -0.91999f,  -0.57984f,   2.16080f,   1.12881f,  -0.89620f,  -0.39516f,  -1.12223f,  -0.73394f,  -0.61996f,  -0.20474f,  -1.02449f,   0.50346f,  -0.54457f,  -0.31171f,  -0.67945f,  },  // M
/* L */ 	{  -2.14412f,  -0.58882f,  -0.93204f,  -1.52921f,  -1.19946f,  -1.78384f,  -1.80470f,   0.58188f,   0.92497f,  -0.76522f,  -0.98029f,   1.12881f,   1.70089f,  -1.27458f,  -0.70930f,  -0.95178f,  -0.96641f,  -0.97336f,  -0.56509f,  -0.31715f,   0.57839f,  -0.19955f,  -0.45483f,  -0.95438f,  },  // L
/* N */ 	{  -2.14412f,  -0.24086f,  -0.71657f,   1.37252f,   0.18510f,   0.87506f,  -0.01201f,  -1.30021f,  -1.24971f,   0.36923f,   0.20128f,  -0.89620f,  -1.27458f,   1.86999f,   0.17025f,  -0.58140f,   0.40571f,  -0.04846f,   0.14804f,  -1.56192f,  -1.05267f,  -0.57940f,  -0.26447f,   0.17768f,  },  // N
/* Q */ 	{  -2.14412f,  -0.23426f,  -1.15116f,   0.20707f,   0.76502f,   0.24389f,  -0.65838f,  -1.11735f,  -0.97644f,   0.52195f,   0.61110f,  -0.39516f,  -0.70930f,   0.17025f,   1.65158f,  -0.17646f,  -0.02282f,   0.59472f,  -0.12635f,  -1.84734f,  -0.76033f,  -1.01881f,  -0.23178f,   1.20830f,  },  // Q
/* P */ 	{  -2.14412f,  -0.02984f,  -0.94643f,  -0.46143f,  -0.31302f,  -0.34146f,  -0.77937f,  -1.33007f,  -1.25225f,  -0.51186f,  -0.30816f,  -1.12223f,  -0.95178f,  -0.58140f,  -0.17646f,   2.94315f,   0.03557f,  -0.46608f,  -0.30685f,  -1.46724f,  -0.87215f,  -1.70088f,  -0.52394f,  -0.24474f,  },  // P
/* S */ 	{  -2.14412f,   0.43950f,   0.24183f,   0.21194f,  -0.04265f,   0.01817f,   0.02708f,  -0.86039f,  -0.91516f,  -0.12069f,  -0.11746f,  -0.73394f,  -0.96641f,   0.40571f,  -0.02282f,   0.03557f,   1.19858f,  -0.27658f,   0.64568f,  -1.20486f,  -0.61129f,  -0.61907f,  -0.17396f,  -0.03274f,  },  // S
/* R */ 	{  -2.14412f,  -0.50403f,  -0.88006f,  -0.39182f,  -0.30179f,  -0.73519f,  -0.70762f,  -1.33366f,  -1.12248f,   0.31316f,   1.26077f,  -0.61996f,  -0.97336f,  -0.04846f,   0.59472f,  -0.46608f,  -0.27658f,   2.19770f,  -0.35063f,  -1.12749f,  -1.02725f,  -0.79620f,  -0.34522f,   0.14646f,  },  // R
/* T */ 	{  -2.14412f,   0.26899f,  -0.04042f,  -0.03416f,  -0.21547f,  -0.21635f,  -0.60471f,  -0.86519f,  -0.20395f,  -0.29109f,  -0.13056f,  -0.20474f,  -0.56509f,   0.14804f,  -0.12635f,  -0.30685f,   0.64568f,  -0.35063f,   1.48276f,  -1.77098f,  -0.02967f,  -0.84420f,  -0.21104f,  -0.17091f,  },  // T
/* W */ 	{  -2.14412f,  -1.46834f,  -1.90296f,  -1.78786f,  -2.14412f,  -2.01380f,  -1.53710f,   0.99550f,  -0.59360f,  -0.33235f,  -1.38853f,  -1.02449f,  -0.31715f,  -1.56192f,  -1.84734f,  -1.46724f,  -1.20486f,  -1.12749f,  -1.77098f,   5.04228f,  -1.29824f,   1.31590f,  -0.78234f,  -1.99573f,  },  // W
/* V */ 	{  -2.14412f,   0.08458f,   0.27281f,  -1.16305f,  -0.94246f,  -1.27342f,  -1.37413f,  -0.17466f,   1.28867f,  -0.93001f,  -0.90785f,   0.50346f,   0.57839f,  -1.05267f,  -0.76033f,  -0.87215f,  -0.61129f,  -1.02725f,  -0.02967f,  -1.29824f,   1.49203f,  -0.71029f,  -0.38722f,  -0.85140f,  },  // V
/* Y */ 	{  -2.14412f,  -0.94004f,  -0.14920f,  -1.03504f,  -0.99105f,  -1.49068f,  -1.57053f,   1.80631f,  -0.57502f,   0.87942f,  -0.98717f,  -0.54457f,  -0.19955f,  -0.57940f,  -1.01881f,  -1.70088f,  -0.61907f,  -0.79620f,  -0.84420f,   1.31590f,  -0.71029f,   3.00504f,  -0.33550f,  -1.00493f,  },  // Y
/* X */ 	{  -2.14412f,  -0.22144f,  -0.41567f,  -0.39501f,  -0.39832f,  -0.52555f,  -0.70704f,  -0.47110f,  -0.47672f,  -0.10060f,  -0.30242f,  -0.31171f,  -0.45483f,  -0.26447f,  -0.23178f,  -0.52394f,  -0.17396f,  -0.34522f,  -0.21104f,  -0.78234f,  -0.38722f,  -0.33550f,  -0.38204f,  -0.31505f,  },  // X
/* Z */ 	{  -2.14412f,  -0.21646f,  -1.24537f,   0.41771f,   1.24367f,   0.65773f,  -0.54012f,  -1.39951f,  -1.13364f,   0.20437f,   0.53014f,  -0.67945f,  -0.95438f,   0.17768f,   1.20830f,  -0.24474f,  -0.03274f,   0.14646f,  -0.17091f,  -1.99573f,  -0.85140f,  -1.00493f,  -0.31505f,   1.22598f,  },  // Z
    };

void SetVTML200()
	{
	unsigned N = unsigned(strlen(Alphabet));
	Mx<float> &SubstMxf = GetSubstMxf();
	SubstMxf.Alloc("VTML200", 256, 256);
	SubstMxf.m_Alpha = string(Alphabet);
	SubstMxf.Init(0);
	float **Mx = SubstMxf.GetData();
	for (unsigned i = 0; i < N; ++i)
		{
		for (unsigned j = 0; j < N; ++j)
			{
			float v = VTML200[i][j];
			
			byte ui = (byte) toupper(Alphabet[i]);
			byte uj = (byte) toupper(Alphabet[j]);
			byte li = (byte) tolower(ui);
			byte lj = (byte) tolower(uj);
			ui = (byte) toupper(ui);
			uj = (byte) toupper(uj);

			Mx[ui][uj] = v;
			Mx[uj][ui] = v;

			Mx[ui][lj] = v;
			Mx[uj][li] = v;

			Mx[li][uj] = v;
			Mx[lj][ui] = v;

			Mx[li][lj] = v;
			Mx[lj][li] = v;
			}
		}
	}
